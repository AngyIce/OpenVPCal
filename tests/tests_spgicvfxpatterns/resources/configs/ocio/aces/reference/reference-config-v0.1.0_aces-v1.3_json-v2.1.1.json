{
  "schema_version": {
    "major": 1,
    "minor": 0
  },
  "profile_version": {
    "major": 2,
    "minor": 1
  },
  "name": "Academy Color Encoding System - Reference Config [COLORSPACES v0.1.0] [ACES v1.3] [OCIO v2.1.1]",
  "description": "The \"Academy Color Encoding System\" (ACES v1.3) \"Reference Config\"\n------------------------------------------------------------------\n\nThis \"OpenColorIO\" config is a strict and quasi-analytical implementation of \"aces-dev\" and is designed as a reference to validate the implementation of the \"ampas/aces-dev\" \"GitHub\" \"CTL\" transforms in OpenColorIO. It is not a replacement for the previous \"ACES\" configs nor the \"ACES Studio Config\".\n\nGenerated with \"OpenColorIO-Config-ACES\" v0.1.1-15-geb59486 on the 2022/05/28 at 13:03.",
  "search_path": [],
  "roles": {
    "color_timing": "ACES - ACEScct",
    "compositing_log": "ACES - ACEScct",
    "data": "Utility - Raw",
    "default": "ACES - ACES2065-1",
    "cie_xyz_d65_interchange": "CIE-XYZ-D65",
    "aces_interchange": "ACES - ACES2065-1",
    "reference": "ACES - ACES2065-1",
    "rendering": "ACES - ACEScg",
    "scene_linear": "ACES - ACEScg"
  },
  "colorspaces": [
    {
      "name": "ACES - ACES2065-1",
      "family": "ACES",
      "description": "The \"Academy Color Encoding System\" reference colorspace.",
      "encoding": "scene-linear"
    },
    {
      "name": "CIE-XYZ-D65",
      "description": "The \"CIE XYZ (D65)\" display connection colorspace.",
      "reference_space": "REFERENCE_SPACE_DISPLAY"
    },
    {
      "name": "Utility - Raw",
      "family": "Utility",
      "description": "The utility \"Raw\" colorspace.",
      "is_data": true,
      "categories": [
        "file-io"
      ]
    },
    {
      "name": "ACES - ACEScc",
      "family": "ACES",
      "description": "Convert ACEScc to ACES2065-1\n\nACEStransformID: urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.ACEScc_to_ACES.a1.0.3",
      "to_reference": {
        "transform_type": "BuiltinTransform",
        "style": "ACEScc_to_ACES2065-1"
      },
      "encoding": "log",
      "categories": "file-io",
      "transforms_data": [
        {
          "ordering": "100",
          "aces_transform_id": "urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.ACEScc_to_ACES.a1.0.3",
          "builtin_transform_style": "ACEScc_to_ACES2065-1",
          "linked_display_colorspace_style": "",
          "interface": "ColorSpace",
          "encoding": "log",
          "categories": "file-io",
          "ctl_transform": {
            "py/object": "opencolorio_config_aces.config.reference.discover.classify.CTLTransform",
            "_path": "/home/aswf/OpenColorIO-Config-ACES/opencolorio_config_aces/config/reference/aces-dev/transforms/ctl/csc/ACEScc/ACEScsc.Academy.ACEScc_to_ACES.ctl",
            "_code": "\n// <ACEStransformID>urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.ACEScc_to_ACES.a1.0.3</ACEStransformID>\n// <ACESuserName>ACEScc to ACES2065-1</ACESuserName>\n\n//\n// ACES Color Space Conversion - ACEScc to ACES\n//\n// converts ACEScc (AP1 w/ ACESlog encoding) to \n//          ACES2065-1 (AP0 w/ linear encoding)\n//\n// This transform follows the formulas from section 4.4 in S-2014-003\n//\n\n// *-*-*-*-*-*-*-*-*\n// ACEScc is intended to be transient and internal to software or hardware \n// systems, and is specifically not intended for interchange or archiving.\n// ACEScc should NOT be written into a container file in actual implementations!\n// *-*-*-*-*-*-*-*-*\n\n\n\nimport \"ACESlib.Transform_Common\";\n\n\n\nfloat ACEScc_to_lin( input varying float in)\n{\n  if (in < -0.3013698630) // (9.72-15)/17.52\n    return (pow( 2., in*17.52-9.72) - pow( 2.,-16.))*2.0;\n  else if ( in < (log2(HALF_MAX)+9.72)/17.52 )\n    return pow( 2., in*17.52-9.72);\n  else // (in >= (log2(HALF_MAX)+9.72)/17.52)\n    return HALF_MAX;\n}\n\n\n\nvoid main\n(   \n    input varying float rIn,\n    input varying float gIn,\n    input varying float bIn,\n    input varying float aIn,\n    output varying float rOut,\n    output varying float gOut,\n    output varying float bOut,\n    output varying float aOut\n)\n{\n    float lin_AP1[3];\n    lin_AP1[0] = ACEScc_to_lin( rIn);\n    lin_AP1[1] = ACEScc_to_lin( gIn);\n    lin_AP1[2] = ACEScc_to_lin( bIn);\n\n    float ACES[3] = mult_f3_f44( lin_AP1, AP1_2_AP0_MAT);\n  \n    rOut = ACES[0];\n    gOut = ACES[1];\n    bOut = ACES[2];\n    aOut = aIn;\n}",
            "_aces_transform_id": {
              "py/object": "opencolorio_config_aces.config.reference.discover.classify.ACESTransformID",
              "_aces_transform_id": "urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.ACEScc_to_ACES.a1.0.3",
              "_urn": "urn:ampas:aces:transformId:v1.5",
              "_type": "ACEScsc",
              "_namespace": "Academy",
              "_name": "ACEScc_to_ACES",
              "_major_version_number": "a1",
              "_minor_version_number": "0",
              "_patch_version_number": "3",
              "_source": "ACEScc",
              "_target": "ACES2065-1"
            },
            "_user_name": "ACEScc to ACES2065-1",
            "_description": "ACES Color Space Conversion - ACEScc to ACES\n\nconverts ACEScc (AP1 w/ ACESlog encoding) to\nACES2065-1 (AP0 w/ linear encoding)\n\nThis transform follows the formulas from section 4.4 in S-2014-003\n\n*-*-*-*-*-*-*-*-*\nACEScc is intended to be transient and internal to software or hardware\nsystems, and is specifically not intended for interchange or archiving.\nACEScc should NOT be written into a container file in actual implementations!\n*-*-*-*-*-*-*-*-*",
            "_family": "csc",
            "_genus": "ACEScc"
          }
        }
      ]
    },
    {
      "name": "ACES - ACEScct",
      "family": "ACES",
      "description": "Convert ACEScct to ACES2065-1\n\nACEStransformID: urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.ACEScct_to_ACES.a1.0.3",
      "to_reference": {
        "transform_type": "BuiltinTransform",
        "style": "ACEScct_to_ACES2065-1"
      },
      "encoding": "log",
      "categories": "file-io,working-space",
      "transforms_data": [
        {
          "ordering": "100",
          "aces_transform_id": "urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.ACEScct_to_ACES.a1.0.3",
          "builtin_transform_style": "ACEScct_to_ACES2065-1",
          "linked_display_colorspace_style": "",
          "interface": "ColorSpace",
          "encoding": "log",
          "categories": "file-io,working-space",
          "ctl_transform": {
            "py/object": "opencolorio_config_aces.config.reference.discover.classify.CTLTransform",
            "_path": "/home/aswf/OpenColorIO-Config-ACES/opencolorio_config_aces/config/reference/aces-dev/transforms/ctl/csc/ACEScct/ACEScsc.Academy.ACEScct_to_ACES.ctl",
            "_code": "\n// <ACEStransformID>urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.ACEScct_to_ACES.a1.0.3</ACEStransformID>\n// <ACESuserName>ACEScct to ACES2065-1</ACESuserName>\n\n//\n// ACES Color Space Conversion - ACEScct to ACES\n//\n// converts ACEScct (AP1 w/ ACESlog encoding) to \n//          ACES2065-1 (AP0 w/ linear encoding)\n//\n\n// *-*-*-*-*-*-*-*-*\n// ACEScct is intended to be transient and internal to software or hardware \n// systems, and is specifically not intended for interchange or archiving.\n// ACEScct should NOT be written into a container file in actual implementations!\n// *-*-*-*-*-*-*-*-*\n\n\n\nimport \"ACESlib.Transform_Common\";\n\n\n\nconst float X_BRK = 0.0078125;\nconst float Y_BRK = 0.155251141552511;\nconst float A = 10.5402377416545;\nconst float B = 0.0729055341958355;\n\n\n\nfloat ACEScct_to_lin( input varying float in)\n{\n    if (in > Y_BRK)\n        return pow( 2., in*17.52-9.72);\n    else\n        return (in - B) / A;\n}\n\n\n\nvoid main\n(   \n    input varying float rIn,\n    input varying float gIn,\n    input varying float bIn,\n    input varying float aIn,\n    output varying float rOut,\n    output varying float gOut,\n    output varying float bOut,\n    output varying float aOut\n)\n{\n    float lin_AP1[3];\n    lin_AP1[0] = ACEScct_to_lin( rIn);\n    lin_AP1[1] = ACEScct_to_lin( gIn);\n    lin_AP1[2] = ACEScct_to_lin( bIn);\n\n    float ACES[3] = mult_f3_f44( lin_AP1, AP1_2_AP0_MAT);\n  \n    rOut = ACES[0];\n    gOut = ACES[1];\n    bOut = ACES[2];\n    aOut = aIn;\n}",
            "_aces_transform_id": {
              "py/object": "opencolorio_config_aces.config.reference.discover.classify.ACESTransformID",
              "_aces_transform_id": "urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.ACEScct_to_ACES.a1.0.3",
              "_urn": "urn:ampas:aces:transformId:v1.5",
              "_type": "ACEScsc",
              "_namespace": "Academy",
              "_name": "ACEScct_to_ACES",
              "_major_version_number": "a1",
              "_minor_version_number": "0",
              "_patch_version_number": "3",
              "_source": "ACEScct",
              "_target": "ACES2065-1"
            },
            "_user_name": "ACEScct to ACES2065-1",
            "_description": "ACES Color Space Conversion - ACEScct to ACES\n\nconverts ACEScct (AP1 w/ ACESlog encoding) to\nACES2065-1 (AP0 w/ linear encoding)\n\n*-*-*-*-*-*-*-*-*\nACEScct is intended to be transient and internal to software or hardware\nsystems, and is specifically not intended for interchange or archiving.\nACEScct should NOT be written into a container file in actual implementations!\n*-*-*-*-*-*-*-*-*",
            "_family": "csc",
            "_genus": "ACEScct"
          }
        }
      ]
    },
    {
      "name": "ACES - ACEScg",
      "family": "ACES",
      "description": "Convert ACEScg to ACES2065-1\n\nACEStransformID: urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.ACEScg_to_ACES.a1.0.3",
      "to_reference": {
        "transform_type": "BuiltinTransform",
        "style": "ACEScg_to_ACES2065-1"
      },
      "encoding": "scene-linear",
      "categories": "file-io,working-space",
      "transforms_data": [
        {
          "ordering": "100",
          "aces_transform_id": "urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.ACEScg_to_ACES.a1.0.3",
          "builtin_transform_style": "ACEScg_to_ACES2065-1",
          "linked_display_colorspace_style": "",
          "interface": "ColorSpace",
          "encoding": "scene-linear",
          "categories": "file-io,working-space",
          "ctl_transform": {
            "py/object": "opencolorio_config_aces.config.reference.discover.classify.CTLTransform",
            "_path": "/home/aswf/OpenColorIO-Config-ACES/opencolorio_config_aces/config/reference/aces-dev/transforms/ctl/csc/ACEScg/ACEScsc.Academy.ACEScg_to_ACES.ctl",
            "_code": "\n// <ACEStransformID>urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.ACEScg_to_ACES.a1.0.3</ACEStransformID>\n// <ACESuserName>ACEScg to ACES2065-1</ACESuserName>\n\n//\n// ACES Color Space Conversion - ACEScg to ACES\n//\n// converts ACEScg (AP1 w/ linear encoding) to\n//          ACES2065-1 (AP0 w/ linear encoding)\n//\n\n\n\nimport \"ACESlib.Transform_Common\";\n\n\n\nvoid main\n(   \n    input varying float rIn,\n    input varying float gIn,\n    input varying float bIn,\n    input varying float aIn,\n    output varying float rOut,\n    output varying float gOut,\n    output varying float bOut,\n    output varying float aOut\n)\n{\n    float ACEScg[3] = { rIn, gIn, bIn};\n\n    float ACES[3] = mult_f3_f44( ACEScg, AP1_2_AP0_MAT);\n\n    rOut = ACES[0];\n    gOut = ACES[1];\n    bOut = ACES[2];\n    aOut = aIn;\n}",
            "_aces_transform_id": {
              "py/object": "opencolorio_config_aces.config.reference.discover.classify.ACESTransformID",
              "_aces_transform_id": "urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.ACEScg_to_ACES.a1.0.3",
              "_urn": "urn:ampas:aces:transformId:v1.5",
              "_type": "ACEScsc",
              "_namespace": "Academy",
              "_name": "ACEScg_to_ACES",
              "_major_version_number": "a1",
              "_minor_version_number": "0",
              "_patch_version_number": "3",
              "_source": "ACEScg",
              "_target": "ACES2065-1"
            },
            "_user_name": "ACEScg to ACES2065-1",
            "_description": "ACES Color Space Conversion - ACEScg to ACES\n\nconverts ACEScg (AP1 w/ linear encoding) to\nACES2065-1 (AP0 w/ linear encoding)",
            "_family": "csc",
            "_genus": "ACEScg"
          }
        }
      ]
    },
    {
      "name": "ACES - ADX10",
      "family": "ACES",
      "description": "Convert ADX10 to ACES2065-1\n\nACEStransformID: urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.ADX10_to_ACES.a1.0.3",
      "to_reference": {
        "transform_type": "BuiltinTransform",
        "style": "ADX10_to_ACES2065-1"
      },
      "encoding": "log",
      "categories": "file-io",
      "transforms_data": [
        {
          "ordering": "100",
          "aces_transform_id": "urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.ADX10_to_ACES.a1.0.3",
          "builtin_transform_style": "ADX10_to_ACES2065-1",
          "linked_display_colorspace_style": "",
          "interface": "ColorSpace",
          "encoding": "log",
          "categories": "file-io",
          "ctl_transform": {
            "py/object": "opencolorio_config_aces.config.reference.discover.classify.CTLTransform",
            "_path": "/home/aswf/OpenColorIO-Config-ACES/opencolorio_config_aces/config/reference/aces-dev/transforms/ctl/csc/ADX/ACEScsc.Academy.ADX10_to_ACES.ctl",
            "_code": "\n// <ACEStransformID>urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.ADX10_to_ACES.a1.0.3</ACEStransformID>\n// <ACESuserName>ACES 1.0 Input - ADX10</ACESuserName>\n\n// \n// Universal ADX10 to ACES Transform\n//\n\n\n\n// ============ CONSTANTS ============ //\nconst float CDD_TO_CID[3][3] = {\n    {0.75573, 0.05901, 0.16134},\n    {0.22197, 0.96928, 0.07406},\n    {0.02230, -0.02829, 0.76460}\n};\n\nconst float EXP_TO_ACES[3][3] = {\n    {0.72286, 0.11923, 0.01427},\n    {0.12630, 0.76418, 0.08213},\n    {0.15084, 0.11659, 0.90359}\n};\n\nconst float LUT_1D[11][2] = {\n    {-0.190000000000000, -6.000000000000000},\n    { 0.010000000000000, -2.721718645000000},\n    { 0.028000000000000, -2.521718645000000},\n    { 0.054000000000000, -2.321718645000000},\n    { 0.095000000000000, -2.121718645000000},\n    { 0.145000000000000, -1.921718645000000},\n    { 0.220000000000000, -1.721718645000000},\n    { 0.300000000000000, -1.521718645000000},\n    { 0.400000000000000, -1.321718645000000},\n    { 0.500000000000000, -1.121718645000000},\n    { 0.600000000000000, -0.926545676714876}\n};\n\nconst float REF_PT = (7120.0 - 1520.0) / 8000.0 * (100.0 / 55.0) - log10(0.18);\n\n\n\n\n\nvoid main\n(\n    input varying float rIn,\n    input varying float gIn,\n    input varying float bIn,\n    input varying float aIn,\n    output varying float rOut,\n    output varying float gOut,\n    output varying float bOut,\n    output varying float aOut\n)\n{\n    // Prepare input values based on application bit depth handling\n    float adx[3];\n    adx[0] = rIn * 1023.0;\n    adx[1] = gIn * 1023.0;\n    adx[2] = bIn * 1023.0;\n\n    // Convert ADX10 values to Channel Dependent Density values\n    float cdd[3];\n    cdd[0] = ( adx[0] - 95.0) / 500.0;\n    cdd[1] = ( adx[1] - 95.0) / 500.0;\n    cdd[2] = ( adx[2] - 95.0) / 500.0;\n\n    // Convert Channel Dependent Density values into Channel Independent Density values\n    float cid[3] = mult_f3_f33( cdd, CDD_TO_CID);\n\n    // Convert Channel Independent Density values to Relative Log Exposure values\n    float logE[3];\n    if ( cid[0] <= 0.6) logE[0] = interpolate1D( LUT_1D, cid[0]);\n    if ( cid[1] <= 0.6) logE[1] = interpolate1D( LUT_1D, cid[1]);\n    if ( cid[2] <= 0.6) logE[2] = interpolate1D( LUT_1D, cid[2]);\n\n    if ( cid[0] > 0.6) logE[0] = ( 100.0 / 55.0) * cid[0] - REF_PT;\n    if ( cid[1] > 0.6) logE[1] = ( 100.0 / 55.0) * cid[1] - REF_PT;\n    if ( cid[2] > 0.6) logE[2] = ( 100.0 / 55.0) * cid[2] - REF_PT;\n\n    // Convert Relative Log Exposure values to Relative Exposure values\n    float exp[3];\n    exp[0] = pow( 10, logE[0]);\n    exp[1] = pow( 10, logE[1]);\n    exp[2] = pow( 10, logE[2]);\n\n    // Convert Relative Exposure values to ACES values\n    float aces[3] = mult_f3_f33( exp, EXP_TO_ACES);\n\n\trOut = aces[0];\n\tgOut = aces[1];\n    bOut = aces[2];\n    aOut = aIn;\n}",
            "_aces_transform_id": {
              "py/object": "opencolorio_config_aces.config.reference.discover.classify.ACESTransformID",
              "_aces_transform_id": "urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.ADX10_to_ACES.a1.0.3",
              "_urn": "urn:ampas:aces:transformId:v1.5",
              "_type": "ACEScsc",
              "_namespace": "Academy",
              "_name": "ADX10_to_ACES",
              "_major_version_number": "a1",
              "_minor_version_number": "0",
              "_patch_version_number": "3",
              "_source": "ADX10",
              "_target": "ACES2065-1"
            },
            "_user_name": "ACES 1.0 Input - ADX10",
            "_description": "Universal ADX10 to ACES Transform",
            "_family": "csc",
            "_genus": "ADX"
          }
        }
      ]
    },
    {
      "name": "ACES - ADX16",
      "family": "ACES",
      "description": "Convert ADX16 to ACES2065-1\n\nACEStransformID: urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.ADX16_to_ACES.a1.0.3",
      "to_reference": {
        "transform_type": "BuiltinTransform",
        "style": "ADX16_to_ACES2065-1"
      },
      "encoding": "log",
      "categories": "file-io",
      "transforms_data": [
        {
          "ordering": "100",
          "aces_transform_id": "urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.ADX16_to_ACES.a1.0.3",
          "builtin_transform_style": "ADX16_to_ACES2065-1",
          "linked_display_colorspace_style": "",
          "interface": "ColorSpace",
          "encoding": "log",
          "categories": "file-io",
          "ctl_transform": {
            "py/object": "opencolorio_config_aces.config.reference.discover.classify.CTLTransform",
            "_path": "/home/aswf/OpenColorIO-Config-ACES/opencolorio_config_aces/config/reference/aces-dev/transforms/ctl/csc/ADX/ACEScsc.Academy.ADX16_to_ACES.ctl",
            "_code": "\n// <ACEStransformID>urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.ADX16_to_ACES.a1.0.3</ACEStransformID>\n// <ACESuserName>ACES 1.0 Input - ADX16</ACESuserName>\n\n// \n// Universal ADX16 to ACES Transform\n//\n\n\n\n// ============ CONSTANTS ============ //\nconst float CDD_TO_CID[3][3] = {\n    {0.75573, 0.05901, 0.16134},\n    {0.22197, 0.96928, 0.07406},\n    {0.02230, -0.02829, 0.76460}\n};\n\nconst float EXP_TO_ACES[3][3] = {\n    {0.72286, 0.11923, 0.01427},\n    {0.12630, 0.76418, 0.08213},\n    {0.15084, 0.11659, 0.90359}\n};\n\nconst float LUT_1D[11][2] = {\n    {-0.190000000000000, -6.000000000000000},\n    { 0.010000000000000, -2.721718645000000},\n    { 0.028000000000000, -2.521718645000000},\n    { 0.054000000000000, -2.321718645000000},\n    { 0.095000000000000, -2.121718645000000},\n    { 0.145000000000000, -1.921718645000000},\n    { 0.220000000000000, -1.721718645000000},\n    { 0.300000000000000, -1.521718645000000},\n    { 0.400000000000000, -1.321718645000000},\n    { 0.500000000000000, -1.121718645000000},\n    { 0.600000000000000, -0.926545676714876}\n};\n\nconst float REF_PT = (7120.0 - 1520.0) / 8000.0 * (100.0 / 55.0) - log10(0.18);\n\n\n\n\n\nvoid main\n(\n  input varying float rIn,\n  input varying float gIn,\n  input varying float bIn,\n  input varying float aIn,\n  output varying float rOut,\n  output varying float gOut,\n  output varying float bOut,\n  output varying float aOut\n)\n{\n    // Prepare input values based on application bit depth handling\n    float adx[3];\n    adx[0] = rIn * 65535.0;\n    adx[1] = gIn * 65535.0;\n    adx[2] = bIn * 65535.0;\n\n    // Convert ADX16 values to Channel Dependent Density values\n    float cdd[3];\n    cdd[0] = ( adx[0] - 1520.0) / 8000.0;\n    cdd[1] = ( adx[1] - 1520.0) / 8000.0;\n    cdd[2] = ( adx[2] - 1520.0) / 8000.0;\n\n    // Convert Channel Dependent Density values into Channel Independent Density values\n    float cid[3] = mult_f3_f33( cdd, CDD_TO_CID);\n\n    // Convert Channel Independent Density values to Relative Log Exposure values\n    float logE[3];\n    if ( cid[0] <= 0.6) logE[0] = interpolate1D( LUT_1D, cid[0]);\n    if ( cid[1] <= 0.6) logE[1] = interpolate1D( LUT_1D, cid[1]);\n    if ( cid[2] <= 0.6) logE[2] = interpolate1D( LUT_1D, cid[2]);\n\n    if ( cid[0] > 0.6) logE[0] = ( 100.0 / 55.0) * cid[0] - REF_PT;\n    if ( cid[1] > 0.6) logE[1] = ( 100.0 / 55.0) * cid[1] - REF_PT;\n    if ( cid[2] > 0.6) logE[2] = ( 100.0 / 55.0) * cid[2] - REF_PT;\n\n    // Convert Relative Log Exposure values to Relative Exposure values\n    float exp[3];\n    exp[0] = pow( 10, logE[0]);\n    exp[1] = pow( 10, logE[1]);\n    exp[2] = pow( 10, logE[2]);\n\n    // Convert Relative Exposure values to ACES values\n    float aces[3] = mult_f3_f33( exp, EXP_TO_ACES);\n\n    rOut = aces[0];\n    gOut = aces[1];\n    bOut = aces[2];\n    aOut = aIn;\n}",
            "_aces_transform_id": {
              "py/object": "opencolorio_config_aces.config.reference.discover.classify.ACESTransformID",
              "_aces_transform_id": "urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.ADX16_to_ACES.a1.0.3",
              "_urn": "urn:ampas:aces:transformId:v1.5",
              "_type": "ACEScsc",
              "_namespace": "Academy",
              "_name": "ADX16_to_ACES",
              "_major_version_number": "a1",
              "_minor_version_number": "0",
              "_patch_version_number": "3",
              "_source": "ADX16",
              "_target": "ACES2065-1"
            },
            "_user_name": "ACES 1.0 Input - ADX16",
            "_description": "Universal ADX16 to ACES Transform",
            "_family": "csc",
            "_genus": "ADX"
          }
        }
      ]
    },
    {
      "name": "Input - Canon - CLog2 CGamut",
      "family": "Input/Canon",
      "description": "Convert Canon Log 2 Cinema Gamut to ACES2065-1\n\nACEStransformID: urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.CLog2_CGamut_to_ACES.a1.1.0",
      "to_reference": {
        "transform_type": "BuiltinTransform",
        "style": "CANON_CLOG2-CGAMUT_to_ACES2065-1"
      },
      "encoding": "log",
      "categories": "file-io",
      "transforms_data": [
        {
          "ordering": "110",
          "aces_transform_id": "urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.CLog2_CGamut_to_ACES.a1.1.0",
          "builtin_transform_style": "CANON_CLOG2-CGAMUT_to_ACES2065-1",
          "linked_display_colorspace_style": "",
          "interface": "ColorSpace",
          "encoding": "log",
          "categories": "file-io",
          "ctl_transform": {
            "py/object": "opencolorio_config_aces.config.reference.discover.classify.CTLTransform",
            "_path": "/home/aswf/OpenColorIO-Config-ACES/opencolorio_config_aces/config/reference/aces-dev/transforms/ctl/csc/canon/ACEScsc.Academy.CLog2_CGamut_to_ACES.ctl",
            "_code": "\n// <ACEStransformID>urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.CLog2_CGamut_to_ACES.a1.1.0</ACEStransformID>\n// <ACESuserName>Canon Log 2 Cinema Gamut to ACES2065-1</ACESuserName>\n\n//\n// ACES Color Space Conversion - Canon Log 2 Cinema Gamut to ACES\n//\n// converts Canon Log 2 Cinema Gamut to\n//          ACES2065-1 (AP0 w/ linear encoding)\n//\n\n\n\nimport \"ACESlib.Utilities_Color\";\n\n\nconst float CGAMUT_2_AP0_MAT[3][3] = \n                        calculate_rgb_to_rgb_matrix( CANON_CGAMUT_PRI, \n                                                     AP0, \n                                                     CONE_RESP_MAT_CAT02 );\n\n\nfloat CLog2_to_lin( input varying float in)\n{\n    float out;\n    if ( in < 0.092864125 )\n    {\n        out = -(pow(10, (0.092864125 - in) / 0.24136077) - 1) / 87.099375;\n    }\n    else\n    {\n        out = (pow(10, (in - 0.092864125) / 0.24136077) - 1) / 87.099375;\n    }\n    return out;\n}\n\n\n\nvoid main\n(   input varying float rIn,\n    input varying float gIn,\n    input varying float bIn,\n    input varying float aIn,\n    output varying float rOut,\n    output varying float gOut,\n    output varying float bOut,\n    output varying float aOut\n)\n{\n    float lin_CGamut[3];\n    lin_CGamut[0] = 0.9 * CLog2_to_lin( rIn);\n    lin_CGamut[1] = 0.9 * CLog2_to_lin( gIn);\n    lin_CGamut[2] = 0.9 * CLog2_to_lin( bIn);\n\n    float ACES[3] = mult_f3_f33( lin_CGamut, CGAMUT_2_AP0_MAT);\n\n    rOut = ACES[0];\n    gOut = ACES[1];\n    bOut = ACES[2];\n    aOut = aIn;\n}\n",
            "_aces_transform_id": {
              "py/object": "opencolorio_config_aces.config.reference.discover.classify.ACESTransformID",
              "_aces_transform_id": "urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.CLog2_CGamut_to_ACES.a1.1.0",
              "_urn": "urn:ampas:aces:transformId:v1.5",
              "_type": "ACEScsc",
              "_namespace": "Academy",
              "_name": "CLog2_CGamut_to_ACES",
              "_major_version_number": "a1",
              "_minor_version_number": "1",
              "_patch_version_number": "0",
              "_source": "CLog2_CGamut",
              "_target": "ACES2065-1"
            },
            "_user_name": "Canon Log 2 Cinema Gamut to ACES2065-1",
            "_description": "ACES Color Space Conversion - Canon Log 2 Cinema Gamut to ACES\n\nconverts Canon Log 2 Cinema Gamut to\nACES2065-1 (AP0 w/ linear encoding)",
            "_family": "csc",
            "_genus": "canon"
          }
        }
      ]
    },
    {
      "name": "Input - Canon - CLog3 CGamut",
      "family": "Input/Canon",
      "description": "Convert Canon Log 3 Cinema Gamut to ACES2065-1\n\nACEStransformID: urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.CLog3_CGamut_to_ACES.a1.1.0",
      "to_reference": {
        "transform_type": "BuiltinTransform",
        "style": "CANON_CLOG3-CGAMUT_to_ACES2065-1"
      },
      "encoding": "log",
      "categories": "file-io",
      "transforms_data": [
        {
          "ordering": "110",
          "aces_transform_id": "urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.CLog3_CGamut_to_ACES.a1.1.0",
          "builtin_transform_style": "CANON_CLOG3-CGAMUT_to_ACES2065-1",
          "linked_display_colorspace_style": "",
          "interface": "ColorSpace",
          "encoding": "log",
          "categories": "file-io",
          "ctl_transform": {
            "py/object": "opencolorio_config_aces.config.reference.discover.classify.CTLTransform",
            "_path": "/home/aswf/OpenColorIO-Config-ACES/opencolorio_config_aces/config/reference/aces-dev/transforms/ctl/csc/canon/ACEScsc.Academy.CLog3_CGamut_to_ACES.ctl",
            "_code": "\n// <ACEStransformID>urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.CLog3_CGamut_to_ACES.a1.1.0</ACEStransformID>\n// <ACESuserName>Canon Log 3 Cinema Gamut to ACES2065-1</ACESuserName>\n\n//\n// ACES Color Space Conversion - Canon Log 3 Cinema Gamut to ACES\n//\n// converts Canon Log 3 Cinema Gamut to\n//          ACES2065-1 (AP0 w/ linear encoding)\n//\n\n\n\nimport \"ACESlib.Utilities_Color\";\n\n\nconst float CGAMUT_2_AP0_MAT[3][3] = \n                        calculate_rgb_to_rgb_matrix( CANON_CGAMUT_PRI, \n                                                     AP0, \n                                                     CONE_RESP_MAT_CAT02 );\n\n\nfloat CLog3_to_lin( input varying float in)\n{\n    float out;\n    if ( in < 0.097465473 )\n    {\n        out = -(pow(10, (0.12783901 - in) / 0.36726845) - 1) / 14.98325;\n    }\n    else if ( in <= 0.15277891 )\n    {\n        out = (in - 0.12512219) / 1.9754798;\n    }\n    else\n    {\n        out = (pow(10, (in - 0.12240537) / 0.36726845) - 1) / 14.98325;\n    }\n    return out;\n}\n\n\n\nvoid main\n(   input varying float rIn,\n    input varying float gIn,\n    input varying float bIn,\n    input varying float aIn,\n    output varying float rOut,\n    output varying float gOut,\n    output varying float bOut,\n    output varying float aOut\n)\n{\n    float lin_CGamut[3];\n    lin_CGamut[0] = 0.9 * CLog3_to_lin( rIn);\n    lin_CGamut[1] = 0.9 * CLog3_to_lin( gIn);\n    lin_CGamut[2] = 0.9 * CLog3_to_lin( bIn);\n\n    float ACES[3] = mult_f3_f33( lin_CGamut, CGAMUT_2_AP0_MAT);\n\n    rOut = ACES[0];\n    gOut = ACES[1];\n    bOut = ACES[2];\n    aOut = aIn;\n}\n",
            "_aces_transform_id": {
              "py/object": "opencolorio_config_aces.config.reference.discover.classify.ACESTransformID",
              "_aces_transform_id": "urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.CLog3_CGamut_to_ACES.a1.1.0",
              "_urn": "urn:ampas:aces:transformId:v1.5",
              "_type": "ACEScsc",
              "_namespace": "Academy",
              "_name": "CLog3_CGamut_to_ACES",
              "_major_version_number": "a1",
              "_minor_version_number": "1",
              "_patch_version_number": "0",
              "_source": "CLog3_CGamut",
              "_target": "ACES2065-1"
            },
            "_user_name": "Canon Log 3 Cinema Gamut to ACES2065-1",
            "_description": "ACES Color Space Conversion - Canon Log 3 Cinema Gamut to ACES\n\nconverts Canon Log 3 Cinema Gamut to\nACES2065-1 (AP0 w/ linear encoding)",
            "_family": "csc",
            "_genus": "canon"
          }
        }
      ]
    },
    {
      "name": "Input - RED - Log3G10 RWG",
      "family": "Input/RED",
      "description": "Convert RED Log3G10 RED Wide Gamut to ACES2065-1\n\nACEStransformID: urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.Log3G10_RWG_to_ACES.a1.1.0",
      "to_reference": {
        "transform_type": "BuiltinTransform",
        "style": "RED_LOG3G10-RWG_to_ACES2065-1"
      },
      "encoding": "log",
      "categories": "file-io",
      "transforms_data": [
        {
          "ordering": "120",
          "aces_transform_id": "urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.Log3G10_RWG_to_ACES.a1.1.0",
          "builtin_transform_style": "RED_LOG3G10-RWG_to_ACES2065-1",
          "linked_display_colorspace_style": "",
          "interface": "ColorSpace",
          "encoding": "log",
          "categories": "file-io",
          "ctl_transform": {
            "py/object": "opencolorio_config_aces.config.reference.discover.classify.CTLTransform",
            "_path": "/home/aswf/OpenColorIO-Config-ACES/opencolorio_config_aces/config/reference/aces-dev/transforms/ctl/csc/red/ACEScsc.Academy.Log3G10_RWG_to_ACES.ctl",
            "_code": "\n// <ACEStransformID>urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.Log3G10_RWG_to_ACES.a1.1.0</ACEStransformID>\n// <ACESuserName>RED Log3G10 REDWideGamutRGB to ACES2065-1</ACESuserName>\n\n//\n// ACES Color Space Conversion - RED Log3G10 REDWideGamutRGB to ACES\n//\n// converts RED Log3G10 REDWideGamutRGB to\n//          ACES2065-1 (AP0 w/ linear encoding)\n//\n\n\n\nimport \"ACESlib.Utilities_Color\";\n\n\nconst float RWG_2_AP0_MAT[3][3] = \n                        calculate_rgb_to_rgb_matrix( RED_WIDEGAMUTRGB_PRI, \n                                                     AP0);\n\n\nconst float a = 0.224282;\nconst float b = 155.975327;\nconst float c = 0.01;\nconst float g = 15.1927;\n\nfloat Log3G10_to_lin( input varying float in)\n{\n    float out;\n    if ( in < 0.0 )\n    {\n        out = (in / g);\n    }\n    else\n    {\n        out = (pow(10.0, in / a) - 1.0) / b;\n    }\n    return out - c;\n}\n\n\n\nvoid main\n(   \n    input varying float rIn,\n    input varying float gIn,\n    input varying float bIn,\n    input varying float aIn,\n    output varying float rOut,\n    output varying float gOut,\n    output varying float bOut,\n    output varying float aOut\n)\n{\n    float lin_RWG[3];\n    lin_RWG[0] = Log3G10_to_lin( rIn);\n    lin_RWG[1] = Log3G10_to_lin( gIn);\n    lin_RWG[2] = Log3G10_to_lin( bIn);\n\n    float ACES[3] = mult_f3_f33( lin_RWG, RWG_2_AP0_MAT);\n  \n    rOut = ACES[0];\n    gOut = ACES[1];\n    bOut = ACES[2];\n    aOut = aIn;\n}",
            "_aces_transform_id": {
              "py/object": "opencolorio_config_aces.config.reference.discover.classify.ACESTransformID",
              "_aces_transform_id": "urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.Log3G10_RWG_to_ACES.a1.1.0",
              "_urn": "urn:ampas:aces:transformId:v1.5",
              "_type": "ACEScsc",
              "_namespace": "Academy",
              "_name": "Log3G10_RWG_to_ACES",
              "_major_version_number": "a1",
              "_minor_version_number": "1",
              "_patch_version_number": "0",
              "_source": "Log3G10_RWG",
              "_target": "ACES2065-1"
            },
            "_user_name": "RED Log3G10 REDWideGamutRGB to ACES2065-1",
            "_description": "ACES Color Space Conversion - RED Log3G10 REDWideGamutRGB to ACES\n\nconverts RED Log3G10 REDWideGamutRGB to\nACES2065-1 (AP0 w/ linear encoding)",
            "_family": "csc",
            "_genus": "red"
          }
        }
      ]
    },
    {
      "name": "Input - ARRI - LogC EI800 AWG",
      "family": "Input/ARRI",
      "description": "Convert ARRI ALEXA LogC (EI800) ALEXA Wide Gamut to ACES2065-1\n\nACEStransformID: urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.LogC_EI800_AWG_to_ACES.a1.1.0",
      "to_reference": {
        "transform_type": "BuiltinTransform",
        "style": "ARRI_ALEXA-LOGC-EI800-AWG_to_ACES2065-1"
      },
      "encoding": "log",
      "categories": "file-io",
      "transforms_data": [
        {
          "ordering": "130",
          "aces_transform_id": "urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.LogC_EI800_AWG_to_ACES.a1.1.0",
          "builtin_transform_style": "ARRI_ALEXA-LOGC-EI800-AWG_to_ACES2065-1",
          "linked_display_colorspace_style": "",
          "interface": "ColorSpace",
          "encoding": "log",
          "categories": "file-io",
          "ctl_transform": {
            "py/object": "opencolorio_config_aces.config.reference.discover.classify.CTLTransform",
            "_path": "/home/aswf/OpenColorIO-Config-ACES/opencolorio_config_aces/config/reference/aces-dev/transforms/ctl/csc/arri/ACEScsc.Academy.LogC_EI800_AWG_to_ACES.ctl",
            "_code": "\n// <ACEStransformID>urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.LogC_EI800_AWG_to_ACES.a1.1.0</ACEStransformID>\n// <ACESuserName>ARRI LogC EI800 ALEXA Wide Gamut to ACES2065-1</ACESuserName>\n\n//\n// ACES Color Space Conversion - ARRI LogC EI800 ALEXA Wide Gamut to ACES\n//\n// converts ARRI LogC EI800 ALEXA Wide Gamut to\n//          ACES2065-1 (AP0 w/ linear encoding)\n//\n\n\n\nimport \"ACESlib.Utilities_Color\";\n\n\nconst float AWG_2_AP0_MAT[3][3] = \n                        calculate_rgb_to_rgb_matrix( ARRI_ALEXA_WG_PRI, \n                                                     AP0, \n                                                     CONE_RESP_MAT_CAT02);\n\n\nconst float midGraySignal = 0.01;\nconst float cut = 1.0 / 9.0;\nconst float slope = 3.9086503371;\nconst float offset =  -1.3885369913;\nconst float encOffset = 0.3855369987;\nconst float gain = 800.0 / 400.0;\nconst float encGain = 0.2471896383;\nconst float gray = 0.005;\nconst float nz = 0.0522722750;\n\nfloat LogC_to_lin( input varying float in)\n{\n    float out = (in - encOffset) / encGain;\n    float ns = (out - offset) / slope;\n    if (ns > cut)\n    {\n        ns = pow(10.0, out);\n    }\n    ns = (ns - nz) * gray;\n    return ns * (0.18 * gain / midGraySignal);\n}\n\n\n\nvoid main\n(   \n    input varying float rIn,\n    input varying float gIn,\n    input varying float bIn,\n    input varying float aIn,\n    output varying float rOut,\n    output varying float gOut,\n    output varying float bOut,\n    output varying float aOut\n)\n{\n    float lin_AWG[3];\n    lin_AWG[0] = LogC_to_lin( rIn);\n    lin_AWG[1] = LogC_to_lin( gIn);\n    lin_AWG[2] = LogC_to_lin( bIn);\n\n    float ACES[3] = mult_f3_f33( lin_AWG, AWG_2_AP0_MAT);\n  \n    rOut = ACES[0];\n    gOut = ACES[1];\n    bOut = ACES[2];\n    aOut = aIn;\n}",
            "_aces_transform_id": {
              "py/object": "opencolorio_config_aces.config.reference.discover.classify.ACESTransformID",
              "_aces_transform_id": "urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.LogC_EI800_AWG_to_ACES.a1.1.0",
              "_urn": "urn:ampas:aces:transformId:v1.5",
              "_type": "ACEScsc",
              "_namespace": "Academy",
              "_name": "LogC_EI800_AWG_to_ACES",
              "_major_version_number": "a1",
              "_minor_version_number": "1",
              "_patch_version_number": "0",
              "_source": "LogC_EI800_AWG",
              "_target": "ACES2065-1"
            },
            "_user_name": "ARRI LogC EI800 ALEXA Wide Gamut to ACES2065-1",
            "_description": "ACES Color Space Conversion - ARRI LogC EI800 ALEXA Wide Gamut to ACES\n\nconverts ARRI LogC EI800 ALEXA Wide Gamut to\nACES2065-1 (AP0 w/ linear encoding)",
            "_family": "csc",
            "_genus": "arri"
          }
        }
      ]
    },
    {
      "name": "Input - Sony - SLog3 SGamut3",
      "family": "Input/Sony",
      "description": "Convert Sony S-Log3 S-Gamut3 to ACES2065-1\n\nACEStransformID: urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.SLog3_SGamut3_to_ACES.a1.1.0",
      "to_reference": {
        "transform_type": "BuiltinTransform",
        "style": "SONY_SLOG3-SGAMUT3_to_ACES2065-1"
      },
      "encoding": "log",
      "categories": "file-io",
      "transforms_data": [
        {
          "ordering": "140",
          "aces_transform_id": "urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.SLog3_SGamut3_to_ACES.a1.1.0",
          "builtin_transform_style": "SONY_SLOG3-SGAMUT3_to_ACES2065-1",
          "linked_display_colorspace_style": "",
          "interface": "ColorSpace",
          "encoding": "log",
          "categories": "file-io",
          "ctl_transform": {
            "py/object": "opencolorio_config_aces.config.reference.discover.classify.CTLTransform",
            "_path": "/home/aswf/OpenColorIO-Config-ACES/opencolorio_config_aces/config/reference/aces-dev/transforms/ctl/csc/sony/ACEScsc.Academy.SLog3_SGamut3_to_ACES.ctl",
            "_code": "\n// <ACEStransformID>urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.SLog3_SGamut3_to_ACES.a1.1.0</ACEStransformID>\n// <ACESuserName>Sony S-Log3 S-Gamut3 to ACES2065-1</ACESuserName>\n\n//\n// ACES Color Space Conversion - Sony S-Log3 S-Gamut3 to ACES\n//\n// converts Sony S-Log3 S-Gamut3 to\n//          ACES2065-1 (AP0 w/ linear encoding)\n//\n\n\n\nimport \"ACESlib.Utilities_Color\";\n\n\nconst float SGAMUT3_2_AP0_MAT[3][3] = \n                        calculate_rgb_to_rgb_matrix( SONY_SGAMUT3_PRI, \n                                                     AP0, \n                                                     CONE_RESP_MAT_CAT02);\n\n\nfloat SLog3_to_lin( input varying float in)\n{\n    float out;\n    if ( in >= 171.2102946929 / 1023.0 )\n    {\n        out = pow(10.0, (in * 1023.0 - 420.0) / 261.5) * (0.18 + 0.01) - 0.01;\n    }\n    else\n    {\n        out = (in * 1023.0 - 95.0) * 0.01125000 / (171.2102946929 - 95.0);\n    }\n    return out;\n}\n\n\n\nvoid main\n(   \n    input varying float rIn,\n    input varying float gIn,\n    input varying float bIn,\n    input varying float aIn,\n    output varying float rOut,\n    output varying float gOut,\n    output varying float bOut,\n    output varying float aOut\n)\n{\n    float lin_SGamut3[3];\n    lin_SGamut3[0] = SLog3_to_lin( rIn);\n    lin_SGamut3[1] = SLog3_to_lin( gIn);\n    lin_SGamut3[2] = SLog3_to_lin( bIn);\n\n    float ACES[3] = mult_f3_f33( lin_SGamut3, SGAMUT3_2_AP0_MAT);\n  \n    rOut = ACES[0];\n    gOut = ACES[1];\n    bOut = ACES[2];\n    aOut = aIn;\n}",
            "_aces_transform_id": {
              "py/object": "opencolorio_config_aces.config.reference.discover.classify.ACESTransformID",
              "_aces_transform_id": "urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.SLog3_SGamut3_to_ACES.a1.1.0",
              "_urn": "urn:ampas:aces:transformId:v1.5",
              "_type": "ACEScsc",
              "_namespace": "Academy",
              "_name": "SLog3_SGamut3_to_ACES",
              "_major_version_number": "a1",
              "_minor_version_number": "1",
              "_patch_version_number": "0",
              "_source": "SLog3_SGamut3",
              "_target": "ACES2065-1"
            },
            "_user_name": "Sony S-Log3 S-Gamut3 to ACES2065-1",
            "_description": "ACES Color Space Conversion - Sony S-Log3 S-Gamut3 to ACES\n\nconverts Sony S-Log3 S-Gamut3 to\nACES2065-1 (AP0 w/ linear encoding)",
            "_family": "csc",
            "_genus": "sony"
          }
        }
      ]
    },
    {
      "name": "Input - Sony - SLog3 SGamut3Cine",
      "family": "Input/Sony",
      "description": "Convert Sony S-Log3 S-Gamut3.Cine to ACES2065-1\n\nACEStransformID: urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.SLog3_SGamut3Cine_to_ACES.a1.1.0",
      "to_reference": {
        "transform_type": "BuiltinTransform",
        "style": "SONY_SLOG3-SGAMUT3.CINE_to_ACES2065-1"
      },
      "encoding": "log",
      "categories": "file-io",
      "transforms_data": [
        {
          "ordering": "140",
          "aces_transform_id": "urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.SLog3_SGamut3Cine_to_ACES.a1.1.0",
          "builtin_transform_style": "SONY_SLOG3-SGAMUT3.CINE_to_ACES2065-1",
          "linked_display_colorspace_style": "",
          "interface": "ColorSpace",
          "encoding": "log",
          "categories": "file-io",
          "ctl_transform": {
            "py/object": "opencolorio_config_aces.config.reference.discover.classify.CTLTransform",
            "_path": "/home/aswf/OpenColorIO-Config-ACES/opencolorio_config_aces/config/reference/aces-dev/transforms/ctl/csc/sony/ACEScsc.Academy.SLog3_SGamut3Cine_to_ACES.ctl",
            "_code": "\n// <ACEStransformID>urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.SLog3_SGamut3Cine_to_ACES.a1.1.0</ACEStransformID>\n// <ACESuserName>Sony S-Log3 S-Gamut3.Cine to ACES2065-1</ACESuserName>\n\n//\n// ACES Color Space Conversion - Sony S-Log3 S-Gamut3.Cine to ACES\n//\n// converts Sony S-Log3 S-Gamut3.Cine to\n//          ACES2065-1 (AP0 w/ linear encoding)\n//\n\n\n\nimport \"ACESlib.Utilities_Color\";\n\n\nconst float SGAMUT3_CINE_2_AP0_MAT[3][3] = \n                        calculate_rgb_to_rgb_matrix( SONY_SGAMUT3_CINE_PRI, \n                                                     AP0, \n                                                     CONE_RESP_MAT_CAT02);\n\n\nfloat SLog3_to_lin( input varying float in)\n{\n    float out;\n    if ( in >= 171.2102946929 / 1023.0 )\n    {\n        out = pow(10.0, (in * 1023.0 - 420.0) / 261.5) * (0.18 + 0.01) - 0.01;\n    }\n    else\n    {\n        out = (in * 1023.0 - 95.0) * 0.01125000 / (171.2102946929 - 95.0);\n    }\n    return out;\n}\n\n\n\nvoid main\n(   \n    input varying float rIn,\n    input varying float gIn,\n    input varying float bIn,\n    input varying float aIn,\n    output varying float rOut,\n    output varying float gOut,\n    output varying float bOut,\n    output varying float aOut\n)\n{\n    float lin_SGamut3Cine[3];\n    lin_SGamut3Cine[0] = SLog3_to_lin( rIn);\n    lin_SGamut3Cine[1] = SLog3_to_lin( gIn);\n    lin_SGamut3Cine[2] = SLog3_to_lin( bIn);\n\n    float ACES[3] = mult_f3_f33( lin_SGamut3Cine, SGAMUT3_CINE_2_AP0_MAT);\n  \n    rOut = ACES[0];\n    gOut = ACES[1];\n    bOut = ACES[2];\n    aOut = aIn;\n}",
            "_aces_transform_id": {
              "py/object": "opencolorio_config_aces.config.reference.discover.classify.ACESTransformID",
              "_aces_transform_id": "urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.SLog3_SGamut3Cine_to_ACES.a1.1.0",
              "_urn": "urn:ampas:aces:transformId:v1.5",
              "_type": "ACEScsc",
              "_namespace": "Academy",
              "_name": "SLog3_SGamut3Cine_to_ACES",
              "_major_version_number": "a1",
              "_minor_version_number": "1",
              "_patch_version_number": "0",
              "_source": "SLog3_SGamut3Cine",
              "_target": "ACES2065-1"
            },
            "_user_name": "Sony S-Log3 S-Gamut3.Cine to ACES2065-1",
            "_description": "ACES Color Space Conversion - Sony S-Log3 S-Gamut3.Cine to ACES\n\nconverts Sony S-Log3 S-Gamut3.Cine to\nACES2065-1 (AP0 w/ linear encoding)",
            "_family": "csc",
            "_genus": "sony"
          }
        }
      ]
    },
    {
      "name": "Input - Sony - SLog3 Venice SGamut3",
      "family": "Input/Sony",
      "description": "Convert Sony S-Log3 S-Gamut3 for the Venice camera to ACES2065-1\n\nACEStransformID: urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.SLog3_Venice_SGamut3_to_ACES.a1.1.0",
      "to_reference": {
        "transform_type": "BuiltinTransform",
        "style": "SONY_SLOG3-SGAMUT3-VENICE_to_ACES2065-1"
      },
      "encoding": "log",
      "categories": "file-io",
      "transforms_data": [
        {
          "ordering": "140",
          "aces_transform_id": "urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.SLog3_Venice_SGamut3_to_ACES.a1.1.0",
          "builtin_transform_style": "SONY_SLOG3-SGAMUT3-VENICE_to_ACES2065-1",
          "linked_display_colorspace_style": "",
          "interface": "ColorSpace",
          "encoding": "log",
          "categories": "file-io",
          "ctl_transform": {
            "py/object": "opencolorio_config_aces.config.reference.discover.classify.CTLTransform",
            "_path": "/home/aswf/OpenColorIO-Config-ACES/opencolorio_config_aces/config/reference/aces-dev/transforms/ctl/csc/sony/ACEScsc.Academy.Venice_SLog3_SGamut3_to_ACES.ctl",
            "_code": "\n// <ACEStransformID>urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.SLog3_Venice_SGamut3_to_ACES.a1.1.0</ACEStransformID>\n// <ACESuserName>Sony S-Log3 VENICE S-Gamut3 to ACES2065-1</ACESuserName>\n\n//\n// ACES Color Space Conversion - Sony S-Log3 VENICE S-Gamut3 to ACES\n//\n// converts Sony S-Log3 VENICE S-Gamut3 to\n//          ACES2065-1 (AP0 w/ linear encoding)\n//\n\n\n\nimport \"ACESlib.Utilities_Color\";\n\n\nconst float VENICE_SGAMUT3_2_AP0_MAT[3][3] =\n                        calculate_rgb_to_rgb_matrix( SONY_VENICE_SGAMUT3_PRI,\n                                                     AP0, \n                                                     CONE_RESP_MAT_CAT02);\n\n\nfloat SLog3_to_lin( input varying float in)\n{\n    float out;\n    if ( in >= 171.2102946929 / 1023.0 )\n    {\n        out = pow(10.0, (in * 1023.0 - 420.0) / 261.5) * (0.18 + 0.01) - 0.01;\n    }\n    else\n    {\n        out = (in * 1023.0 - 95.0) * 0.01125000 / (171.2102946929 - 95.0);\n    }\n    return out;\n}\n\n\n\nvoid main\n(   \n    input varying float rIn,\n    input varying float gIn,\n    input varying float bIn,\n    input varying float aIn,\n    output varying float rOut,\n    output varying float gOut,\n    output varying float bOut,\n    output varying float aOut\n)\n{\n    float lin_SGamut3[3];\n    lin_SGamut3[0] = SLog3_to_lin( rIn);\n    lin_SGamut3[1] = SLog3_to_lin( gIn);\n    lin_SGamut3[2] = SLog3_to_lin( bIn);\n\n    float ACES[3] = mult_f3_f33( lin_SGamut3, VENICE_SGAMUT3_2_AP0_MAT);\n  \n    rOut = ACES[0];\n    gOut = ACES[1];\n    bOut = ACES[2];\n    aOut = aIn;\n}",
            "_aces_transform_id": {
              "py/object": "opencolorio_config_aces.config.reference.discover.classify.ACESTransformID",
              "_aces_transform_id": "urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.SLog3_Venice_SGamut3_to_ACES.a1.1.0",
              "_urn": "urn:ampas:aces:transformId:v1.5",
              "_type": "ACEScsc",
              "_namespace": "Academy",
              "_name": "SLog3_Venice_SGamut3_to_ACES",
              "_major_version_number": "a1",
              "_minor_version_number": "1",
              "_patch_version_number": "0",
              "_source": "SLog3_Venice_SGamut3",
              "_target": "ACES2065-1"
            },
            "_user_name": "Sony S-Log3 VENICE S-Gamut3 to ACES2065-1",
            "_description": "ACES Color Space Conversion - Sony S-Log3 VENICE S-Gamut3 to ACES\n\nconverts Sony S-Log3 VENICE S-Gamut3 to\nACES2065-1 (AP0 w/ linear encoding)",
            "_family": "csc",
            "_genus": "sony"
          }
        }
      ]
    },
    {
      "name": "Input - Sony - SLog3 Venice SGamut3Cine",
      "family": "Input/Sony",
      "description": "Convert Sony S-Log3 S-Gamut3.Cine for the Venice camera to ACES2065-1\n\nACEStransformID: urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.SLog3_Venice_SGamut3Cine_to_ACES.a1.1.0",
      "to_reference": {
        "transform_type": "BuiltinTransform",
        "style": "SONY_SLOG3-SGAMUT3.CINE-VENICE_to_ACES2065-1"
      },
      "encoding": "log",
      "categories": "file-io",
      "transforms_data": [
        {
          "ordering": "140",
          "aces_transform_id": "urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.SLog3_Venice_SGamut3Cine_to_ACES.a1.1.0",
          "builtin_transform_style": "SONY_SLOG3-SGAMUT3.CINE-VENICE_to_ACES2065-1",
          "linked_display_colorspace_style": "",
          "interface": "ColorSpace",
          "encoding": "log",
          "categories": "file-io",
          "ctl_transform": {
            "py/object": "opencolorio_config_aces.config.reference.discover.classify.CTLTransform",
            "_path": "/home/aswf/OpenColorIO-Config-ACES/opencolorio_config_aces/config/reference/aces-dev/transforms/ctl/csc/sony/ACEScsc.Academy.Venice_SLog3_SGamut3Cine_to_ACES.ctl",
            "_code": "\n// <ACEStransformID>urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.SLog3_Venice_SGamut3Cine_to_ACES.a1.1.0</ACEStransformID>\n// <ACESuserName>Sony S-Log3 VENICE S-Gamut3.Cine to ACES2065-1</ACESuserName>\n\n//\n// ACES Color Space Conversion - Sony S-Log3 VENICE S-Gamut3.Cine to ACES\n//\n// converts Sony S-Log3 VENICE S-Gamut3.Cine to\n//          ACES2065-1 (AP0 w/ linear encoding)\n//\n\n\n\nimport \"ACESlib.Utilities_Color\";\n\n\nconst float VENICE_SGAMUT3_CINE_2_AP0_MAT[3][3] =\n                        calculate_rgb_to_rgb_matrix( SONY_VENICE_SGAMUT3_CINE_PRI,\n                                                     AP0, \n                                                     CONE_RESP_MAT_CAT02);\n\n\nfloat SLog3_to_lin( input varying float in)\n{\n    float out;\n    if ( in >= 171.2102946929 / 1023.0 )\n    {\n        out = pow(10.0, (in * 1023.0 - 420.0) / 261.5) * (0.18 + 0.01) - 0.01;\n    }\n    else\n    {\n        out = (in * 1023.0 - 95.0) * 0.01125000 / (171.2102946929 - 95.0);\n    }\n    return out;\n}\n\n\n\nvoid main\n(   \n    input varying float rIn,\n    input varying float gIn,\n    input varying float bIn,\n    input varying float aIn,\n    output varying float rOut,\n    output varying float gOut,\n    output varying float bOut,\n    output varying float aOut\n)\n{\n    float lin_SGamut3Cine[3];\n    lin_SGamut3Cine[0] = SLog3_to_lin( rIn);\n    lin_SGamut3Cine[1] = SLog3_to_lin( gIn);\n    lin_SGamut3Cine[2] = SLog3_to_lin( bIn);\n\n    float ACES[3] = mult_f3_f33( lin_SGamut3Cine, VENICE_SGAMUT3_CINE_2_AP0_MAT);\n  \n    rOut = ACES[0];\n    gOut = ACES[1];\n    bOut = ACES[2];\n    aOut = aIn;\n}",
            "_aces_transform_id": {
              "py/object": "opencolorio_config_aces.config.reference.discover.classify.ACESTransformID",
              "_aces_transform_id": "urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.SLog3_Venice_SGamut3Cine_to_ACES.a1.1.0",
              "_urn": "urn:ampas:aces:transformId:v1.5",
              "_type": "ACEScsc",
              "_namespace": "Academy",
              "_name": "SLog3_Venice_SGamut3Cine_to_ACES",
              "_major_version_number": "a1",
              "_minor_version_number": "1",
              "_patch_version_number": "0",
              "_source": "SLog3_Venice_SGamut3Cine",
              "_target": "ACES2065-1"
            },
            "_user_name": "Sony S-Log3 VENICE S-Gamut3.Cine to ACES2065-1",
            "_description": "ACES Color Space Conversion - Sony S-Log3 VENICE S-Gamut3.Cine to ACES\n\nconverts Sony S-Log3 VENICE S-Gamut3.Cine to\nACES2065-1 (AP0 w/ linear encoding)",
            "_family": "csc",
            "_genus": "sony"
          }
        }
      ]
    },
    {
      "name": "Input - Panasonic - VLog VGamut",
      "family": "Input/Panasonic",
      "description": "Convert Panasonic Varicam V-Log V-Gamut to ACES2065-1\n\nACEStransformID: urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.VLog_VGamut_to_ACES.a1.1.0",
      "to_reference": {
        "transform_type": "BuiltinTransform",
        "style": "PANASONIC_VLOG-VGAMUT_to_ACES2065-1"
      },
      "encoding": "log",
      "categories": "file-io",
      "transforms_data": [
        {
          "ordering": "150",
          "aces_transform_id": "urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.VLog_VGamut_to_ACES.a1.1.0",
          "builtin_transform_style": "PANASONIC_VLOG-VGAMUT_to_ACES2065-1",
          "linked_display_colorspace_style": "",
          "interface": "ColorSpace",
          "encoding": "log",
          "categories": "file-io",
          "ctl_transform": {
            "py/object": "opencolorio_config_aces.config.reference.discover.classify.CTLTransform",
            "_path": "/home/aswf/OpenColorIO-Config-ACES/opencolorio_config_aces/config/reference/aces-dev/transforms/ctl/csc/panasonic/ACEScsc.Academy.VLog_VGamut_to_ACES.ctl",
            "_code": "\n// <ACEStransformID>urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.VLog_VGamut_to_ACES.a1.1.0</ACEStransformID>\n// <ACESuserName>Panasonic Varicam V-Log V-Gamut to ACES2065-1</ACESuserName>\n\n//\n// ACES Color Space Conversion - Panasonic Varicam V-Log V-Gamut to ACES\n//\n// converts Panasonic Varicam V-Log V-Gamut to\n//          ACES2065-1 (AP0 w/ linear encoding)\n//\n\n\n\nimport \"ACESlib.Utilities_Color\";\n\n\nconst float VGAMUT_2_AP0_MAT[3][3] = \n                        calculate_rgb_to_rgb_matrix( PANASONIC_VGAMUT_PRI, \n                                                     AP0 );\n\n\nconst float cut2 = 0.181;\nconst float b = 0.00873;\nconst float c = 0.241514;\nconst float d = 0.598206;\n\nfloat VLog_to_lin( input varying float in)\n{\n    if ( in < cut2 )\n    {\n        return (in - 0.125)/5.6;\n    }\n    else\n    {\n        return pow(10.0, ((in - d) / c)) - b;\n    }\n}\n\n\n\nvoid main\n(   \n    input varying float rIn,\n    input varying float gIn,\n    input varying float bIn,\n    input varying float aIn,\n    output varying float rOut,\n    output varying float gOut,\n    output varying float bOut,\n    output varying float aOut\n)\n{\n    float lin_VGamut[3];\n    lin_VGamut[0] = VLog_to_lin( rIn);\n    lin_VGamut[1] = VLog_to_lin( gIn);\n    lin_VGamut[2] = VLog_to_lin( bIn);\n\n    float ACES[3] = mult_f3_f33( lin_VGamut, VGAMUT_2_AP0_MAT);\n  \n    rOut = ACES[0];\n    gOut = ACES[1];\n    bOut = ACES[2];\n    aOut = aIn;\n}",
            "_aces_transform_id": {
              "py/object": "opencolorio_config_aces.config.reference.discover.classify.ACESTransformID",
              "_aces_transform_id": "urn:ampas:aces:transformId:v1.5:ACEScsc.Academy.VLog_VGamut_to_ACES.a1.1.0",
              "_urn": "urn:ampas:aces:transformId:v1.5",
              "_type": "ACEScsc",
              "_namespace": "Academy",
              "_name": "VLog_VGamut_to_ACES",
              "_major_version_number": "a1",
              "_minor_version_number": "1",
              "_patch_version_number": "0",
              "_source": "VLog_VGamut",
              "_target": "ACES2065-1"
            },
            "_user_name": "Panasonic Varicam V-Log V-Gamut to ACES2065-1",
            "_description": "ACES Color Space Conversion - Panasonic Varicam V-Log V-Gamut to ACES\n\nconverts Panasonic Varicam V-Log V-Gamut to\nACES2065-1 (AP0 w/ linear encoding)",
            "_family": "csc",
            "_genus": "panasonic"
          }
        }
      ]
    },
    {
      "name": "Display - sRGB",
      "family": "Display",
      "description": "Convert CIE XYZ (D65 white) to sRGB (piecewise EOTF)",
      "from_reference": {
        "transform_type": "BuiltinTransform",
        "style": "DISPLAY - CIE-XYZ-D65_to_sRGB"
      },
      "reference_space": "REFERENCE_SPACE_DISPLAY",
      "encoding": "sdr-video",
      "categories": "file-io",
      "transforms_data": [
        {
          "ordering": "400",
          "aces_transform_id": "urn:ampas:aces:transformId:v1.5:ODT.Academy.RGBmonitor_100nits_dim.a1.0.3",
          "builtin_transform_style": "ACES-OUTPUT - ACES2065-1_to_CIE-XYZ-D65 - SDR-VIDEO_1.0",
          "linked_display_colorspace_style": "DISPLAY - CIE-XYZ-D65_to_sRGB",
          "interface": "ViewTransform",
          "encoding": "sdr-video",
          "categories": "file-io",
          "ctl_transform": {
            "py/object": "opencolorio_config_aces.config.reference.discover.classify.CTLTransform",
            "_path": "/home/aswf/OpenColorIO-Config-ACES/opencolorio_config_aces/config/reference/aces-dev/transforms/ctl/odt/sRGB/ODT.Academy.sRGB_100nits_dim.ctl",
            "_code": "\n// <ACEStransformID>urn:ampas:aces:transformId:v1.5:ODT.Academy.RGBmonitor_100nits_dim.a1.0.3</ACEStransformID>\n// <ACESuserName>ACES 1.0 Output - sRGB</ACESuserName>\n\n// \n// Output Device Transform - RGB computer monitor\n//\n\n//\n// Summary :\n//  This transform is intended for mapping OCES onto a desktop computer monitor \n//  typical of those used in motion picture visual effects production. These \n//  monitors may occasionally be referred to as \"sRGB\" displays, however, the \n//  monitor for which this transform is designed does not exactly match the \n//  specifications in IEC 61966-2-1:1999.\n// \n//  The assumed observer adapted white is D65, and the viewing environment is \n//  that of a dim surround. \n//\n//  The monitor specified is intended to be more typical of those found in \n//  visual effects production.\n//\n// Device Primaries : \n//  Primaries are those specified in Rec. ITU-R BT.709\n//  CIE 1931 chromaticities:  x         y         Y\n//              Red:          0.64      0.33\n//              Green:        0.3       0.6\n//              Blue:         0.15      0.06\n//              White:        0.3127    0.329     100 cd/m^2\n//\n// Display EOTF :\n//  The reference electro-optical transfer function specified in \n//  IEC 61966-2-1:1999.\n//  Note: This EOTF is *NOT* gamma 2.2\n//\n// Signal Range:\n//    This transform outputs full range code values.\n//\n// Assumed observer adapted white point:\n//         CIE 1931 chromaticities:    x            y\n//                                     0.3127       0.329\n//\n// Viewing Environment:\n//   This ODT has a compensation for viewing environment variables more typical \n//   of those associated with video mastering.\n//\n\n\n\nimport \"ACESlib.Utilities\";\nimport \"ACESlib.Transform_Common\";\nimport \"ACESlib.ODT_Common\";\nimport \"ACESlib.Tonescales\";\n\n\n\n/* --- ODT Parameters --- */\nconst Chromaticities DISPLAY_PRI = REC709_PRI;\nconst float XYZ_2_DISPLAY_PRI_MAT[4][4] = XYZtoRGB(DISPLAY_PRI,1.0);\n\n// NOTE: The EOTF is *NOT* gamma 2.4, it follows IEC 61966-2-1:1999\nconst float DISPGAMMA = 2.4; \nconst float OFFSET = 0.055;\n\n\nvoid main \n(\n    input varying float rIn, \n    input varying float gIn, \n    input varying float bIn, \n    input varying float aIn,\n    output varying float rOut,\n    output varying float gOut,\n    output varying float bOut,\n    output varying float aOut\n)\n{\n    float oces[3] = { rIn, gIn, bIn};\n\n    // OCES to RGB rendering space\n    float rgbPre[3] = mult_f3_f44( oces, AP0_2_AP1_MAT);\n\n    // Apply the tonescale independently in rendering-space RGB\n    float rgbPost[3];\n    rgbPost[0] = segmented_spline_c9_fwd( rgbPre[0]);\n    rgbPost[1] = segmented_spline_c9_fwd( rgbPre[1]);\n    rgbPost[2] = segmented_spline_c9_fwd( rgbPre[2]);\n\n    // Scale luminance to linear code value\n    float linearCV[3];\n    linearCV[0] = Y_2_linCV( rgbPost[0], CINEMA_WHITE, CINEMA_BLACK);\n    linearCV[1] = Y_2_linCV( rgbPost[1], CINEMA_WHITE, CINEMA_BLACK);\n    linearCV[2] = Y_2_linCV( rgbPost[2], CINEMA_WHITE, CINEMA_BLACK);    \n\n    // Apply gamma adjustment to compensate for dim surround\n    linearCV = darkSurround_to_dimSurround( linearCV);\n\n    // Apply desaturation to compensate for luminance difference\n    linearCV = mult_f3_f33( linearCV, ODT_SAT_MAT);\n\n    // Convert to display primary encoding\n    // Rendering space RGB to XYZ\n    float XYZ[3] = mult_f3_f44( linearCV, AP1_2_XYZ_MAT);\n\n    // Apply CAT from ACES white point to assumed observer adapted white point\n    XYZ = mult_f3_f33( XYZ, D60_2_D65_CAT);\n\n    // CIE XYZ to display primaries\n    linearCV = mult_f3_f44( XYZ, XYZ_2_DISPLAY_PRI_MAT);\n\n    // Handle out-of-gamut values\n    // Clip values < 0 or > 1 (i.e. projecting outside the display primaries)\n    linearCV = clamp_f3( linearCV, 0., 1.);\n\n    // Encode linear code values with transfer function\n    float outputCV[3];\n    // moncurve_r with gamma of 2.4 and offset of 0.055 matches the EOTF found in IEC 61966-2-1:1999 (sRGB)\n    outputCV[0] = moncurve_r( linearCV[0], DISPGAMMA, OFFSET);\n    outputCV[1] = moncurve_r( linearCV[1], DISPGAMMA, OFFSET);\n    outputCV[2] = moncurve_r( linearCV[2], DISPGAMMA, OFFSET);\n\n    rOut = outputCV[0];\n    gOut = outputCV[1];\n    bOut = outputCV[2];\n    aOut = aIn;\n}",
            "_aces_transform_id": {
              "py/object": "opencolorio_config_aces.config.reference.discover.classify.ACESTransformID",
              "_aces_transform_id": "urn:ampas:aces:transformId:v1.5:ODT.Academy.RGBmonitor_100nits_dim.a1.0.3",
              "_urn": "urn:ampas:aces:transformId:v1.5",
              "_type": "ODT",
              "_namespace": "Academy",
              "_name": "RGBmonitor_100nits_dim",
              "_major_version_number": "a1",
              "_minor_version_number": "0",
              "_patch_version_number": "3",
              "_source": "OCES",
              "_target": "RGBmonitor_100nits_dim"
            },
            "_user_name": "ACES 1.0 Output - sRGB",
            "_description": "Output Device Transform - RGB computer monitor\n\n\nSummary :\nThis transform is intended for mapping OCES onto a desktop computer monitor\ntypical of those used in motion picture visual effects production. These\nmonitors may occasionally be referred to as \"sRGB\" displays, however, the\nmonitor for which this transform is designed does not exactly match the\nspecifications in IEC 61966-2-1:1999.\n\nThe assumed observer adapted white is D65, and the viewing environment is\nthat of a dim surround.\n\nThe monitor specified is intended to be more typical of those found in\nvisual effects production.\n\nDevice Primaries :\nPrimaries are those specified in Rec. ITU-R BT.709\nCIE 1931 chromaticities:  x         y         Y\nRed:          0.64      0.33\nGreen:        0.3       0.6\nBlue:         0.15      0.06\nWhite:        0.3127    0.329     100 cd/m^2\n\nDisplay EOTF :\nThe reference electro-optical transfer function specified in\nIEC 61966-2-1:1999.\nNote: This EOTF is *NOT* gamma 2.2\n\nSignal Range:\nThis transform outputs full range code values.\n\nAssumed observer adapted white point:\nCIE 1931 chromaticities:    x            y\n0.3127       0.329\n\nViewing Environment:\nThis ODT has a compensation for viewing environment variables more typical\nof those associated with video mastering.",
            "_family": "output_transform",
            "_genus": "sRGB"
          }
        }
      ]
    },
    {
      "name": "Display - Rec.1886 / Rec.709 Video",
      "family": "Display",
      "description": "Convert CIE XYZ (D65 white) to Rec.1886/Rec.709 (HD video)",
      "from_reference": {
        "transform_type": "BuiltinTransform",
        "style": "DISPLAY - CIE-XYZ-D65_to_REC.1886-REC.709"
      },
      "reference_space": "REFERENCE_SPACE_DISPLAY",
      "encoding": "sdr-video",
      "categories": "file-io",
      "transforms_data": [
        {
          "ordering": "410",
          "aces_transform_id": "urn:ampas:aces:transformId:v1.5:ODT.Academy.Rec709_100nits_dim.a1.0.3",
          "builtin_transform_style": "ACES-OUTPUT - ACES2065-1_to_CIE-XYZ-D65 - SDR-VIDEO_1.0",
          "linked_display_colorspace_style": "DISPLAY - CIE-XYZ-D65_to_REC.1886-REC.709",
          "interface": "ViewTransform",
          "encoding": "sdr-video",
          "categories": "file-io",
          "ctl_transform": {
            "py/object": "opencolorio_config_aces.config.reference.discover.classify.CTLTransform",
            "_path": "/home/aswf/OpenColorIO-Config-ACES/opencolorio_config_aces/config/reference/aces-dev/transforms/ctl/odt/rec709/ODT.Academy.Rec709_100nits_dim.ctl",
            "_code": "\n// <ACEStransformID>urn:ampas:aces:transformId:v1.5:ODT.Academy.Rec709_100nits_dim.a1.0.3</ACEStransformID>\n// <ACESuserName>ACES 1.0 Output - Rec.709</ACESuserName>\n\n// \n// Output Device Transform - Rec709\n//\n\n//\n// Summary :\n//  This transform is intended for mapping OCES onto a Rec.709 broadcast monitor\n//  that is calibrated to a D65 white point at 100 cd/m^2. The assumed observer \n//  adapted white is D65, and the viewing environment is a dim surround. \n//\n//  A possible use case for this transform would be HDTV/video mastering.\n//\n// Device Primaries : \n//  Primaries are those specified in Rec. ITU-R BT.709\n//  CIE 1931 chromaticities:  x         y         Y\n//              Red:          0.64      0.33\n//              Green:        0.3       0.6\n//              Blue:         0.15      0.06\n//              White:        0.3127    0.329     100 cd/m^2\n//\n// Display EOTF :\n//  The reference electro-optical transfer function specified in \n//  Rec. ITU-R BT.1886.\n//\n// Signal Range:\n//    By default, this transform outputs full range code values. If instead a \n//    SMPTE \"legal\" signal is desired, there is a runtime flag to output \n//    SMPTE legal signal. In ctlrender, this can be achieved by appending \n//    '-param1 legalRange 1' after the '-ctl odt.ctl' string.\n//\n// Assumed observer adapted white point:\n//         CIE 1931 chromaticities:    x            y\n//                                     0.3127       0.329\n//\n// Viewing Environment:\n//   This ODT has a compensation for viewing environment variables more typical \n//   of those associated with video mastering.\n//\n\n\n\nimport \"ACESlib.Utilities\";\nimport \"ACESlib.Transform_Common\";\nimport \"ACESlib.ODT_Common\";\nimport \"ACESlib.Tonescales\";\n\n\n\n/* --- ODT Parameters --- */\nconst Chromaticities DISPLAY_PRI = REC709_PRI;\nconst float XYZ_2_DISPLAY_PRI_MAT[4][4] = XYZtoRGB(DISPLAY_PRI,1.0);\n\nconst float DISPGAMMA = 2.4; \nconst float L_W = 1.0;\nconst float L_B = 0.0;\n\n\n\nvoid main \n(\n    input varying float rIn, \n    input varying float gIn, \n    input varying float bIn, \n    input varying float aIn,\n    output varying float rOut,\n    output varying float gOut,\n    output varying float bOut,\n    output varying float aOut,\n    input varying int legalRange = 0\n)\n{\n    float oces[3] = { rIn, gIn, bIn};\n\n    // OCES to RGB rendering space\n    float rgbPre[3] = mult_f3_f44( oces, AP0_2_AP1_MAT);\n\n    // Apply the tonescale independently in rendering-space RGB\n    float rgbPost[3];\n    rgbPost[0] = segmented_spline_c9_fwd( rgbPre[0]);\n    rgbPost[1] = segmented_spline_c9_fwd( rgbPre[1]);\n    rgbPost[2] = segmented_spline_c9_fwd( rgbPre[2]);\n\n    // Scale luminance to linear code value\n    float linearCV[3];\n    linearCV[0] = Y_2_linCV( rgbPost[0], CINEMA_WHITE, CINEMA_BLACK);\n    linearCV[1] = Y_2_linCV( rgbPost[1], CINEMA_WHITE, CINEMA_BLACK);\n    linearCV[2] = Y_2_linCV( rgbPost[2], CINEMA_WHITE, CINEMA_BLACK);\n\n    // Apply gamma adjustment to compensate for dim surround\n    linearCV = darkSurround_to_dimSurround( linearCV);\n\n    // Apply desaturation to compensate for luminance difference\n    linearCV = mult_f3_f33( linearCV, ODT_SAT_MAT);\n\n    // Convert to display primary encoding\n    // Rendering space RGB to XYZ\n    float XYZ[3] = mult_f3_f44( linearCV, AP1_2_XYZ_MAT);\n\n    // Apply CAT from ACES white point to assumed observer adapted white point\n    XYZ = mult_f3_f33( XYZ, D60_2_D65_CAT);\n\n    // CIE XYZ to display primaries\n    linearCV = mult_f3_f44( XYZ, XYZ_2_DISPLAY_PRI_MAT);\n\n    // Handle out-of-gamut values\n    // Clip values < 0 or > 1 (i.e. projecting outside the display primaries)\n    linearCV = clamp_f3( linearCV, 0., 1.);\n\n    // Encode linear code values with transfer function\n    float outputCV[3];\n    outputCV[0] = bt1886_r( linearCV[0], DISPGAMMA, L_W, L_B);\n    outputCV[1] = bt1886_r( linearCV[1], DISPGAMMA, L_W, L_B);\n    outputCV[2] = bt1886_r( linearCV[2], DISPGAMMA, L_W, L_B);\n\n    // Default output is full range, check if legalRange param was set to true\n    if (legalRange == 1) {\n        outputCV = fullRange_to_smpteRange_f3( outputCV);\n    }\n\n    rOut = outputCV[0];\n    gOut = outputCV[1];\n    bOut = outputCV[2];\n    aOut = aIn;\n}\n",
            "_aces_transform_id": {
              "py/object": "opencolorio_config_aces.config.reference.discover.classify.ACESTransformID",
              "_aces_transform_id": "urn:ampas:aces:transformId:v1.5:ODT.Academy.Rec709_100nits_dim.a1.0.3",
              "_urn": "urn:ampas:aces:transformId:v1.5",
              "_type": "ODT",
              "_namespace": "Academy",
              "_name": "Rec709_100nits_dim",
              "_major_version_number": "a1",
              "_minor_version_number": "0",
              "_patch_version_number": "3",
              "_source": "OCES",
              "_target": "Rec709_100nits_dim"
            },
            "_user_name": "ACES 1.0 Output - Rec.709",
            "_description": "Output Device Transform - Rec709\n\n\nSummary :\nThis transform is intended for mapping OCES onto a Rec.709 broadcast monitor\nthat is calibrated to a D65 white point at 100 cd/m^2. The assumed observer\nadapted white is D65, and the viewing environment is a dim surround.\n\nA possible use case for this transform would be HDTV/video mastering.\n\nDevice Primaries :\nPrimaries are those specified in Rec. ITU-R BT.709\nCIE 1931 chromaticities:  x         y         Y\nRed:          0.64      0.33\nGreen:        0.3       0.6\nBlue:         0.15      0.06\nWhite:        0.3127    0.329     100 cd/m^2\n\nDisplay EOTF :\nThe reference electro-optical transfer function specified in\nRec. ITU-R BT.1886.\n\nSignal Range:\nBy default, this transform outputs full range code values. If instead a\nSMPTE \"legal\" signal is desired, there is a runtime flag to output\nSMPTE legal signal. In ctlrender, this can be achieved by appending\n'-param1 legalRange 1' after the '-ctl odt.ctl' string.\n\nAssumed observer adapted white point:\nCIE 1931 chromaticities:    x            y\n0.3127       0.329\n\nViewing Environment:\nThis ODT has a compensation for viewing environment variables more typical\nof those associated with video mastering.",
            "_family": "output_transform",
            "_genus": "rec709"
          }
        }
      ]
    },
    {
      "name": "Display - Rec.1886 / Rec.2020 Video",
      "family": "Display",
      "description": "Convert CIE XYZ (D65 white) to Rec.1886/Rec.2020 (UHD video)",
      "from_reference": {
        "transform_type": "BuiltinTransform",
        "style": "DISPLAY - CIE-XYZ-D65_to_REC.1886-REC.2020"
      },
      "reference_space": "REFERENCE_SPACE_DISPLAY",
      "encoding": "sdr-video",
      "categories": "file-io",
      "transforms_data": [
        {
          "ordering": "420",
          "aces_transform_id": "urn:ampas:aces:transformId:v1.5:ODT.Academy.Rec2020_100nits_dim.a1.0.3",
          "builtin_transform_style": "ACES-OUTPUT - ACES2065-1_to_CIE-XYZ-D65 - SDR-VIDEO_1.0",
          "linked_display_colorspace_style": "DISPLAY - CIE-XYZ-D65_to_REC.1886-REC.2020",
          "interface": "ViewTransform",
          "encoding": "sdr-video",
          "categories": "file-io",
          "ctl_transform": {
            "py/object": "opencolorio_config_aces.config.reference.discover.classify.CTLTransform",
            "_path": "/home/aswf/OpenColorIO-Config-ACES/opencolorio_config_aces/config/reference/aces-dev/transforms/ctl/odt/rec2020/ODT.Academy.Rec2020_100nits_dim.ctl",
            "_code": "\n// <ACEStransformID>urn:ampas:aces:transformId:v1.5:ODT.Academy.Rec2020_100nits_dim.a1.0.3</ACEStransformID>\n// <ACESuserName>ACES 1.0 Output - Rec.2020</ACESuserName>\n\n// \n// Output Device Transform - Rec2020\n//\n\n//\n// Summary :\n//  This transform is intended for mapping OCES onto a Rec.2020 broadcast \n//  monitor that is calibrated to a D65 white point at 100 cd/m^2. The assumed \n//  observer adapted white is D65, and the viewing environment is that of a dim \n//  surround. \n//\n//  A possible use case for this transform would be UHDTV/video mastering.\n//\n// Device Primaries : \n//  Primaries are those specified in Rec. ITU-R BT.2020\n//  CIE 1931 chromaticities:  x         y         Y\n//              Red:          0.708     0.292\n//              Green:        0.17      0.797\n//              Blue:         0.131     0.046\n//              White:        0.3127    0.329     100 cd/m^2\n//\n// Display EOTF :\n//  The reference electro-optical transfer function specified in \n//  Rec. ITU-R BT.1886.\n//\n// Signal Range:\n//    By default, this transform outputs full range code values. If instead a \n//    SMPTE \"legal\" signal is desired, there is a runtime flag to output \n//    SMPTE legal signal. In ctlrender, this can be achieved by appending \n//    '-param1 legalRange 1' after the '-ctl odt.ctl' string.\n//\n// Assumed observer adapted white point:\n//         CIE 1931 chromaticities:    x            y\n//                                     0.3127       0.329\n//\n// Viewing Environment:\n//   This ODT has a compensation for viewing environment variables more typical \n//   of those associated with video mastering.\n//\n\n\n\nimport \"ACESlib.Utilities\";\nimport \"ACESlib.Transform_Common\";\nimport \"ACESlib.ODT_Common\";\nimport \"ACESlib.Tonescales\";\n\n\n\n/* --- ODT Parameters --- */\nconst Chromaticities DISPLAY_PRI = REC2020_PRI;\nconst float XYZ_2_DISPLAY_PRI_MAT[4][4] = XYZtoRGB(DISPLAY_PRI,1.0);\n\nconst float DISPGAMMA = 2.4; \nconst float L_W = 1.0;\nconst float L_B = 0.0;\n\n\n\nvoid main \n(\n    input varying float rIn, \n    input varying float gIn, \n    input varying float bIn, \n    input varying float aIn,\n    output varying float rOut,\n    output varying float gOut,\n    output varying float bOut,\n    output varying float aOut,\n    input varying int legalRange = 0\n)\n{\n    float oces[3] = { rIn, gIn, bIn};\n\n    // OCES to RGB rendering space\n    float rgbPre[3] = mult_f3_f44( oces, AP0_2_AP1_MAT);\n\n    // Apply the tonescale independently in rendering-space RGB\n    float rgbPost[3];\n    rgbPost[0] = segmented_spline_c9_fwd( rgbPre[0]);\n    rgbPost[1] = segmented_spline_c9_fwd( rgbPre[1]);\n    rgbPost[2] = segmented_spline_c9_fwd( rgbPre[2]);\n\n    // Scale luminance to linear code value\n    float linearCV[3];\n    linearCV[0] = Y_2_linCV( rgbPost[0], CINEMA_WHITE, CINEMA_BLACK);\n    linearCV[1] = Y_2_linCV( rgbPost[1], CINEMA_WHITE, CINEMA_BLACK);\n    linearCV[2] = Y_2_linCV( rgbPost[2], CINEMA_WHITE, CINEMA_BLACK);\n\n    // Apply gamma adjustment to compensate for dim surround\n    linearCV = darkSurround_to_dimSurround( linearCV);\n\n    // Apply desaturation to compensate for luminance difference\n    linearCV = mult_f3_f33( linearCV, ODT_SAT_MAT);\n\n    // Convert to display primary encoding\n    // Rendering space RGB to XYZ\n    float XYZ[3] = mult_f3_f44( linearCV, AP1_2_XYZ_MAT);\n\n    // Apply CAT from ACES white point to assumed observer adapted white point\n    XYZ = mult_f3_f33( XYZ, D60_2_D65_CAT);\n\n    // CIE XYZ to display primaries\n    linearCV = mult_f3_f44( XYZ, XYZ_2_DISPLAY_PRI_MAT);\n\n    // Handle out-of-gamut values\n    // Clip values < 0 or > 1 (i.e. projecting outside the display primaries)\n    linearCV = clamp_f3( linearCV, 0., 1.);\n\n    // Encode linear code values with transfer function\n    float outputCV[3];\n    outputCV[0] = bt1886_r( linearCV[0], DISPGAMMA, L_W, L_B);\n    outputCV[1] = bt1886_r( linearCV[1], DISPGAMMA, L_W, L_B);\n    outputCV[2] = bt1886_r( linearCV[2], DISPGAMMA, L_W, L_B);\n\n    // Default output is full range, check if legalRange param was set to true\n    if (legalRange == 1) {\n        outputCV = fullRange_to_smpteRange_f3( outputCV);\n    }\n\n    rOut = outputCV[0];\n    gOut = outputCV[1];\n    bOut = outputCV[2];\n    aOut = aIn;\n}",
            "_aces_transform_id": {
              "py/object": "opencolorio_config_aces.config.reference.discover.classify.ACESTransformID",
              "_aces_transform_id": "urn:ampas:aces:transformId:v1.5:ODT.Academy.Rec2020_100nits_dim.a1.0.3",
              "_urn": "urn:ampas:aces:transformId:v1.5",
              "_type": "ODT",
              "_namespace": "Academy",
              "_name": "Rec2020_100nits_dim",
              "_major_version_number": "a1",
              "_minor_version_number": "0",
              "_patch_version_number": "3",
              "_source": "OCES",
              "_target": "Rec2020_100nits_dim"
            },
            "_user_name": "ACES 1.0 Output - Rec.2020",
            "_description": "Output Device Transform - Rec2020\n\n\nSummary :\nThis transform is intended for mapping OCES onto a Rec.2020 broadcast\nmonitor that is calibrated to a D65 white point at 100 cd/m^2. The assumed\nobserver adapted white is D65, and the viewing environment is that of a dim\nsurround.\n\nA possible use case for this transform would be UHDTV/video mastering.\n\nDevice Primaries :\nPrimaries are those specified in Rec. ITU-R BT.2020\nCIE 1931 chromaticities:  x         y         Y\nRed:          0.708     0.292\nGreen:        0.17      0.797\nBlue:         0.131     0.046\nWhite:        0.3127    0.329     100 cd/m^2\n\nDisplay EOTF :\nThe reference electro-optical transfer function specified in\nRec. ITU-R BT.1886.\n\nSignal Range:\nBy default, this transform outputs full range code values. If instead a\nSMPTE \"legal\" signal is desired, there is a runtime flag to output\nSMPTE legal signal. In ctlrender, this can be achieved by appending\n'-param1 legalRange 1' after the '-ctl odt.ctl' string.\n\nAssumed observer adapted white point:\nCIE 1931 chromaticities:    x            y\n0.3127       0.329\n\nViewing Environment:\nThis ODT has a compensation for viewing environment variables more typical\nof those associated with video mastering.",
            "_family": "output_transform",
            "_genus": "rec2020"
          }
        }
      ]
    },
    {
      "name": "Display - Rec.2100-HLG",
      "family": "Display",
      "description": "Convert CIE XYZ (D65 white) to Rec.2100-HLG, 1000 nit",
      "from_reference": {
        "transform_type": "BuiltinTransform",
        "style": "DISPLAY - CIE-XYZ-D65_to_REC.2100-HLG-1000nit"
      },
      "reference_space": "REFERENCE_SPACE_DISPLAY",
      "encoding": "hdr-video",
      "categories": "file-io",
      "transforms_data": [
        {
          "ordering": "430",
          "aces_transform_id": "urn:ampas:aces:transformId:v1.5:RRTODT.Academy.Rec2020_1000nits_15nits_HLG.a1.1.0",
          "builtin_transform_style": "ACES-OUTPUT - ACES2065-1_to_CIE-XYZ-D65 - HDR-VIDEO-1000nit-15nit-REC2020lim_1.1",
          "linked_display_colorspace_style": "DISPLAY - CIE-XYZ-D65_to_REC.2100-HLG-1000nit",
          "interface": "ViewTransform",
          "encoding": "hdr-video",
          "categories": "file-io",
          "ctl_transform": {
            "py/object": "opencolorio_config_aces.config.reference.discover.classify.CTLTransform",
            "_path": "/home/aswf/OpenColorIO-Config-ACES/opencolorio_config_aces/config/reference/aces-dev/transforms/ctl/outputTransform/rec2020/RRTODT.Academy.Rec2020_1000nits_15nits_HLG.ctl",
            "_code": "\n// <ACEStransformID>urn:ampas:aces:transformId:v1.5:RRTODT.Academy.Rec2020_1000nits_15nits_HLG.a1.1.0</ACEStransformID>\n// <ACESuserName>ACES 1.0 Output - Rec.2020 HLG (1000 nits)</ACESuserName>\n\n// \n// Output Transform - Rec.2020 (1000 cd/m^2)\n//\n\n//\n// Summary :\n//  This transform maps ACES onto a Rec.2020 HLG HDR display calibrated \n//  to a D65 white point at 1000 cd/m^2. The assumed observer adapted white is \n//  D65, and the viewing environment is that of a dark surround. Mid-gray\n//  luminance is targeted at 15 cd/m^2.\n// \n// NOTE :\n//  The parameterized \"Output Transform\" function used as basis for this \n//  transform includes a parameter labeled \"SURROUND\". However, as noted in \n//  \"ACESlib.OutputTransforms.ctl\", this sub-module is currently a \"placeholder\"\n//  and as such currently only supports a rendering intended for dark surround \n//  environments. While it is planned for future releases to fully activate the \n//  this module and provide adjustment for dark/dim/normal surrounds, setting \n//  SURROUND equal to either dim or normal will have no effect at this time.\n//  \n//  That being said, these Output Transforms have been used successfully on\n//  major feature and television projects when mastering for home HDR where a \n//  dim surround environment is assumed. Based on that, these transforms are \n//  considered adequate for use for dim surround mastering, although, as always,\n//  creative adjustments to contrast and saturation may be desirable and should\n//  be saved as a \"trim pass.\"\n//\n// Device Primaries : \n//  Primaries are those specified in Rec. ITU-R BT.2020\n//  CIE 1931 chromaticities:  x         y         Y\n//              Red:          0.708     0.292\n//              Green:        0.17      0.797\n//              Blue:         0.131     0.046\n//              White:        0.3127    0.329     1000 cd/m^2\n//              18% Gray:     0.3127    0.329     15 cd/m^2\n//\n// Display EOTF :\n//  The reference electro-optical transfer function specified in Table 5 of \n//  ITU-R BT.2100 (HLG)\n//\n// Assumed observer adapted white point:\n//         CIE 1931 chromaticities:    x            y\n//                                     0.3127       0.329\n//\n// Viewing Environment:\n//  Environment specified in SMPTE RP 431-2-2007\n//\n\n\n\nimport \"ACESlib.Utilities\";\nimport \"ACESlib.OutputTransforms\";\n\n\n// Support for HLG in ACES is tricky, since HLG is \"scene-referred\" and ACES \n// Output transforms produce display-referred output. ACES supports HLG at\n// 1000 nits by converting the ST.2084 output to HLG using the method specified\n// in Section 7 of ITU-R BT.2390-0. \n\n\nconst float Y_MIN = 0.0001;                     // black luminance (cd/m^2)\nconst float Y_MID = 15.0;                       // mid-point luminance (cd/m^2)\nconst float Y_MAX = 1000.0;                     // peak white luminance (cd/m^2)\n\nconst Chromaticities DISPLAY_PRI = REC2020_PRI; // encoding primaries (device setup)\nconst Chromaticities LIMITING_PRI = REC2020_PRI;// limiting primaries\n\nconst int EOTF = 5;                             // 0: ST-2084 (PQ)\n                                                // 1: BT.1886 (Rec.709/2020 settings) \n                                                // 2: sRGB (mon_curve w/ presets)\n                                                // 3: gamma 2.6\n                                                // 4: linear (no EOTF)\n                                                // 5: HLG\n\nconst int SURROUND = 0;                         // 0: dark ( NOTE: this is the only active setting! )\n                                                // 1: dim ( *inactive* - selecting this will have no effect )\n                                                // 2: normal ( *inactive* - selecting this will have no effect )\n\nconst bool STRETCH_BLACK = true;                // stretch black luminance to a PQ code value of 0\nconst bool D60_SIM = false;                       \nconst bool LEGAL_RANGE = false;\n\n\nvoid main\n(\n\tinput varying float rIn,\n\tinput varying float gIn,\n\tinput varying float bIn,\n\tinput varying float aIn,\n\toutput varying float rOut,\n\toutput varying float gOut,\n\toutput varying float bOut,\n\toutput varying float aOut\n)\n{\n    float aces[3] = {rIn, gIn, bIn};\n\n    float cv[3] = outputTransform( aces, Y_MIN,\n                                         Y_MID,\n                                         Y_MAX,\n                                         DISPLAY_PRI,\n                                         LIMITING_PRI,\n                                         EOTF,\n                                         SURROUND,\n                                         STRETCH_BLACK,\n                                         D60_SIM,\n                                         LEGAL_RANGE );\n\n    rOut = cv[0];\n    gOut = cv[1];\n    bOut = cv[2];\n    aOut = aIn;\n}",
            "_aces_transform_id": {
              "py/object": "opencolorio_config_aces.config.reference.discover.classify.ACESTransformID",
              "_aces_transform_id": "urn:ampas:aces:transformId:v1.5:RRTODT.Academy.Rec2020_1000nits_15nits_HLG.a1.1.0",
              "_urn": "urn:ampas:aces:transformId:v1.5",
              "_type": "RRTODT",
              "_namespace": "Academy",
              "_name": "Rec2020_1000nits_15nits_HLG",
              "_major_version_number": "a1",
              "_minor_version_number": "1",
              "_patch_version_number": "0",
              "_source": "ACES2065-1",
              "_target": "Rec2020_1000nits_15nits_HLG"
            },
            "_user_name": "ACES 1.0 Output - Rec.2020 HLG (1000 nits)",
            "_description": "Output Transform - Rec.2020 (1000 cd/m^2)\n\n\nSummary :\nThis transform maps ACES onto a Rec.2020 HLG HDR display calibrated\nto a D65 white point at 1000 cd/m^2. The assumed observer adapted white is\nD65, and the viewing environment is that of a dark surround. Mid-gray\nluminance is targeted at 15 cd/m^2.\n\nNOTE :\nThe parameterized \"Output Transform\" function used as basis for this\ntransform includes a parameter labeled \"SURROUND\". However, as noted in\n\"ACESlib.OutputTransforms.ctl\", this sub-module is currently a \"placeholder\"\nand as such currently only supports a rendering intended for dark surround\nenvironments. While it is planned for future releases to fully activate the\nthis module and provide adjustment for dark/dim/normal surrounds, setting\nSURROUND equal to either dim or normal will have no effect at this time.\n\nThat being said, these Output Transforms have been used successfully on\nmajor feature and television projects when mastering for home HDR where a\ndim surround environment is assumed. Based on that, these transforms are\nconsidered adequate for use for dim surround mastering, although, as always,\ncreative adjustments to contrast and saturation may be desirable and should\nbe saved as a \"trim pass.\"\n\nDevice Primaries :\nPrimaries are those specified in Rec. ITU-R BT.2020\nCIE 1931 chromaticities:  x         y         Y\nRed:          0.708     0.292\nGreen:        0.17      0.797\nBlue:         0.131     0.046\nWhite:        0.3127    0.329     1000 cd/m^2\n18% Gray:     0.3127    0.329     15 cd/m^2\n\nDisplay EOTF :\nThe reference electro-optical transfer function specified in Table 5 of\nITU-R BT.2100 (HLG)\n\nAssumed observer adapted white point:\nCIE 1931 chromaticities:    x            y\n0.3127       0.329\n\nViewing Environment:\nEnvironment specified in SMPTE RP 431-2-2007",
            "_family": "outputTransform",
            "_genus": "rec2020"
          }
        }
      ]
    },
    {
      "name": "Display - Rec.2100-PQ",
      "family": "Display",
      "description": "Convert CIE XYZ (D65 white) to Rec.2100-PQ",
      "from_reference": {
        "transform_type": "BuiltinTransform",
        "style": "DISPLAY - CIE-XYZ-D65_to_REC.2100-PQ"
      },
      "reference_space": "REFERENCE_SPACE_DISPLAY",
      "encoding": "hdr-video",
      "categories": "file-io",
      "transforms_data": [
        {
          "ordering": "430",
          "aces_transform_id": "urn:ampas:aces:transformId:v1.5:RRTODT.Academy.Rec2020_1000nits_15nits_ST2084.a1.1.0",
          "builtin_transform_style": "ACES-OUTPUT - ACES2065-1_to_CIE-XYZ-D65 - HDR-VIDEO-1000nit-15nit-REC2020lim_1.1",
          "linked_display_colorspace_style": "DISPLAY - CIE-XYZ-D65_to_REC.2100-PQ",
          "interface": "ViewTransform",
          "encoding": "hdr-video",
          "categories": "file-io",
          "ctl_transform": {
            "py/object": "opencolorio_config_aces.config.reference.discover.classify.CTLTransform",
            "_path": "/home/aswf/OpenColorIO-Config-ACES/opencolorio_config_aces/config/reference/aces-dev/transforms/ctl/outputTransform/rec2020/RRTODT.Academy.Rec2020_1000nits_15nits_ST2084.ctl",
            "_code": "\n// <ACEStransformID>urn:ampas:aces:transformId:v1.5:RRTODT.Academy.Rec2020_1000nits_15nits_ST2084.a1.1.0</ACEStransformID>\n// <ACESuserName>ACES 1.0 Output - Rec.2020 ST2084 (1000 nits)</ACESuserName>\n\n// \n// Output Transform - Rec.2020 (1000 cd/m^2)\n//\n\n//\n// Summary :\n//  This transform maps ACES onto a Rec.2020 ST.2084 HDR display calibrated \n//  to a D65 white point at 1000 cd/m^2. The assumed observer adapted white is \n//  D65, and the viewing environment is that of a dark surround. Mid-gray\n//  luminance is targeted at 15 cd/m^2.\n//\n// NOTE :\n//  The parameterized \"Output Transform\" function used as basis for this \n//  transform includes a parameter labeled \"SURROUND\". However, as noted in \n//  \"ACESlib.OutputTransforms.ctl\", this sub-module is currently a \"placeholder\"\n//  and as such currently only supports a rendering intended for dark surround \n//  environments. While it is planned for future releases to fully activate the \n//  this module and provide adjustment for dark/dim/normal surrounds, setting \n//  SURROUND equal to either dim or normal will have no effect at this time.\n//  \n//  That being said, these Output Transforms have been used successfully on\n//  major feature and television projects when mastering for home HDR where a \n//  dim surround environment is assumed. Based on that, these transforms are \n//  considered adequate for use for dim surround mastering, although, as always,\n//  creative adjustments to contrast and saturation may be desirable and should\n//  be saved as a \"trim pass.\"\n//\n// Device Primaries : \n//  Primaries are those specified in Rec. ITU-R BT.2020\n//  CIE 1931 chromaticities:  x         y         Y\n//              Red:          0.708     0.292\n//              Green:        0.17      0.797\n//              Blue:         0.131     0.046\n//              White:        0.3127    0.329     1000 cd/m^2\n//              18% Gray:     0.3127    0.329     15 cd/m^2\n//\n// Display EOTF :\n//  The reference electro-optical transfer function specified in SMPTE ST \n//  2084-2014. This transform makes no attempt to address the Annex functions \n//  which address integer quantization.\n//\n// Assumed observer adapted white point:\n//         CIE 1931 chromaticities:    x            y\n//                                     0.3127       0.329\n//\n// Viewing Environment:\n//  Environment specified in SMPTE RP 431-2-2007\n//\n\n\n\nimport \"ACESlib.Utilities\";\nimport \"ACESlib.OutputTransforms\";\n\n\n\nconst float Y_MIN = 0.0001;                     // black luminance (cd/m^2)\nconst float Y_MID = 15.0;                       // mid-point luminance (cd/m^2)\nconst float Y_MAX = 1000.0;                     // peak white luminance (cd/m^2)\n\nconst Chromaticities DISPLAY_PRI = REC2020_PRI; // encoding primaries (device setup)\nconst Chromaticities LIMITING_PRI = REC2020_PRI;// limiting primaries\n\nconst int EOTF = 0;                             // 0: ST-2084 (PQ)\n                                                // 1: BT.1886 (Rec.709/2020 settings) \n                                                // 2: sRGB (mon_curve w/ presets)\n                                                // 3: gamma 2.6\n                                                // 4: linear (no EOTF)\n                                                // 5: HLG\n\nconst int SURROUND = 0;                         // 0: dark ( NOTE: this is the only active setting! )\n                                                // 1: dim ( *inactive* - selecting this will have no effect )\n                                                // 2: normal ( *inactive* - selecting this will have no effect )\n\nconst bool STRETCH_BLACK = true;                // stretch black luminance to a PQ code value of 0\nconst bool D60_SIM = false;                       \nconst bool LEGAL_RANGE = false;\n\n\nvoid main\n(\n\tinput varying float rIn,\n\tinput varying float gIn,\n\tinput varying float bIn,\n\tinput varying float aIn,\n\toutput varying float rOut,\n\toutput varying float gOut,\n\toutput varying float bOut,\n\toutput varying float aOut\n)\n{\n    float aces[3] = {rIn, gIn, bIn};\n\n    float cv[3] = outputTransform( aces, Y_MIN,\n                                         Y_MID,\n                                         Y_MAX,\n                                         DISPLAY_PRI,\n                                         LIMITING_PRI,\n                                         EOTF,\n                                         SURROUND,\n                                         STRETCH_BLACK,\n                                         D60_SIM,\n                                         LEGAL_RANGE );\n\n    rOut = cv[0];\n    gOut = cv[1];\n    bOut = cv[2];\n    aOut = aIn;\n}",
            "_aces_transform_id": {
              "py/object": "opencolorio_config_aces.config.reference.discover.classify.ACESTransformID",
              "_aces_transform_id": "urn:ampas:aces:transformId:v1.5:RRTODT.Academy.Rec2020_1000nits_15nits_ST2084.a1.1.0",
              "_urn": "urn:ampas:aces:transformId:v1.5",
              "_type": "RRTODT",
              "_namespace": "Academy",
              "_name": "Rec2020_1000nits_15nits_ST2084",
              "_major_version_number": "a1",
              "_minor_version_number": "1",
              "_patch_version_number": "0",
              "_source": "ACES2065-1",
              "_target": "Rec2020_1000nits_15nits_ST2084"
            },
            "_user_name": "ACES 1.0 Output - Rec.2020 ST2084 (1000 nits)",
            "_description": "Output Transform - Rec.2020 (1000 cd/m^2)\n\n\nSummary :\nThis transform maps ACES onto a Rec.2020 ST.2084 HDR display calibrated\nto a D65 white point at 1000 cd/m^2. The assumed observer adapted white is\nD65, and the viewing environment is that of a dark surround. Mid-gray\nluminance is targeted at 15 cd/m^2.\n\nNOTE :\nThe parameterized \"Output Transform\" function used as basis for this\ntransform includes a parameter labeled \"SURROUND\". However, as noted in\n\"ACESlib.OutputTransforms.ctl\", this sub-module is currently a \"placeholder\"\nand as such currently only supports a rendering intended for dark surround\nenvironments. While it is planned for future releases to fully activate the\nthis module and provide adjustment for dark/dim/normal surrounds, setting\nSURROUND equal to either dim or normal will have no effect at this time.\n\nThat being said, these Output Transforms have been used successfully on\nmajor feature and television projects when mastering for home HDR where a\ndim surround environment is assumed. Based on that, these transforms are\nconsidered adequate for use for dim surround mastering, although, as always,\ncreative adjustments to contrast and saturation may be desirable and should\nbe saved as a \"trim pass.\"\n\nDevice Primaries :\nPrimaries are those specified in Rec. ITU-R BT.2020\nCIE 1931 chromaticities:  x         y         Y\nRed:          0.708     0.292\nGreen:        0.17      0.797\nBlue:         0.131     0.046\nWhite:        0.3127    0.329     1000 cd/m^2\n18% Gray:     0.3127    0.329     15 cd/m^2\n\nDisplay EOTF :\nThe reference electro-optical transfer function specified in SMPTE ST\n2084-2014. This transform makes no attempt to address the Annex functions\nwhich address integer quantization.\n\nAssumed observer adapted white point:\nCIE 1931 chromaticities:    x            y\n0.3127       0.329\n\nViewing Environment:\nEnvironment specified in SMPTE RP 431-2-2007",
            "_family": "outputTransform",
            "_genus": "rec2020"
          }
        }
      ]
    },
    {
      "name": "Display - ST2084-P3-D65",
      "family": "Display",
      "description": "Convert CIE XYZ (D65 white) to ST-2084 (PQ), P3-D65 primaries",
      "from_reference": {
        "transform_type": "BuiltinTransform",
        "style": "DISPLAY - CIE-XYZ-D65_to_ST2084-P3-D65"
      },
      "reference_space": "REFERENCE_SPACE_DISPLAY",
      "encoding": "hdr-video",
      "categories": "file-io",
      "transforms_data": [
        {
          "ordering": "450",
          "aces_transform_id": "urn:ampas:aces:transformId:v1.5:RRTODT.Academy.P3D65_1000nits_15nits_ST2084.a1.1.0",
          "builtin_transform_style": "ACES-OUTPUT - ACES2065-1_to_CIE-XYZ-D65 - HDR-VIDEO-1000nit-15nit-P3lim_1.1",
          "linked_display_colorspace_style": "DISPLAY - CIE-XYZ-D65_to_ST2084-P3-D65",
          "interface": "ViewTransform",
          "encoding": "hdr-video",
          "categories": "file-io",
          "ctl_transform": {
            "py/object": "opencolorio_config_aces.config.reference.discover.classify.CTLTransform",
            "_path": "/home/aswf/OpenColorIO-Config-ACES/opencolorio_config_aces/config/reference/aces-dev/transforms/ctl/outputTransform/p3/RRTODT.Academy.P3D65_1000nits_15nits_ST2084.ctl",
            "_code": "\n// <ACEStransformID>urn:ampas:aces:transformId:v1.5:RRTODT.Academy.P3D65_1000nits_15nits_ST2084.a1.1.0</ACEStransformID>\n// <ACESuserName>ACES 1.0 Output - P3-D65 ST2084 (1000 nits)</ACESuserName>\n\n// \n// Output Transform - P3D65 (1000 cd/m^2)\n//\n\n//\n// Summary :\n//  This transform maps ACES onto a P3D65 ST.2084 HDR display calibrated \n//  to a D65 white point at 1000 cd/m^2. The assumed observer adapted white is \n//  D65, and the viewing environment is that of a dark surround. Mid-gray\n//  luminance is targeted at 15 cd/m^2.\n//\n// NOTE :\n//  The parameterized \"Output Transform\" function used as basis for this \n//  transform includes a parameter labeled \"SURROUND\". However, as noted in \n//  \"ACESlib.OutputTransforms.ctl\", this sub-module is currently a \"placeholder\"\n//  and as such currently only supports a rendering intended for dark surround \n//  environments. While it is planned for future releases to fully activate the \n//  this module and provide adjustment for dark/dim/normal surrounds, setting \n//  SURROUND equal to either dim or normal will have no effect at this time.\n//  \n//  That being said, these Output Transforms have been used successfully on\n//  major feature and television projects when mastering for home HDR where a \n//  dim surround environment is assumed. Based on that, these transforms are \n//  considered adequate for use for dim surround mastering, although, as always,\n//  creative adjustments to contrast and saturation may be desirable and should\n//  be saved as a \"trim pass.\"\n//\n// Device Primaries : \n//  Primaries are those specified in Rec. ITU-R BT.2020\n//  CIE 1931 chromaticities:  x         y         Y\n//              Red:          0.68      0.32\n//              Green:        0.265     0.69\n//              Blue:         0.15      0.06\n//              White:        0.3127    0.329     1000 cd/m^2\n//              18% Gray:     0.3127    0.329     15 cd/m^2\n//\n// Display EOTF :\n//  The reference electro-optical transfer function specified in SMPTE ST \n//  2084-2014. This transform makes no attempt to address the Annex functions \n//  which address integer quantization.\n//\n// Assumed observer adapted white point:\n//         CIE 1931 chromaticities:    x            y\n//                                     0.3127       0.329\n//\n// Viewing Environment:\n//  Environment specified in SMPTE RP 431-2-2007\n//\n\n\n\nimport \"ACESlib.Utilities\";\nimport \"ACESlib.OutputTransforms\";\n\n\n\nconst float Y_MIN = 0.0001;                     // black luminance (cd/m^2)\nconst float Y_MID = 15.0;                       // mid-point luminance (cd/m^2)\nconst float Y_MAX = 1000.0;                     // peak white luminance (cd/m^2)\n\nconst Chromaticities DISPLAY_PRI = P3D65_PRI;   // encoding primaries (device setup)\nconst Chromaticities LIMITING_PRI = P3D65_PRI;  // limiting primaries\n\nconst int EOTF = 0;                             // 0: ST-2084 (PQ)\n                                                // 1: BT.1886 (Rec.709/2020 settings) \n                                                // 2: sRGB (mon_curve w/ presets)\n                                                // 3: gamma 2.6\n                                                // 4: linear (no EOTF)\n                                                // 5: HLG\n\nconst int SURROUND = 0;                         // 0: dark ( NOTE: this is the only active setting! )\n                                                // 1: dim ( *inactive* - selecting this will have no effect )\n                                                // 2: normal ( *inactive* - selecting this will have no effect )\n\nconst bool STRETCH_BLACK = true;                // stretch black luminance to a PQ code value of 0\nconst bool D60_SIM = false;                       \nconst bool LEGAL_RANGE = false;\n\n\nvoid main\n(\n\tinput varying float rIn,\n\tinput varying float gIn,\n\tinput varying float bIn,\n\tinput varying float aIn,\n\toutput varying float rOut,\n\toutput varying float gOut,\n\toutput varying float bOut,\n\toutput varying float aOut\n)\n{\n    float aces[3] = {rIn, gIn, bIn};\n\n    float cv[3] = outputTransform( aces, Y_MIN,\n                                         Y_MID,\n                                         Y_MAX,\n                                         DISPLAY_PRI,\n                                         LIMITING_PRI,\n                                         EOTF,\n                                         SURROUND,\n                                         STRETCH_BLACK,\n                                         D60_SIM,\n                                         LEGAL_RANGE );\n\n    rOut = cv[0];\n    gOut = cv[1];\n    bOut = cv[2];\n    aOut = aIn;\n}",
            "_aces_transform_id": {
              "py/object": "opencolorio_config_aces.config.reference.discover.classify.ACESTransformID",
              "_aces_transform_id": "urn:ampas:aces:transformId:v1.5:RRTODT.Academy.P3D65_1000nits_15nits_ST2084.a1.1.0",
              "_urn": "urn:ampas:aces:transformId:v1.5",
              "_type": "RRTODT",
              "_namespace": "Academy",
              "_name": "P3D65_1000nits_15nits_ST2084",
              "_major_version_number": "a1",
              "_minor_version_number": "1",
              "_patch_version_number": "0",
              "_source": "ACES2065-1",
              "_target": "P3D65_1000nits_15nits_ST2084"
            },
            "_user_name": "ACES 1.0 Output - P3-D65 ST2084 (1000 nits)",
            "_description": "Output Transform - P3D65 (1000 cd/m^2)\n\n\nSummary :\nThis transform maps ACES onto a P3D65 ST.2084 HDR display calibrated\nto a D65 white point at 1000 cd/m^2. The assumed observer adapted white is\nD65, and the viewing environment is that of a dark surround. Mid-gray\nluminance is targeted at 15 cd/m^2.\n\nNOTE :\nThe parameterized \"Output Transform\" function used as basis for this\ntransform includes a parameter labeled \"SURROUND\". However, as noted in\n\"ACESlib.OutputTransforms.ctl\", this sub-module is currently a \"placeholder\"\nand as such currently only supports a rendering intended for dark surround\nenvironments. While it is planned for future releases to fully activate the\nthis module and provide adjustment for dark/dim/normal surrounds, setting\nSURROUND equal to either dim or normal will have no effect at this time.\n\nThat being said, these Output Transforms have been used successfully on\nmajor feature and television projects when mastering for home HDR where a\ndim surround environment is assumed. Based on that, these transforms are\nconsidered adequate for use for dim surround mastering, although, as always,\ncreative adjustments to contrast and saturation may be desirable and should\nbe saved as a \"trim pass.\"\n\nDevice Primaries :\nPrimaries are those specified in Rec. ITU-R BT.2020\nCIE 1931 chromaticities:  x         y         Y\nRed:          0.68      0.32\nGreen:        0.265     0.69\nBlue:         0.15      0.06\nWhite:        0.3127    0.329     1000 cd/m^2\n18% Gray:     0.3127    0.329     15 cd/m^2\n\nDisplay EOTF :\nThe reference electro-optical transfer function specified in SMPTE ST\n2084-2014. This transform makes no attempt to address the Annex functions\nwhich address integer quantization.\n\nAssumed observer adapted white point:\nCIE 1931 chromaticities:    x            y\n0.3127       0.329\n\nViewing Environment:\nEnvironment specified in SMPTE RP 431-2-2007",
            "_family": "outputTransform",
            "_genus": "p3"
          }
        }
      ]
    },
    {
      "name": "Display - P3-D60",
      "family": "Display",
      "description": "Convert CIE XYZ (D65 white) to Gamma 2.6, P3-D60 (Bradford adaptation)",
      "from_reference": {
        "transform_type": "BuiltinTransform",
        "style": "DISPLAY - CIE-XYZ-D65_to_G2.6-P3-D60-BFD"
      },
      "reference_space": "REFERENCE_SPACE_DISPLAY",
      "encoding": "sdr-video",
      "categories": "file-io",
      "transforms_data": [
        {
          "ordering": "460",
          "aces_transform_id": "urn:ampas:aces:transformId:v1.5:ODT.Academy.P3D60_48nits.a1.0.3",
          "builtin_transform_style": "ACES-OUTPUT - ACES2065-1_to_CIE-XYZ-D65 - SDR-CINEMA_1.0",
          "linked_display_colorspace_style": "DISPLAY - CIE-XYZ-D65_to_G2.6-P3-D60-BFD",
          "interface": "ViewTransform",
          "encoding": "sdr-video",
          "categories": "file-io",
          "ctl_transform": {
            "py/object": "opencolorio_config_aces.config.reference.discover.classify.CTLTransform",
            "_path": "/home/aswf/OpenColorIO-Config-ACES/opencolorio_config_aces/config/reference/aces-dev/transforms/ctl/odt/p3/ODT.Academy.P3D60_48nits.ctl",
            "_code": "\n// <ACEStransformID>urn:ampas:aces:transformId:v1.5:ODT.Academy.P3D60_48nits.a1.0.3</ACEStransformID>\n// <ACESuserName>ACES 1.0 Output - P3-D60</ACESuserName>\n\n// \n// Output Device Transform - P3D60\n//\n\n//\n// Summary :\n//  This transform is intended for mapping OCES onto a P3 digital cinema \n//  projector that is calibrated to a D60 white point at 48 cd/m^2. The assumed \n//  observer adapted white is D60, and the viewing environment is that of a dark \n//  theater. \n//\n// Device Primaries : \n//  CIE 1931 chromaticities:  x         y         Y\n//              Red:          0.68      0.32\n//              Green:        0.265     0.69\n//              Blue:         0.15      0.06\n//              White:        0.32168   0.33767   48 cd/m^2\n//\n// Display EOTF :\n//  Gamma: 2.6\n//\n// Assumed observer adapted white point:\n//         CIE 1931 chromaticities:    x            y\n//                                     0.32168      0.33767\n//\n// Viewing Environment:\n//  Environment specified in SMPTE RP 431-2-2007\n//\n\n\nimport \"ACESlib.Utilities\";\nimport \"ACESlib.Transform_Common\";\nimport \"ACESlib.ODT_Common\";\nimport \"ACESlib.Tonescales\";\n\n\n\n/* --- ODT Parameters --- */\nconst Chromaticities DISPLAY_PRI = P3D60_PRI;\nconst float XYZ_2_DISPLAY_PRI_MAT[4][4] = XYZtoRGB( DISPLAY_PRI, 1.0);\n\nconst float DISPGAMMA = 2.6; \n\n\nvoid main \n(\n    input varying float rIn, \n    input varying float gIn, \n    input varying float bIn, \n    input varying float aIn,\n    output varying float rOut,\n    output varying float gOut,\n    output varying float bOut,\n    output varying float aOut\n)\n{\n    float oces[3] = { rIn, gIn, bIn};\n\n    // OCES to RGB rendering space\n    float rgbPre[3] = mult_f3_f44( oces, AP0_2_AP1_MAT);\n\n    // Apply the tonescale independently in rendering-space RGB\n    float rgbPost[3];\n    rgbPost[0] = segmented_spline_c9_fwd( rgbPre[0]);\n    rgbPost[1] = segmented_spline_c9_fwd( rgbPre[1]);\n    rgbPost[2] = segmented_spline_c9_fwd( rgbPre[2]);\n\n    // Scale luminance to linear code value\n    float linearCV[3];\n    linearCV[0] = Y_2_linCV( rgbPost[0], CINEMA_WHITE, CINEMA_BLACK);\n    linearCV[1] = Y_2_linCV( rgbPost[1], CINEMA_WHITE, CINEMA_BLACK);\n    linearCV[2] = Y_2_linCV( rgbPost[2], CINEMA_WHITE, CINEMA_BLACK);\n\n    // Convert to display primary encoding\n    // Rendering space RGB to XYZ\n    float XYZ[3] = mult_f3_f44( linearCV, AP1_2_XYZ_MAT);\n\n    // CIE XYZ to display primaries\n    linearCV = mult_f3_f44( XYZ, XYZ_2_DISPLAY_PRI_MAT);\n\n    // Handle out-of-gamut values\n    // Clip values < 0 or > 1 (i.e. projecting outside the display primaries)\n    linearCV = clamp_f3( linearCV, 0., 1.);\n\n    // Encode linear code values with transfer function\n    float outputCV[3] = pow_f3( linearCV, 1./ DISPGAMMA);\n\n    rOut = outputCV[0];\n    gOut = outputCV[1];\n    bOut = outputCV[2];\n    aOut = aIn;\n}",
            "_aces_transform_id": {
              "py/object": "opencolorio_config_aces.config.reference.discover.classify.ACESTransformID",
              "_aces_transform_id": "urn:ampas:aces:transformId:v1.5:ODT.Academy.P3D60_48nits.a1.0.3",
              "_urn": "urn:ampas:aces:transformId:v1.5",
              "_type": "ODT",
              "_namespace": "Academy",
              "_name": "P3D60_48nits",
              "_major_version_number": "a1",
              "_minor_version_number": "0",
              "_patch_version_number": "3",
              "_source": "OCES",
              "_target": "P3D60_48nits"
            },
            "_user_name": "ACES 1.0 Output - P3-D60",
            "_description": "Output Device Transform - P3D60\n\n\nSummary :\nThis transform is intended for mapping OCES onto a P3 digital cinema\nprojector that is calibrated to a D60 white point at 48 cd/m^2. The assumed\nobserver adapted white is D60, and the viewing environment is that of a dark\ntheater.\n\nDevice Primaries :\nCIE 1931 chromaticities:  x         y         Y\nRed:          0.68      0.32\nGreen:        0.265     0.69\nBlue:         0.15      0.06\nWhite:        0.32168   0.33767   48 cd/m^2\n\nDisplay EOTF :\nGamma: 2.6\n\nAssumed observer adapted white point:\nCIE 1931 chromaticities:    x            y\n0.32168      0.33767\n\nViewing Environment:\nEnvironment specified in SMPTE RP 431-2-2007",
            "_family": "output_transform",
            "_genus": "p3"
          }
        }
      ]
    },
    {
      "name": "Display - P3-D65",
      "family": "Display",
      "description": "Convert CIE XYZ (D65 white) to Gamma 2.6, P3-D65",
      "from_reference": {
        "transform_type": "BuiltinTransform",
        "style": "DISPLAY - CIE-XYZ-D65_to_G2.6-P3-D65"
      },
      "reference_space": "REFERENCE_SPACE_DISPLAY",
      "encoding": "sdr-video",
      "categories": "file-io",
      "transforms_data": [
        {
          "ordering": "460",
          "aces_transform_id": "urn:ampas:aces:transformId:v1.5:ODT.Academy.P3D65_48nits.a1.1.0",
          "builtin_transform_style": "ACES-OUTPUT - ACES2065-1_to_CIE-XYZ-D65 - SDR-CINEMA_1.0",
          "linked_display_colorspace_style": "DISPLAY - CIE-XYZ-D65_to_G2.6-P3-D65",
          "interface": "ViewTransform",
          "encoding": "sdr-video",
          "categories": "file-io",
          "ctl_transform": {
            "py/object": "opencolorio_config_aces.config.reference.discover.classify.CTLTransform",
            "_path": "/home/aswf/OpenColorIO-Config-ACES/opencolorio_config_aces/config/reference/aces-dev/transforms/ctl/odt/p3/ODT.Academy.P3D65_48nits.ctl",
            "_code": "\n// <ACEStransformID>urn:ampas:aces:transformId:v1.5:ODT.Academy.P3D65_48nits.a1.1.0</ACEStransformID>\n// <ACESuserName>ACES 1.0 Output - P3D65</ACESuserName>\n\n// \n// Output Device Transform - P3D65\n//\n\n//\n// Summary :\n//  This transform is intended for mapping OCES onto a projector with P3\n//  primaries that has been set up such that equal neutral RGB code values\n//  sent to the projector produce a chromaticity equal to that of D65\n//  and that the peak neutral luminance is 48 nits. The assumed observer \n//  adapted white is D65, and the viewing environment is a dark surround. \n//\n//  A possible use case for this transform would be mastering for a theatrical\n//  release with a creative white point of D65.\n//\n// Device Primaries : \n//  CIE 1931 chromaticities:  x         y         Y\n//              Red:          0.68      0.32\n//              Green:        0.265     0.69\n//              Blue:         0.15      0.06\n//              White:        0.3127    0.329     48 cd/m^2\n//\n// Display EOTF :\n//  Gamma: 2.6\n//\n// Assumed observer adapted white point:\n//         CIE 1931 chromaticities:    x            y\n//                                     0.3127       0.329\n//\n// Viewing Environment:\n//  Environment specified in SMPTE RP 431-2-2007\n//\n\n\nimport \"ACESlib.Utilities\";\nimport \"ACESlib.Transform_Common\";\nimport \"ACESlib.ODT_Common\";\nimport \"ACESlib.Tonescales\";\n\n\n\n/* --- ODT Parameters --- */\nconst Chromaticities DISPLAY_PRI = P3D65_PRI;\nconst float XYZ_2_DISPLAY_PRI_MAT[4][4] = XYZtoRGB(DISPLAY_PRI,1.0);\n\nconst float DISPGAMMA = 2.6;\n\n\nvoid main \n(\n    input varying float rIn, \n    input varying float gIn, \n    input varying float bIn, \n    input varying float aIn,\n    output varying float rOut,\n    output varying float gOut,\n    output varying float bOut,\n    output varying float aOut\n)\n{\n    float oces[3] = { rIn, gIn, bIn};\n\n    // OCES to RGB rendering space\n    float rgbPre[3] = mult_f3_f44( oces, AP0_2_AP1_MAT);\n\n    // Apply the tonescale independently in rendering-space RGB\n    float rgbPost[3];\n    rgbPost[0] = segmented_spline_c9_fwd( rgbPre[0]);\n    rgbPost[1] = segmented_spline_c9_fwd( rgbPre[1]);\n    rgbPost[2] = segmented_spline_c9_fwd( rgbPre[2]);\n\n  \t// Scale luminance to linear code value\n    float linearCV[3];\n    linearCV[0] = Y_2_linCV( rgbPost[0], CINEMA_WHITE, CINEMA_BLACK);\n    linearCV[1] = Y_2_linCV( rgbPost[1], CINEMA_WHITE, CINEMA_BLACK);\n    linearCV[2] = Y_2_linCV( rgbPost[2], CINEMA_WHITE, CINEMA_BLACK);\n\n    // Convert to display primary encoding\n    // Rendering space RGB to XYZ\n    float XYZ[3] = mult_f3_f44( linearCV, AP1_2_XYZ_MAT);\n\n    // Apply CAT from ACES white point to assumed observer adapted white point\n    XYZ = mult_f3_f33( XYZ, D60_2_D65_CAT);\n\n    // CIE XYZ to display primaries\n    linearCV = mult_f3_f44( XYZ, XYZ_2_DISPLAY_PRI_MAT);\n\n    // Handle out-of-gamut values\n    // Clip values < 0 or > 1 (i.e. projecting outside the display primaries)\n    linearCV = clamp_f3( linearCV, 0., 1.);\n  \n    // Encode linear code values with transfer function\n    float outputCV[3] = pow_f3( linearCV, 1./ DISPGAMMA);\n  \n    rOut = outputCV[0];\n    gOut = outputCV[1];\n    bOut = outputCV[2];\n    aOut = aIn;\n}\n",
            "_aces_transform_id": {
              "py/object": "opencolorio_config_aces.config.reference.discover.classify.ACESTransformID",
              "_aces_transform_id": "urn:ampas:aces:transformId:v1.5:ODT.Academy.P3D65_48nits.a1.1.0",
              "_urn": "urn:ampas:aces:transformId:v1.5",
              "_type": "ODT",
              "_namespace": "Academy",
              "_name": "P3D65_48nits",
              "_major_version_number": "a1",
              "_minor_version_number": "1",
              "_patch_version_number": "0",
              "_source": "OCES",
              "_target": "P3D65_48nits"
            },
            "_user_name": "ACES 1.0 Output - P3D65",
            "_description": "Output Device Transform - P3D65\n\n\nSummary :\nThis transform is intended for mapping OCES onto a projector with P3\nprimaries that has been set up such that equal neutral RGB code values\nsent to the projector produce a chromaticity equal to that of D65\nand that the peak neutral luminance is 48 nits. The assumed observer\nadapted white is D65, and the viewing environment is a dark surround.\n\nA possible use case for this transform would be mastering for a theatrical\nrelease with a creative white point of D65.\n\nDevice Primaries :\nCIE 1931 chromaticities:  x         y         Y\nRed:          0.68      0.32\nGreen:        0.265     0.69\nBlue:         0.15      0.06\nWhite:        0.3127    0.329     48 cd/m^2\n\nDisplay EOTF :\nGamma: 2.6\n\nAssumed observer adapted white point:\nCIE 1931 chromaticities:    x            y\n0.3127       0.329\n\nViewing Environment:\nEnvironment specified in SMPTE RP 431-2-2007",
            "_family": "output_transform",
            "_genus": "p3"
          }
        }
      ]
    },
    {
      "name": "Display - P3-DCI",
      "family": "Display",
      "description": "Convert CIE XYZ (D65 white) to Gamma 2.6, P3-DCI (DCI white with Bradford adaptation)",
      "from_reference": {
        "transform_type": "BuiltinTransform",
        "style": "DISPLAY - CIE-XYZ-D65_to_G2.6-P3-DCI-BFD"
      },
      "reference_space": "REFERENCE_SPACE_DISPLAY",
      "encoding": "sdr-video",
      "categories": "file-io",
      "transforms_data": [
        {
          "ordering": "460",
          "aces_transform_id": "urn:ampas:aces:transformId:v1.5:ODT.Academy.P3DCI_48nits.a1.0.3",
          "builtin_transform_style": "ACES-OUTPUT - ACES2065-1_to_CIE-XYZ-D65 - SDR-CINEMA-D60sim-DCI_1.0",
          "linked_display_colorspace_style": "DISPLAY - CIE-XYZ-D65_to_G2.6-P3-DCI-BFD",
          "interface": "ViewTransform",
          "encoding": "sdr-video",
          "categories": "file-io",
          "ctl_transform": {
            "py/object": "opencolorio_config_aces.config.reference.discover.classify.CTLTransform",
            "_path": "/home/aswf/OpenColorIO-Config-ACES/opencolorio_config_aces/config/reference/aces-dev/transforms/ctl/odt/p3/ODT.Academy.P3DCI_D60sim_48nits.ctl",
            "_code": "\n// <ACEStransformID>urn:ampas:aces:transformId:v1.5:ODT.Academy.P3DCI_48nits.a1.0.3</ACEStransformID>\n// <ACESuserName>ACES 1.0 Output - P3-DCI (D60 simulation)</ACESuserName>\n\n// \n// Output Device Transform - P3DCI (D60 simulation)\n//\n\n//\n// Summary :\n//  This transform is intended for mapping OCES onto a P3 digital cinema \n//  projector that is calibrated to a DCI white point at 48 cd/m^2. The assumed \n//  observer adapted white is D60, and the viewing environment is that of a dark\n//  theater. \n//\n// Device Primaries : \n//  CIE 1931 chromaticities:  x         y         Y\n//              Red:          0.68      0.32\n//              Green:        0.265     0.69\n//              Blue:         0.15      0.06\n//              White:        0.314     0.351     48 cd/m^2\n//\n// Display EOTF :\n//  Gamma: 2.6\n//\n// Assumed observer adapted white point:\n//         CIE 1931 chromaticities:    x            y\n//                                     0.32168      0.33767\n//\n// Viewing Environment:\n//  Environment specified in SMPTE RP 431-2-2007\n//\n\n\n\nimport \"ACESlib.Utilities\";\nimport \"ACESlib.Transform_Common\";\nimport \"ACESlib.ODT_Common\";\nimport \"ACESlib.Tonescales\";\n\n\n\n/* --- ODT Parameters --- */\nconst Chromaticities DISPLAY_PRI = P3DCI_PRI;\nconst float XYZ_2_DISPLAY_PRI_MAT[4][4] = XYZtoRGB( DISPLAY_PRI, 1.0);\n\nconst float DISPGAMMA = 2.6; \n\n// Rolloff white settings for P3DCI (D60 simulation)\nconst float NEW_WHT = 0.918;\nconst float ROLL_WIDTH = 0.5;    \nconst float SCALE = 0.96;\n\n\n\nvoid main \n(\n    input varying float rIn, \n    input varying float gIn, \n    input varying float bIn, \n    input varying float aIn,\n    output varying float rOut,\n    output varying float gOut,\n    output varying float bOut,\n    output varying float aOut\n)\n{\n    float oces[3] = { rIn, gIn, bIn};\n\n    // OCES to RGB rendering space\n    float rgbPre[3] = mult_f3_f44( oces, AP0_2_AP1_MAT);\n\n    // Apply the tonescale independently in rendering-space RGB\n    float rgbPost[3];\n    rgbPost[0] = segmented_spline_c9_fwd( rgbPre[0]);\n    rgbPost[1] = segmented_spline_c9_fwd( rgbPre[1]);\n    rgbPost[2] = segmented_spline_c9_fwd( rgbPre[2]);\n\n    // Scale luminance to linear code value\n    float linearCV[3];\n    linearCV[0] = Y_2_linCV( rgbPost[0], CINEMA_WHITE, CINEMA_BLACK);\n    linearCV[1] = Y_2_linCV( rgbPost[1], CINEMA_WHITE, CINEMA_BLACK);\n    linearCV[2] = Y_2_linCV( rgbPost[2], CINEMA_WHITE, CINEMA_BLACK);\n\n    // --- Compensate for different white point being darker  --- //\n    // This adjustment corrects for an issue that exists in ODTs where the \n    // device is calibrated to a white chromaticity other than that of the \n    // adapted white.\n    // In order to produce D60 on a device calibrated to DCI white (i.e. \n    // equal display code values yield CIE x,y chromaticities of 0.314, 0.351) \n    // the red channel is higher than blue and green to compensate for the \n    // \"greener\" DCI white. This is the intended behavior but it means that \n    // without compensation, as highlights increase, the red channel will hit \n    // the device maximum first and clip, resulting in a chromaticity shift as \n    // the blue and green channels continue to increase.\n    // To avoid this clipping behavior, a slight scale factor is applied to \n    // allow the ODT to simulate D60 within the DCI calibration white point. \n    // However, the magnitude of the scale factor required was considered too \n    // large; therefore, the scale factor was reduced and the additional \n    // required compression was achieved via a reshaping of the highlight \n    // rolloff in conjunction with the scale. The shape of this rolloff was \n    // determined through subjective experiments and deemed to best reproduce \n    // the \"character\" of the highlights in the P3D60 ODT.\n\n    // Roll off highlights to avoid need for as much scaling\n    linearCV[0] = roll_white_fwd( linearCV[0], NEW_WHT, ROLL_WIDTH);\n    linearCV[1] = roll_white_fwd( linearCV[1], NEW_WHT, ROLL_WIDTH);\n    linearCV[2] = roll_white_fwd( linearCV[2], NEW_WHT, ROLL_WIDTH);\n\n    // Scale and clamp white to avoid casted highlights due to D60 simulation\n    linearCV[0] = min( linearCV[0], NEW_WHT) * SCALE;\n    linearCV[1] = min( linearCV[1], NEW_WHT) * SCALE;\n    linearCV[2] = min( linearCV[2], NEW_WHT) * SCALE;\n\n    // Convert to display primary encoding\n    // Rendering space RGB to XYZ\n    float XYZ[3] = mult_f3_f44( linearCV, AP1_2_XYZ_MAT);\n\n    // CIE XYZ to display primaries\n    linearCV = mult_f3_f44( XYZ, XYZ_2_DISPLAY_PRI_MAT);\n\n    // Handle out-of-gamut values\n    // Clip values < 0 or > 1 (i.e. projecting outside the display primaries)\n    linearCV = clamp_f3( linearCV, 0., 1.);\n\n    // Encode linear code values with transfer function\n    float outputCV[3] = pow_f3( linearCV, 1./ DISPGAMMA);\n\n    rOut = outputCV[0];\n    gOut = outputCV[1];\n    bOut = outputCV[2];\n    aOut = aIn;\n}",
            "_aces_transform_id": {
              "py/object": "opencolorio_config_aces.config.reference.discover.classify.ACESTransformID",
              "_aces_transform_id": "urn:ampas:aces:transformId:v1.5:ODT.Academy.P3DCI_48nits.a1.0.3",
              "_urn": "urn:ampas:aces:transformId:v1.5",
              "_type": "ODT",
              "_namespace": "Academy",
              "_name": "P3DCI_48nits",
              "_major_version_number": "a1",
              "_minor_version_number": "0",
              "_patch_version_number": "3",
              "_source": "OCES",
              "_target": "P3DCI_48nits"
            },
            "_user_name": "ACES 1.0 Output - P3-DCI (D60 simulation)",
            "_description": "Output Device Transform - P3DCI (D60 simulation)\n\n\nSummary :\nThis transform is intended for mapping OCES onto a P3 digital cinema\nprojector that is calibrated to a DCI white point at 48 cd/m^2. The assumed\nobserver adapted white is D60, and the viewing environment is that of a dark\ntheater.\n\nDevice Primaries :\nCIE 1931 chromaticities:  x         y         Y\nRed:          0.68      0.32\nGreen:        0.265     0.69\nBlue:         0.15      0.06\nWhite:        0.314     0.351     48 cd/m^2\n\nDisplay EOTF :\nGamma: 2.6\n\nAssumed observer adapted white point:\nCIE 1931 chromaticities:    x            y\n0.32168      0.33767\n\nViewing Environment:\nEnvironment specified in SMPTE RP 431-2-2007",
            "_family": "output_transform",
            "_genus": "p3"
          }
        }
      ]
    }
  ],
  "named_transforms": [],
  "view_transforms": [
    {
      "name": "Output - SDR Video - ACES 1.0",
      "from_reference": {
        "transform_type": "BuiltinTransform",
        "style": "ACES-OUTPUT - ACES2065-1_to_CIE-XYZ-D65 - SDR-VIDEO_1.0"
      },
      "description": "Component of ACES Output Transforms for SDR D65 video\n\nACEStransformID: urn:ampas:aces:transformId:v1.5:ODT.Academy.RGBmonitor_100nits_dim.a1.0.3\nACEStransformID: urn:ampas:aces:transformId:v1.5:ODT.Academy.Rec709_100nits_dim.a1.0.3\nACEStransformID: urn:ampas:aces:transformId:v1.5:ODT.Academy.Rec2020_100nits_dim.a1.0.3",
      "transforms_data": [
        {
          "ordering": "400",
          "aces_transform_id": "urn:ampas:aces:transformId:v1.5:ODT.Academy.RGBmonitor_100nits_dim.a1.0.3",
          "builtin_transform_style": "ACES-OUTPUT - ACES2065-1_to_CIE-XYZ-D65 - SDR-VIDEO_1.0",
          "linked_display_colorspace_style": "DISPLAY - CIE-XYZ-D65_to_sRGB",
          "interface": "ViewTransform",
          "encoding": "sdr-video",
          "categories": "file-io",
          "ctl_transform": {
            "py/object": "opencolorio_config_aces.config.reference.discover.classify.CTLTransform",
            "_path": "/home/aswf/OpenColorIO-Config-ACES/opencolorio_config_aces/config/reference/aces-dev/transforms/ctl/odt/sRGB/ODT.Academy.sRGB_100nits_dim.ctl",
            "_code": "\n// <ACEStransformID>urn:ampas:aces:transformId:v1.5:ODT.Academy.RGBmonitor_100nits_dim.a1.0.3</ACEStransformID>\n// <ACESuserName>ACES 1.0 Output - sRGB</ACESuserName>\n\n// \n// Output Device Transform - RGB computer monitor\n//\n\n//\n// Summary :\n//  This transform is intended for mapping OCES onto a desktop computer monitor \n//  typical of those used in motion picture visual effects production. These \n//  monitors may occasionally be referred to as \"sRGB\" displays, however, the \n//  monitor for which this transform is designed does not exactly match the \n//  specifications in IEC 61966-2-1:1999.\n// \n//  The assumed observer adapted white is D65, and the viewing environment is \n//  that of a dim surround. \n//\n//  The monitor specified is intended to be more typical of those found in \n//  visual effects production.\n//\n// Device Primaries : \n//  Primaries are those specified in Rec. ITU-R BT.709\n//  CIE 1931 chromaticities:  x         y         Y\n//              Red:          0.64      0.33\n//              Green:        0.3       0.6\n//              Blue:         0.15      0.06\n//              White:        0.3127    0.329     100 cd/m^2\n//\n// Display EOTF :\n//  The reference electro-optical transfer function specified in \n//  IEC 61966-2-1:1999.\n//  Note: This EOTF is *NOT* gamma 2.2\n//\n// Signal Range:\n//    This transform outputs full range code values.\n//\n// Assumed observer adapted white point:\n//         CIE 1931 chromaticities:    x            y\n//                                     0.3127       0.329\n//\n// Viewing Environment:\n//   This ODT has a compensation for viewing environment variables more typical \n//   of those associated with video mastering.\n//\n\n\n\nimport \"ACESlib.Utilities\";\nimport \"ACESlib.Transform_Common\";\nimport \"ACESlib.ODT_Common\";\nimport \"ACESlib.Tonescales\";\n\n\n\n/* --- ODT Parameters --- */\nconst Chromaticities DISPLAY_PRI = REC709_PRI;\nconst float XYZ_2_DISPLAY_PRI_MAT[4][4] = XYZtoRGB(DISPLAY_PRI,1.0);\n\n// NOTE: The EOTF is *NOT* gamma 2.4, it follows IEC 61966-2-1:1999\nconst float DISPGAMMA = 2.4; \nconst float OFFSET = 0.055;\n\n\nvoid main \n(\n    input varying float rIn, \n    input varying float gIn, \n    input varying float bIn, \n    input varying float aIn,\n    output varying float rOut,\n    output varying float gOut,\n    output varying float bOut,\n    output varying float aOut\n)\n{\n    float oces[3] = { rIn, gIn, bIn};\n\n    // OCES to RGB rendering space\n    float rgbPre[3] = mult_f3_f44( oces, AP0_2_AP1_MAT);\n\n    // Apply the tonescale independently in rendering-space RGB\n    float rgbPost[3];\n    rgbPost[0] = segmented_spline_c9_fwd( rgbPre[0]);\n    rgbPost[1] = segmented_spline_c9_fwd( rgbPre[1]);\n    rgbPost[2] = segmented_spline_c9_fwd( rgbPre[2]);\n\n    // Scale luminance to linear code value\n    float linearCV[3];\n    linearCV[0] = Y_2_linCV( rgbPost[0], CINEMA_WHITE, CINEMA_BLACK);\n    linearCV[1] = Y_2_linCV( rgbPost[1], CINEMA_WHITE, CINEMA_BLACK);\n    linearCV[2] = Y_2_linCV( rgbPost[2], CINEMA_WHITE, CINEMA_BLACK);    \n\n    // Apply gamma adjustment to compensate for dim surround\n    linearCV = darkSurround_to_dimSurround( linearCV);\n\n    // Apply desaturation to compensate for luminance difference\n    linearCV = mult_f3_f33( linearCV, ODT_SAT_MAT);\n\n    // Convert to display primary encoding\n    // Rendering space RGB to XYZ\n    float XYZ[3] = mult_f3_f44( linearCV, AP1_2_XYZ_MAT);\n\n    // Apply CAT from ACES white point to assumed observer adapted white point\n    XYZ = mult_f3_f33( XYZ, D60_2_D65_CAT);\n\n    // CIE XYZ to display primaries\n    linearCV = mult_f3_f44( XYZ, XYZ_2_DISPLAY_PRI_MAT);\n\n    // Handle out-of-gamut values\n    // Clip values < 0 or > 1 (i.e. projecting outside the display primaries)\n    linearCV = clamp_f3( linearCV, 0., 1.);\n\n    // Encode linear code values with transfer function\n    float outputCV[3];\n    // moncurve_r with gamma of 2.4 and offset of 0.055 matches the EOTF found in IEC 61966-2-1:1999 (sRGB)\n    outputCV[0] = moncurve_r( linearCV[0], DISPGAMMA, OFFSET);\n    outputCV[1] = moncurve_r( linearCV[1], DISPGAMMA, OFFSET);\n    outputCV[2] = moncurve_r( linearCV[2], DISPGAMMA, OFFSET);\n\n    rOut = outputCV[0];\n    gOut = outputCV[1];\n    bOut = outputCV[2];\n    aOut = aIn;\n}",
            "_aces_transform_id": {
              "py/object": "opencolorio_config_aces.config.reference.discover.classify.ACESTransformID",
              "_aces_transform_id": "urn:ampas:aces:transformId:v1.5:ODT.Academy.RGBmonitor_100nits_dim.a1.0.3",
              "_urn": "urn:ampas:aces:transformId:v1.5",
              "_type": "ODT",
              "_namespace": "Academy",
              "_name": "RGBmonitor_100nits_dim",
              "_major_version_number": "a1",
              "_minor_version_number": "0",
              "_patch_version_number": "3",
              "_source": "OCES",
              "_target": "RGBmonitor_100nits_dim"
            },
            "_user_name": "ACES 1.0 Output - sRGB",
            "_description": "Output Device Transform - RGB computer monitor\n\n\nSummary :\nThis transform is intended for mapping OCES onto a desktop computer monitor\ntypical of those used in motion picture visual effects production. These\nmonitors may occasionally be referred to as \"sRGB\" displays, however, the\nmonitor for which this transform is designed does not exactly match the\nspecifications in IEC 61966-2-1:1999.\n\nThe assumed observer adapted white is D65, and the viewing environment is\nthat of a dim surround.\n\nThe monitor specified is intended to be more typical of those found in\nvisual effects production.\n\nDevice Primaries :\nPrimaries are those specified in Rec. ITU-R BT.709\nCIE 1931 chromaticities:  x         y         Y\nRed:          0.64      0.33\nGreen:        0.3       0.6\nBlue:         0.15      0.06\nWhite:        0.3127    0.329     100 cd/m^2\n\nDisplay EOTF :\nThe reference electro-optical transfer function specified in\nIEC 61966-2-1:1999.\nNote: This EOTF is *NOT* gamma 2.2\n\nSignal Range:\nThis transform outputs full range code values.\n\nAssumed observer adapted white point:\nCIE 1931 chromaticities:    x            y\n0.3127       0.329\n\nViewing Environment:\nThis ODT has a compensation for viewing environment variables more typical\nof those associated with video mastering.",
            "_family": "output_transform",
            "_genus": "sRGB"
          }
        },
        {
          "ordering": "410",
          "aces_transform_id": "urn:ampas:aces:transformId:v1.5:ODT.Academy.Rec709_100nits_dim.a1.0.3",
          "builtin_transform_style": "ACES-OUTPUT - ACES2065-1_to_CIE-XYZ-D65 - SDR-VIDEO_1.0",
          "linked_display_colorspace_style": "DISPLAY - CIE-XYZ-D65_to_REC.1886-REC.709",
          "interface": "ViewTransform",
          "encoding": "sdr-video",
          "categories": "file-io",
          "ctl_transform": {
            "py/object": "opencolorio_config_aces.config.reference.discover.classify.CTLTransform",
            "_path": "/home/aswf/OpenColorIO-Config-ACES/opencolorio_config_aces/config/reference/aces-dev/transforms/ctl/odt/rec709/ODT.Academy.Rec709_100nits_dim.ctl",
            "_code": "\n// <ACEStransformID>urn:ampas:aces:transformId:v1.5:ODT.Academy.Rec709_100nits_dim.a1.0.3</ACEStransformID>\n// <ACESuserName>ACES 1.0 Output - Rec.709</ACESuserName>\n\n// \n// Output Device Transform - Rec709\n//\n\n//\n// Summary :\n//  This transform is intended for mapping OCES onto a Rec.709 broadcast monitor\n//  that is calibrated to a D65 white point at 100 cd/m^2. The assumed observer \n//  adapted white is D65, and the viewing environment is a dim surround. \n//\n//  A possible use case for this transform would be HDTV/video mastering.\n//\n// Device Primaries : \n//  Primaries are those specified in Rec. ITU-R BT.709\n//  CIE 1931 chromaticities:  x         y         Y\n//              Red:          0.64      0.33\n//              Green:        0.3       0.6\n//              Blue:         0.15      0.06\n//              White:        0.3127    0.329     100 cd/m^2\n//\n// Display EOTF :\n//  The reference electro-optical transfer function specified in \n//  Rec. ITU-R BT.1886.\n//\n// Signal Range:\n//    By default, this transform outputs full range code values. If instead a \n//    SMPTE \"legal\" signal is desired, there is a runtime flag to output \n//    SMPTE legal signal. In ctlrender, this can be achieved by appending \n//    '-param1 legalRange 1' after the '-ctl odt.ctl' string.\n//\n// Assumed observer adapted white point:\n//         CIE 1931 chromaticities:    x            y\n//                                     0.3127       0.329\n//\n// Viewing Environment:\n//   This ODT has a compensation for viewing environment variables more typical \n//   of those associated with video mastering.\n//\n\n\n\nimport \"ACESlib.Utilities\";\nimport \"ACESlib.Transform_Common\";\nimport \"ACESlib.ODT_Common\";\nimport \"ACESlib.Tonescales\";\n\n\n\n/* --- ODT Parameters --- */\nconst Chromaticities DISPLAY_PRI = REC709_PRI;\nconst float XYZ_2_DISPLAY_PRI_MAT[4][4] = XYZtoRGB(DISPLAY_PRI,1.0);\n\nconst float DISPGAMMA = 2.4; \nconst float L_W = 1.0;\nconst float L_B = 0.0;\n\n\n\nvoid main \n(\n    input varying float rIn, \n    input varying float gIn, \n    input varying float bIn, \n    input varying float aIn,\n    output varying float rOut,\n    output varying float gOut,\n    output varying float bOut,\n    output varying float aOut,\n    input varying int legalRange = 0\n)\n{\n    float oces[3] = { rIn, gIn, bIn};\n\n    // OCES to RGB rendering space\n    float rgbPre[3] = mult_f3_f44( oces, AP0_2_AP1_MAT);\n\n    // Apply the tonescale independently in rendering-space RGB\n    float rgbPost[3];\n    rgbPost[0] = segmented_spline_c9_fwd( rgbPre[0]);\n    rgbPost[1] = segmented_spline_c9_fwd( rgbPre[1]);\n    rgbPost[2] = segmented_spline_c9_fwd( rgbPre[2]);\n\n    // Scale luminance to linear code value\n    float linearCV[3];\n    linearCV[0] = Y_2_linCV( rgbPost[0], CINEMA_WHITE, CINEMA_BLACK);\n    linearCV[1] = Y_2_linCV( rgbPost[1], CINEMA_WHITE, CINEMA_BLACK);\n    linearCV[2] = Y_2_linCV( rgbPost[2], CINEMA_WHITE, CINEMA_BLACK);\n\n    // Apply gamma adjustment to compensate for dim surround\n    linearCV = darkSurround_to_dimSurround( linearCV);\n\n    // Apply desaturation to compensate for luminance difference\n    linearCV = mult_f3_f33( linearCV, ODT_SAT_MAT);\n\n    // Convert to display primary encoding\n    // Rendering space RGB to XYZ\n    float XYZ[3] = mult_f3_f44( linearCV, AP1_2_XYZ_MAT);\n\n    // Apply CAT from ACES white point to assumed observer adapted white point\n    XYZ = mult_f3_f33( XYZ, D60_2_D65_CAT);\n\n    // CIE XYZ to display primaries\n    linearCV = mult_f3_f44( XYZ, XYZ_2_DISPLAY_PRI_MAT);\n\n    // Handle out-of-gamut values\n    // Clip values < 0 or > 1 (i.e. projecting outside the display primaries)\n    linearCV = clamp_f3( linearCV, 0., 1.);\n\n    // Encode linear code values with transfer function\n    float outputCV[3];\n    outputCV[0] = bt1886_r( linearCV[0], DISPGAMMA, L_W, L_B);\n    outputCV[1] = bt1886_r( linearCV[1], DISPGAMMA, L_W, L_B);\n    outputCV[2] = bt1886_r( linearCV[2], DISPGAMMA, L_W, L_B);\n\n    // Default output is full range, check if legalRange param was set to true\n    if (legalRange == 1) {\n        outputCV = fullRange_to_smpteRange_f3( outputCV);\n    }\n\n    rOut = outputCV[0];\n    gOut = outputCV[1];\n    bOut = outputCV[2];\n    aOut = aIn;\n}\n",
            "_aces_transform_id": {
              "py/object": "opencolorio_config_aces.config.reference.discover.classify.ACESTransformID",
              "_aces_transform_id": "urn:ampas:aces:transformId:v1.5:ODT.Academy.Rec709_100nits_dim.a1.0.3",
              "_urn": "urn:ampas:aces:transformId:v1.5",
              "_type": "ODT",
              "_namespace": "Academy",
              "_name": "Rec709_100nits_dim",
              "_major_version_number": "a1",
              "_minor_version_number": "0",
              "_patch_version_number": "3",
              "_source": "OCES",
              "_target": "Rec709_100nits_dim"
            },
            "_user_name": "ACES 1.0 Output - Rec.709",
            "_description": "Output Device Transform - Rec709\n\n\nSummary :\nThis transform is intended for mapping OCES onto a Rec.709 broadcast monitor\nthat is calibrated to a D65 white point at 100 cd/m^2. The assumed observer\nadapted white is D65, and the viewing environment is a dim surround.\n\nA possible use case for this transform would be HDTV/video mastering.\n\nDevice Primaries :\nPrimaries are those specified in Rec. ITU-R BT.709\nCIE 1931 chromaticities:  x         y         Y\nRed:          0.64      0.33\nGreen:        0.3       0.6\nBlue:         0.15      0.06\nWhite:        0.3127    0.329     100 cd/m^2\n\nDisplay EOTF :\nThe reference electro-optical transfer function specified in\nRec. ITU-R BT.1886.\n\nSignal Range:\nBy default, this transform outputs full range code values. If instead a\nSMPTE \"legal\" signal is desired, there is a runtime flag to output\nSMPTE legal signal. In ctlrender, this can be achieved by appending\n'-param1 legalRange 1' after the '-ctl odt.ctl' string.\n\nAssumed observer adapted white point:\nCIE 1931 chromaticities:    x            y\n0.3127       0.329\n\nViewing Environment:\nThis ODT has a compensation for viewing environment variables more typical\nof those associated with video mastering.",
            "_family": "output_transform",
            "_genus": "rec709"
          }
        },
        {
          "ordering": "420",
          "aces_transform_id": "urn:ampas:aces:transformId:v1.5:ODT.Academy.Rec2020_100nits_dim.a1.0.3",
          "builtin_transform_style": "ACES-OUTPUT - ACES2065-1_to_CIE-XYZ-D65 - SDR-VIDEO_1.0",
          "linked_display_colorspace_style": "DISPLAY - CIE-XYZ-D65_to_REC.1886-REC.2020",
          "interface": "ViewTransform",
          "encoding": "sdr-video",
          "categories": "file-io",
          "ctl_transform": {
            "py/object": "opencolorio_config_aces.config.reference.discover.classify.CTLTransform",
            "_path": "/home/aswf/OpenColorIO-Config-ACES/opencolorio_config_aces/config/reference/aces-dev/transforms/ctl/odt/rec2020/ODT.Academy.Rec2020_100nits_dim.ctl",
            "_code": "\n// <ACEStransformID>urn:ampas:aces:transformId:v1.5:ODT.Academy.Rec2020_100nits_dim.a1.0.3</ACEStransformID>\n// <ACESuserName>ACES 1.0 Output - Rec.2020</ACESuserName>\n\n// \n// Output Device Transform - Rec2020\n//\n\n//\n// Summary :\n//  This transform is intended for mapping OCES onto a Rec.2020 broadcast \n//  monitor that is calibrated to a D65 white point at 100 cd/m^2. The assumed \n//  observer adapted white is D65, and the viewing environment is that of a dim \n//  surround. \n//\n//  A possible use case for this transform would be UHDTV/video mastering.\n//\n// Device Primaries : \n//  Primaries are those specified in Rec. ITU-R BT.2020\n//  CIE 1931 chromaticities:  x         y         Y\n//              Red:          0.708     0.292\n//              Green:        0.17      0.797\n//              Blue:         0.131     0.046\n//              White:        0.3127    0.329     100 cd/m^2\n//\n// Display EOTF :\n//  The reference electro-optical transfer function specified in \n//  Rec. ITU-R BT.1886.\n//\n// Signal Range:\n//    By default, this transform outputs full range code values. If instead a \n//    SMPTE \"legal\" signal is desired, there is a runtime flag to output \n//    SMPTE legal signal. In ctlrender, this can be achieved by appending \n//    '-param1 legalRange 1' after the '-ctl odt.ctl' string.\n//\n// Assumed observer adapted white point:\n//         CIE 1931 chromaticities:    x            y\n//                                     0.3127       0.329\n//\n// Viewing Environment:\n//   This ODT has a compensation for viewing environment variables more typical \n//   of those associated with video mastering.\n//\n\n\n\nimport \"ACESlib.Utilities\";\nimport \"ACESlib.Transform_Common\";\nimport \"ACESlib.ODT_Common\";\nimport \"ACESlib.Tonescales\";\n\n\n\n/* --- ODT Parameters --- */\nconst Chromaticities DISPLAY_PRI = REC2020_PRI;\nconst float XYZ_2_DISPLAY_PRI_MAT[4][4] = XYZtoRGB(DISPLAY_PRI,1.0);\n\nconst float DISPGAMMA = 2.4; \nconst float L_W = 1.0;\nconst float L_B = 0.0;\n\n\n\nvoid main \n(\n    input varying float rIn, \n    input varying float gIn, \n    input varying float bIn, \n    input varying float aIn,\n    output varying float rOut,\n    output varying float gOut,\n    output varying float bOut,\n    output varying float aOut,\n    input varying int legalRange = 0\n)\n{\n    float oces[3] = { rIn, gIn, bIn};\n\n    // OCES to RGB rendering space\n    float rgbPre[3] = mult_f3_f44( oces, AP0_2_AP1_MAT);\n\n    // Apply the tonescale independently in rendering-space RGB\n    float rgbPost[3];\n    rgbPost[0] = segmented_spline_c9_fwd( rgbPre[0]);\n    rgbPost[1] = segmented_spline_c9_fwd( rgbPre[1]);\n    rgbPost[2] = segmented_spline_c9_fwd( rgbPre[2]);\n\n    // Scale luminance to linear code value\n    float linearCV[3];\n    linearCV[0] = Y_2_linCV( rgbPost[0], CINEMA_WHITE, CINEMA_BLACK);\n    linearCV[1] = Y_2_linCV( rgbPost[1], CINEMA_WHITE, CINEMA_BLACK);\n    linearCV[2] = Y_2_linCV( rgbPost[2], CINEMA_WHITE, CINEMA_BLACK);\n\n    // Apply gamma adjustment to compensate for dim surround\n    linearCV = darkSurround_to_dimSurround( linearCV);\n\n    // Apply desaturation to compensate for luminance difference\n    linearCV = mult_f3_f33( linearCV, ODT_SAT_MAT);\n\n    // Convert to display primary encoding\n    // Rendering space RGB to XYZ\n    float XYZ[3] = mult_f3_f44( linearCV, AP1_2_XYZ_MAT);\n\n    // Apply CAT from ACES white point to assumed observer adapted white point\n    XYZ = mult_f3_f33( XYZ, D60_2_D65_CAT);\n\n    // CIE XYZ to display primaries\n    linearCV = mult_f3_f44( XYZ, XYZ_2_DISPLAY_PRI_MAT);\n\n    // Handle out-of-gamut values\n    // Clip values < 0 or > 1 (i.e. projecting outside the display primaries)\n    linearCV = clamp_f3( linearCV, 0., 1.);\n\n    // Encode linear code values with transfer function\n    float outputCV[3];\n    outputCV[0] = bt1886_r( linearCV[0], DISPGAMMA, L_W, L_B);\n    outputCV[1] = bt1886_r( linearCV[1], DISPGAMMA, L_W, L_B);\n    outputCV[2] = bt1886_r( linearCV[2], DISPGAMMA, L_W, L_B);\n\n    // Default output is full range, check if legalRange param was set to true\n    if (legalRange == 1) {\n        outputCV = fullRange_to_smpteRange_f3( outputCV);\n    }\n\n    rOut = outputCV[0];\n    gOut = outputCV[1];\n    bOut = outputCV[2];\n    aOut = aIn;\n}",
            "_aces_transform_id": {
              "py/object": "opencolorio_config_aces.config.reference.discover.classify.ACESTransformID",
              "_aces_transform_id": "urn:ampas:aces:transformId:v1.5:ODT.Academy.Rec2020_100nits_dim.a1.0.3",
              "_urn": "urn:ampas:aces:transformId:v1.5",
              "_type": "ODT",
              "_namespace": "Academy",
              "_name": "Rec2020_100nits_dim",
              "_major_version_number": "a1",
              "_minor_version_number": "0",
              "_patch_version_number": "3",
              "_source": "OCES",
              "_target": "Rec2020_100nits_dim"
            },
            "_user_name": "ACES 1.0 Output - Rec.2020",
            "_description": "Output Device Transform - Rec2020\n\n\nSummary :\nThis transform is intended for mapping OCES onto a Rec.2020 broadcast\nmonitor that is calibrated to a D65 white point at 100 cd/m^2. The assumed\nobserver adapted white is D65, and the viewing environment is that of a dim\nsurround.\n\nA possible use case for this transform would be UHDTV/video mastering.\n\nDevice Primaries :\nPrimaries are those specified in Rec. ITU-R BT.2020\nCIE 1931 chromaticities:  x         y         Y\nRed:          0.708     0.292\nGreen:        0.17      0.797\nBlue:         0.131     0.046\nWhite:        0.3127    0.329     100 cd/m^2\n\nDisplay EOTF :\nThe reference electro-optical transfer function specified in\nRec. ITU-R BT.1886.\n\nSignal Range:\nBy default, this transform outputs full range code values. If instead a\nSMPTE \"legal\" signal is desired, there is a runtime flag to output\nSMPTE legal signal. In ctlrender, this can be achieved by appending\n'-param1 legalRange 1' after the '-ctl odt.ctl' string.\n\nAssumed observer adapted white point:\nCIE 1931 chromaticities:    x            y\n0.3127       0.329\n\nViewing Environment:\nThis ODT has a compensation for viewing environment variables more typical\nof those associated with video mastering.",
            "_family": "output_transform",
            "_genus": "rec2020"
          }
        }
      ]
    },
    {
      "name": "Output - SDR Video (D60 sim on D65) - ACES 1.0",
      "from_reference": {
        "transform_type": "BuiltinTransform",
        "style": "ACES-OUTPUT - ACES2065-1_to_CIE-XYZ-D65 - SDR-VIDEO-D60sim-D65_1.0"
      },
      "description": "Component of ACES Output Transforms for SDR D65 video simulating D60 white\n\nACEStransformID: urn:ampas:aces:transformId:v1.5:ODT.Academy.RGBmonitor_D60sim_100nits_dim.a1.0.3\nACEStransformID: urn:ampas:aces:transformId:v1.5:ODT.Academy.Rec709_D60sim_100nits_dim.a1.0.3",
      "transforms_data": [
        {
          "ordering": "400",
          "aces_transform_id": "urn:ampas:aces:transformId:v1.5:ODT.Academy.RGBmonitor_D60sim_100nits_dim.a1.0.3",
          "builtin_transform_style": "ACES-OUTPUT - ACES2065-1_to_CIE-XYZ-D65 - SDR-VIDEO-D60sim-D65_1.0",
          "linked_display_colorspace_style": "DISPLAY - CIE-XYZ-D65_to_sRGB",
          "interface": "ViewTransform",
          "encoding": "sdr-video",
          "categories": "file-io",
          "ctl_transform": {
            "py/object": "opencolorio_config_aces.config.reference.discover.classify.CTLTransform",
            "_path": "/home/aswf/OpenColorIO-Config-ACES/opencolorio_config_aces/config/reference/aces-dev/transforms/ctl/odt/sRGB/ODT.Academy.sRGB_D60sim_100nits_dim.ctl",
            "_code": "\n// <ACEStransformID>urn:ampas:aces:transformId:v1.5:ODT.Academy.RGBmonitor_D60sim_100nits_dim.a1.0.3</ACEStransformID>\n// <ACESuserName>ACES 1.0 Output - sRGB (D60 sim.)</ACESuserName>\n\n// \n// Output Device Transform - RGB computer monitor (D60 simulation)\n//\n\n//\n// Summary :\n//  This transform is intended for mapping OCES onto a desktop computer monitor \n//  typical of those used in motion picture visual effects production. These \n//  monitors may occasionally be referred to as \"sRGB\" displays, however, the \n//  monitor for which this transform is designed does not exactly match the \n//  specifications in IEC 61966-2-1:1999.\n// \n//  The assumed observer adapted white is D60, and the viewing environment is \n//  that of a dim surround. \n//\n//  The monitor specified is intended to be more typical of those found in \n//  visual effects production.\n//\n// Device Primaries : \n//  Primaries are those specified in Rec. ITU-R BT.709\n//  CIE 1931 chromaticities:  x         y         Y\n//              Red:          0.64      0.33\n//              Green:        0.3       0.6\n//              Blue:         0.15      0.06\n//              White:        0.3127    0.329     100 cd/m^2\n//\n// Display EOTF :\n//  The reference electro-optical transfer function specified in \n//  IEC 61966-2-1:1999.\n//  Note: This EOTF is *NOT* gamma 2.2\n//\n// Signal Range:\n//    This transform outputs full range code values.\n//\n// Assumed observer adapted white point:\n//         CIE 1931 chromaticities:    x            y\n//                                     0.32168      0.33767\n//\n// Viewing Environment:\n//   This ODT has a compensation for viewing environment variables more typical \n//   of those associated with video mastering.\n//\n\n\n\nimport \"ACESlib.Utilities\";\nimport \"ACESlib.Transform_Common\";\nimport \"ACESlib.ODT_Common\";\nimport \"ACESlib.Tonescales\";\n\n\n\n/* --- ODT Parameters --- */\nconst Chromaticities DISPLAY_PRI = REC709_PRI;\nconst float XYZ_2_DISPLAY_PRI_MAT[4][4] = XYZtoRGB(DISPLAY_PRI,1.0);\n\n// NOTE: The EOTF is *NOT* gamma 2.4, it follows IEC 61966-2-1:1999\nconst float DISPGAMMA = 2.4; \nconst float OFFSET = 0.055;\n\nconst float SCALE = 0.955;\n\n\n\nvoid main \n(\n    input varying float rIn, \n    input varying float gIn, \n    input varying float bIn, \n    input varying float aIn,\n    output varying float rOut,\n    output varying float gOut,\n    output varying float bOut,\n    output varying float aOut\n)\n{\n    float oces[3] = { rIn, gIn, bIn};\n\n    // OCES to RGB rendering space\n    float rgbPre[3] = mult_f3_f44( oces, AP0_2_AP1_MAT);\n\n    // Apply the tonescale independently in rendering-space RGB\n    float rgbPost[3];\n    rgbPost[0] = segmented_spline_c9_fwd( rgbPre[0]);\n    rgbPost[1] = segmented_spline_c9_fwd( rgbPre[1]);\n    rgbPost[2] = segmented_spline_c9_fwd( rgbPre[2]);\n\n    // Scale luminance to linear code value\n    float linearCV[3];\n    linearCV[0] = Y_2_linCV( rgbPost[0], CINEMA_WHITE, CINEMA_BLACK);\n    linearCV[1] = Y_2_linCV( rgbPost[1], CINEMA_WHITE, CINEMA_BLACK);\n    linearCV[2] = Y_2_linCV( rgbPost[2], CINEMA_WHITE, CINEMA_BLACK);    \n\n    // --- Compensate for different white point being darker  --- //\n    // This adjustment corrects for an issue that exists in ODTs where the \n    // device is calibrated to a white chromaticity other than that of the \n    // adapted white.\n    // In order to produce D60 on a device calibrated to D65 white (i.e. \n    // equal display code values yield CIE x,y chromaticities of 0.3217, 0.329) \n    // the red channel is higher than blue and green to compensate for the \n    // \"bluer\" D60 white. This is the intended behavior but it means that \n    // without compensation, as highlights increase, the red channel will hit \n    // the device maximum first and clip, resulting in a chromaticity shift as \n    // the green and blue channels continue to increase.\n    // To avoid this clipping behavior, a slight scale factor is applied to \n    // allow the ODT to simulate D60 within the D65 calibration white point. \n\n    // Scale and clamp white to avoid casted highlights due to D60 simulation\n    linearCV[0] = min( linearCV[0], 1.0) * SCALE;\n    linearCV[1] = min( linearCV[1], 1.0) * SCALE;\n    linearCV[2] = min( linearCV[2], 1.0) * SCALE;\n\n    // Apply gamma adjustment to compensate for dim surround\n    linearCV = darkSurround_to_dimSurround( linearCV);\n\n    // Apply desaturation to compensate for luminance difference\n    linearCV = mult_f3_f33( linearCV, ODT_SAT_MAT);\n\n    // Convert to display primary encoding\n    // Rendering space RGB to XYZ\n    float XYZ[3] = mult_f3_f44( linearCV, AP1_2_XYZ_MAT);\n\n    // CIE XYZ to display primaries\n    linearCV = mult_f3_f44( XYZ, XYZ_2_DISPLAY_PRI_MAT);\n\n    // Handle out-of-gamut values\n    // Clip values < 0 or > 1 (i.e. projecting outside the display primaries)\n    linearCV = clamp_f3( linearCV, 0., 1.);\n\n    // Encode linear code values with transfer function\n    float outputCV[3];\n    // moncurve_r with gamma of 2.4 and offset of 0.055 matches the EOTF found in IEC 61966-2-1:1999 (sRGB)\n    outputCV[0] = moncurve_r( linearCV[0], DISPGAMMA, OFFSET);\n    outputCV[1] = moncurve_r( linearCV[1], DISPGAMMA, OFFSET);\n    outputCV[2] = moncurve_r( linearCV[2], DISPGAMMA, OFFSET);\n\n    rOut = outputCV[0];\n    gOut = outputCV[1];\n    bOut = outputCV[2];\n    aOut = aIn;\n}",
            "_aces_transform_id": {
              "py/object": "opencolorio_config_aces.config.reference.discover.classify.ACESTransformID",
              "_aces_transform_id": "urn:ampas:aces:transformId:v1.5:ODT.Academy.RGBmonitor_D60sim_100nits_dim.a1.0.3",
              "_urn": "urn:ampas:aces:transformId:v1.5",
              "_type": "ODT",
              "_namespace": "Academy",
              "_name": "RGBmonitor_D60sim_100nits_dim",
              "_major_version_number": "a1",
              "_minor_version_number": "0",
              "_patch_version_number": "3",
              "_source": "OCES",
              "_target": "RGBmonitor_D60sim_100nits_dim"
            },
            "_user_name": "ACES 1.0 Output - sRGB (D60 sim.)",
            "_description": "Output Device Transform - RGB computer monitor (D60 simulation)\n\n\nSummary :\nThis transform is intended for mapping OCES onto a desktop computer monitor\ntypical of those used in motion picture visual effects production. These\nmonitors may occasionally be referred to as \"sRGB\" displays, however, the\nmonitor for which this transform is designed does not exactly match the\nspecifications in IEC 61966-2-1:1999.\n\nThe assumed observer adapted white is D60, and the viewing environment is\nthat of a dim surround.\n\nThe monitor specified is intended to be more typical of those found in\nvisual effects production.\n\nDevice Primaries :\nPrimaries are those specified in Rec. ITU-R BT.709\nCIE 1931 chromaticities:  x         y         Y\nRed:          0.64      0.33\nGreen:        0.3       0.6\nBlue:         0.15      0.06\nWhite:        0.3127    0.329     100 cd/m^2\n\nDisplay EOTF :\nThe reference electro-optical transfer function specified in\nIEC 61966-2-1:1999.\nNote: This EOTF is *NOT* gamma 2.2\n\nSignal Range:\nThis transform outputs full range code values.\n\nAssumed observer adapted white point:\nCIE 1931 chromaticities:    x            y\n0.32168      0.33767\n\nViewing Environment:\nThis ODT has a compensation for viewing environment variables more typical\nof those associated with video mastering.",
            "_family": "output_transform",
            "_genus": "sRGB"
          }
        },
        {
          "ordering": "410",
          "aces_transform_id": "urn:ampas:aces:transformId:v1.5:ODT.Academy.Rec709_D60sim_100nits_dim.a1.0.3",
          "builtin_transform_style": "ACES-OUTPUT - ACES2065-1_to_CIE-XYZ-D65 - SDR-VIDEO-D60sim-D65_1.0",
          "linked_display_colorspace_style": "DISPLAY - CIE-XYZ-D65_to_REC.1886-REC.709",
          "interface": "ViewTransform",
          "encoding": "sdr-video",
          "categories": "file-io",
          "ctl_transform": {
            "py/object": "opencolorio_config_aces.config.reference.discover.classify.CTLTransform",
            "_path": "/home/aswf/OpenColorIO-Config-ACES/opencolorio_config_aces/config/reference/aces-dev/transforms/ctl/odt/rec709/ODT.Academy.Rec709_D60sim_100nits_dim.ctl",
            "_code": "\n// <ACEStransformID>urn:ampas:aces:transformId:v1.5:ODT.Academy.Rec709_D60sim_100nits_dim.a1.0.3</ACEStransformID>\n// <ACESuserName>ACES 1.0 Output - Rec.709 (D60 sim.)</ACESuserName>\n\n// \n// Output Device Transform - Rec709 (D60 simulation)\n//\n\n//\n// Summary :\n//  This transform is intended for mapping OCES onto a Rec.709 broadcast monitor\n//  that is calibrated to a D65 white point at 100 cd/m^2. The assumed observer \n//  adapted white is D60, and the viewing environment is a dim surround. \n//\n//  A possible use case for this transform would be cinema \"soft-proofing\".\n//\n// Device Primaries : \n//  Primaries are those specified in Rec. ITU-R BT.709\n//  CIE 1931 chromaticities:  x         y         Y\n//              Red:          0.64      0.33\n//              Green:        0.3       0.6\n//              Blue:         0.15      0.06\n//              White:        0.3127    0.329     100 cd/m^2\n//\n// Display EOTF :\n//  The reference electro-optical transfer function specified in \n//  Rec. ITU-R BT.1886.\n//\n// Signal Range:\n//    By default, this transform outputs full range code values. If instead a \n//    SMPTE \"legal\" signal is desired, there is a runtime flag to output \n//    SMPTE legal signal. In ctlrender, this can be achieved by appending \n//    '-param1 legalRange 1' after the '-ctl odt.ctl' string.\n//\n// Assumed observer adapted white point:\n//         CIE 1931 chromaticities:    x            y\n//                                     0.32168      0.33767\n//\n// Viewing Environment:\n//   This ODT has a compensation for viewing environment variables more typical \n//   of those associated with video mastering.\n//\n\n\n\nimport \"ACESlib.Utilities\";\nimport \"ACESlib.Transform_Common\";\nimport \"ACESlib.ODT_Common\";\nimport \"ACESlib.Tonescales\";\n\n\n\n/* --- ODT Parameters --- */\nconst Chromaticities DISPLAY_PRI = REC709_PRI;\nconst float XYZ_2_DISPLAY_PRI_MAT[4][4] = XYZtoRGB( DISPLAY_PRI, 1.0);\n\nconst float DISPGAMMA = 2.4; \nconst float L_W = 1.0;\nconst float L_B = 0.0;\n\nconst float SCALE = 0.955;\n\n\n\nvoid main \n(\n    input varying float rIn, \n    input varying float gIn, \n    input varying float bIn, \n    input varying float aIn,\n    output varying float rOut,\n    output varying float gOut,\n    output varying float bOut,\n    output varying float aOut,\n    input varying int legalRange = 0\n)\n{\n    float oces[3] = { rIn, gIn, bIn};\n\n    // OCES to RGB rendering space\n    float rgbPre[3] = mult_f3_f44( oces, AP0_2_AP1_MAT);\n\n    // Apply the tonescale independently in rendering-space RGB\n    float rgbPost[3];\n    rgbPost[0] = segmented_spline_c9_fwd( rgbPre[0]);\n    rgbPost[1] = segmented_spline_c9_fwd( rgbPre[1]);\n    rgbPost[2] = segmented_spline_c9_fwd( rgbPre[2]);\n\n    // Scale luminance to linear code value\n    float linearCV[3];\n    linearCV[0] = Y_2_linCV( rgbPost[0], CINEMA_WHITE, CINEMA_BLACK);\n    linearCV[1] = Y_2_linCV( rgbPost[1], CINEMA_WHITE, CINEMA_BLACK);\n    linearCV[2] = Y_2_linCV( rgbPost[2], CINEMA_WHITE, CINEMA_BLACK);\n\n    // --- Compensate for different white point being darker  --- //\n    // This adjustment corrects for an issue that exists in ODTs where the \n    // device is calibrated to a white chromaticity other than that of the \n    // adapted white.\n    // In order to produce D60 on a device calibrated to D65 white (i.e. \n    // equal display code values yield CIE x,y chromaticities of 0.3217, 0.329) \n    // the red channel is higher than blue and green to compensate for the \n    // \"bluer\" D60 white. This is the intended behavior but it means that \n    // without compensation, as highlights increase, the red channel will hit \n    // the device maximum first and clip, resulting in a chromaticity shift as \n    // the green and blue channels continue to increase.\n    // To avoid this clipping behavior, a slight scale factor is applied to \n    // allow the ODT to simulate D60 within the D65 calibration white point. \n\n    // Scale and clamp white to avoid casted highlights due to D60 simulation\n    linearCV[0] = min( linearCV[0], 1.0) * SCALE;\n    linearCV[1] = min( linearCV[1], 1.0) * SCALE;\n    linearCV[2] = min( linearCV[2], 1.0) * SCALE;\n\n    // Apply gamma adjustment to compensate for dim surround\n    linearCV = darkSurround_to_dimSurround( linearCV);\n\n    // Apply desaturation to compensate for luminance difference\n    linearCV = mult_f3_f33( linearCV, ODT_SAT_MAT);\n\n    // Convert to display primary encoding\n    // Rendering space RGB to XYZ\n    float XYZ[3] = mult_f3_f44( linearCV, AP1_2_XYZ_MAT);\n\n    // CIE XYZ to display primaries\n    linearCV = mult_f3_f44( XYZ, XYZ_2_DISPLAY_PRI_MAT);\n\n    // Handle out-of-gamut values\n    // Clip values < 0 or > 1 (i.e. projecting outside the display primaries)\n    linearCV = clamp_f3( linearCV, 0., 1.);\n\n    // Encode linear code values with transfer function\n    float outputCV[3];\n    outputCV[0] = bt1886_r( linearCV[0], DISPGAMMA, L_W, L_B);\n    outputCV[1] = bt1886_r( linearCV[1], DISPGAMMA, L_W, L_B);\n    outputCV[2] = bt1886_r( linearCV[2], DISPGAMMA, L_W, L_B);\n\n    // Default output is full range, check if legalRange param was set to true\n    if (legalRange == 1) {\n        outputCV = fullRange_to_smpteRange_f3( outputCV);\n    }\n\n    rOut = outputCV[0];\n    gOut = outputCV[1];\n    bOut = outputCV[2];\n    aOut = aIn;\n}\n",
            "_aces_transform_id": {
              "py/object": "opencolorio_config_aces.config.reference.discover.classify.ACESTransformID",
              "_aces_transform_id": "urn:ampas:aces:transformId:v1.5:ODT.Academy.Rec709_D60sim_100nits_dim.a1.0.3",
              "_urn": "urn:ampas:aces:transformId:v1.5",
              "_type": "ODT",
              "_namespace": "Academy",
              "_name": "Rec709_D60sim_100nits_dim",
              "_major_version_number": "a1",
              "_minor_version_number": "0",
              "_patch_version_number": "3",
              "_source": "OCES",
              "_target": "Rec709_D60sim_100nits_dim"
            },
            "_user_name": "ACES 1.0 Output - Rec.709 (D60 sim.)",
            "_description": "Output Device Transform - Rec709 (D60 simulation)\n\n\nSummary :\nThis transform is intended for mapping OCES onto a Rec.709 broadcast monitor\nthat is calibrated to a D65 white point at 100 cd/m^2. The assumed observer\nadapted white is D60, and the viewing environment is a dim surround.\n\nA possible use case for this transform would be cinema \"soft-proofing\".\n\nDevice Primaries :\nPrimaries are those specified in Rec. ITU-R BT.709\nCIE 1931 chromaticities:  x         y         Y\nRed:          0.64      0.33\nGreen:        0.3       0.6\nBlue:         0.15      0.06\nWhite:        0.3127    0.329     100 cd/m^2\n\nDisplay EOTF :\nThe reference electro-optical transfer function specified in\nRec. ITU-R BT.1886.\n\nSignal Range:\nBy default, this transform outputs full range code values. If instead a\nSMPTE \"legal\" signal is desired, there is a runtime flag to output\nSMPTE legal signal. In ctlrender, this can be achieved by appending\n'-param1 legalRange 1' after the '-ctl odt.ctl' string.\n\nAssumed observer adapted white point:\nCIE 1931 chromaticities:    x            y\n0.32168      0.33767\n\nViewing Environment:\nThis ODT has a compensation for viewing environment variables more typical\nof those associated with video mastering.",
            "_family": "output_transform",
            "_genus": "rec709"
          }
        }
      ]
    },
    {
      "name": "Output - SDR Video (P3 lim) - ACES 1.1",
      "from_reference": {
        "transform_type": "BuiltinTransform",
        "style": "ACES-OUTPUT - ACES2065-1_to_CIE-XYZ-D65 - SDR-VIDEO-P3lim_1.1"
      },
      "description": "Component of ACES Output Transforms for SDR D65 video\n\nACEStransformID: urn:ampas:aces:transformId:v1.5:ODT.Academy.Rec2020_P3D65limited_100nits_dim.a1.1.0",
      "transforms_data": [
        {
          "ordering": "420",
          "aces_transform_id": "urn:ampas:aces:transformId:v1.5:ODT.Academy.Rec2020_P3D65limited_100nits_dim.a1.1.0",
          "builtin_transform_style": "ACES-OUTPUT - ACES2065-1_to_CIE-XYZ-D65 - SDR-VIDEO-P3lim_1.1",
          "linked_display_colorspace_style": "DISPLAY - CIE-XYZ-D65_to_REC.1886-REC.2020",
          "interface": "ViewTransform",
          "encoding": "sdr-video",
          "categories": "file-io",
          "ctl_transform": {
            "py/object": "opencolorio_config_aces.config.reference.discover.classify.CTLTransform",
            "_path": "/home/aswf/OpenColorIO-Config-ACES/opencolorio_config_aces/config/reference/aces-dev/transforms/ctl/odt/rec2020/ODT.Academy.Rec2020_P3D65limited_100nits_dim.ctl",
            "_code": "\n// <ACEStransformID>urn:ampas:aces:transformId:v1.5:ODT.Academy.Rec2020_P3D65limited_100nits_dim.a1.1.0</ACEStransformID>\n// <ACESuserName>ACES 1.0 Output - Rec.2020 (P3D65 Limited)</ACESuserName>\n\n// \n// Output Device Transform - Rec2020 (P3D65 Limited)\n//\n\n//\n// Summary :\n//  This transform is intended for mapping OCES onto a Rec.2020 broadcast \n//  monitor that is calibrated to a D65 white point at 100 cd/m^2. The assumed \n//  observer adapted white is D65, and the viewing environment is that of a dim \n//  surround. \n//\n//  Color values are limited to the P3D65 gamut for applications where a \n//  match is expected between a P3D65 image and a Rec.709 reference \n//  monitor.\n//\n//  Assuming the content was graded (and approved) on a projector with a P3D65\n//  gamut, limiting the colors to P3D65 assures there will be no unexpected \n//  colors when viewed on a Rec.2020 device with a (potentially) wider gamut.\n//\n//  A possible use case for this transform would be UHDTV/video mastering.\n//\n// Device Primaries : \n//  Primaries are those specified in Rec. ITU-R BT.2020\n//  CIE 1931 chromaticities:  x         y         Y\n//              Red:          0.708     0.292\n//              Green:        0.17      0.797\n//              Blue:         0.131     0.046\n//              White:        0.3127    0.329     100 cd/m^2\n//\n// Display EOTF :\n//  The reference electro-optical transfer function specified in \n//  Rec. ITU-R BT.1886.\n//\n// Signal Range:\n//    By default, this transform outputs full range code values. If instead a \n//    SMPTE \"legal\" signal is desired, there is a runtime flag to output \n//    SMPTE legal signal. In ctlrender, this can be achieved by appending \n//    '-param1 legalRange 1' after the '-ctl odt.ctl' string.\n//\n// Assumed observer adapted white point:\n//         CIE 1931 chromaticities:    x            y\n//                                     0.3127       0.329\n//\n// Viewing Environment:\n//   This ODT has a compensation for viewing environment variables more typical \n//   of those associated with video mastering.\n//\n\n\n\nimport \"ACESlib.Utilities\";\nimport \"ACESlib.Transform_Common\";\nimport \"ACESlib.ODT_Common\";\nimport \"ACESlib.Tonescales\";\nimport \"ACESlib.OutputTransforms\";\n\n\n\n/* --- ODT Parameters --- */\nconst Chromaticities DISPLAY_PRI = REC2020_PRI;\nconst float XYZ_2_DISPLAY_PRI_MAT[4][4] = XYZtoRGB(DISPLAY_PRI,1.0);\n\nconst Chromaticities LIMITING_PRI = P3D65_PRI;\n\nconst float DISPGAMMA = 2.4; \nconst float L_W = 1.0;\nconst float L_B = 0.0;\n\n\n\nvoid main \n(\n    input varying float rIn, \n    input varying float gIn, \n    input varying float bIn, \n    input varying float aIn,\n    output varying float rOut,\n    output varying float gOut,\n    output varying float bOut,\n    output varying float aOut,\n    input varying int legalRange = 0\n)\n{\n    float oces[3] = { rIn, gIn, bIn};\n\n    // OCES to RGB rendering space\n    float rgbPre[3] = mult_f3_f44( oces, AP0_2_AP1_MAT);\n\n    // Apply the tonescale independently in rendering-space RGB\n    float rgbPost[3];\n    rgbPost[0] = segmented_spline_c9_fwd( rgbPre[0]);\n    rgbPost[1] = segmented_spline_c9_fwd( rgbPre[1]);\n    rgbPost[2] = segmented_spline_c9_fwd( rgbPre[2]);\n\n    // Scale luminance to linear code value\n    float linearCV[3];\n    linearCV[0] = Y_2_linCV( rgbPost[0], CINEMA_WHITE, CINEMA_BLACK);\n    linearCV[1] = Y_2_linCV( rgbPost[1], CINEMA_WHITE, CINEMA_BLACK);\n    linearCV[2] = Y_2_linCV( rgbPost[2], CINEMA_WHITE, CINEMA_BLACK);\n\n    // Apply gamma adjustment to compensate for dim surround\n    linearCV = darkSurround_to_dimSurround( linearCV);\n\n    // Apply desaturation to compensate for luminance difference\n    linearCV = mult_f3_f33( linearCV, ODT_SAT_MAT);\n\n    // Convert to display primary encoding\n    // Rendering space RGB to XYZ\n    float XYZ[3] = mult_f3_f44( linearCV, AP1_2_XYZ_MAT);\n\n    // Apply CAT from ACES white point to assumed observer adapted white point\n    XYZ = mult_f3_f33( XYZ, D60_2_D65_CAT);\n\n    // Constrain to limiting primaries\n    XYZ = limit_to_primaries( XYZ, LIMITING_PRI);\n    \n    // CIE XYZ to display primaries\n    linearCV = mult_f3_f44( XYZ, XYZ_2_DISPLAY_PRI_MAT);\n\n    // Handle out-of-gamut values\n    // Clip values < 0 or > 1 (i.e. projecting outside the display primaries)\n    linearCV = clamp_f3( linearCV, 0., 1.);\n\n    // Encode linear code values with transfer function\n    float outputCV[3];\n    outputCV[0] = bt1886_r( linearCV[0], DISPGAMMA, L_W, L_B);\n    outputCV[1] = bt1886_r( linearCV[1], DISPGAMMA, L_W, L_B);\n    outputCV[2] = bt1886_r( linearCV[2], DISPGAMMA, L_W, L_B);\n\n    // Default output is full range, check if legalRange param was set to true\n    if (legalRange == 1) {\n        outputCV = fullRange_to_smpteRange_f3( outputCV);\n    }\n\n    rOut = outputCV[0];\n    gOut = outputCV[1];\n    bOut = outputCV[2];\n    aOut = aIn;\n}",
            "_aces_transform_id": {
              "py/object": "opencolorio_config_aces.config.reference.discover.classify.ACESTransformID",
              "_aces_transform_id": "urn:ampas:aces:transformId:v1.5:ODT.Academy.Rec2020_P3D65limited_100nits_dim.a1.1.0",
              "_urn": "urn:ampas:aces:transformId:v1.5",
              "_type": "ODT",
              "_namespace": "Academy",
              "_name": "Rec2020_P3D65limited_100nits_dim",
              "_major_version_number": "a1",
              "_minor_version_number": "1",
              "_patch_version_number": "0",
              "_source": "OCES",
              "_target": "Rec2020_P3D65limited_100nits_dim"
            },
            "_user_name": "ACES 1.0 Output - Rec.2020 (P3D65 Limited)",
            "_description": "Output Device Transform - Rec2020 (P3D65 Limited)\n\n\nSummary :\nThis transform is intended for mapping OCES onto a Rec.2020 broadcast\nmonitor that is calibrated to a D65 white point at 100 cd/m^2. The assumed\nobserver adapted white is D65, and the viewing environment is that of a dim\nsurround.\n\nColor values are limited to the P3D65 gamut for applications where a\nmatch is expected between a P3D65 image and a Rec.709 reference\nmonitor.\n\nAssuming the content was graded (and approved) on a projector with a P3D65\ngamut, limiting the colors to P3D65 assures there will be no unexpected\ncolors when viewed on a Rec.2020 device with a (potentially) wider gamut.\n\nA possible use case for this transform would be UHDTV/video mastering.\n\nDevice Primaries :\nPrimaries are those specified in Rec. ITU-R BT.2020\nCIE 1931 chromaticities:  x         y         Y\nRed:          0.708     0.292\nGreen:        0.17      0.797\nBlue:         0.131     0.046\nWhite:        0.3127    0.329     100 cd/m^2\n\nDisplay EOTF :\nThe reference electro-optical transfer function specified in\nRec. ITU-R BT.1886.\n\nSignal Range:\nBy default, this transform outputs full range code values. If instead a\nSMPTE \"legal\" signal is desired, there is a runtime flag to output\nSMPTE legal signal. In ctlrender, this can be achieved by appending\n'-param1 legalRange 1' after the '-ctl odt.ctl' string.\n\nAssumed observer adapted white point:\nCIE 1931 chromaticities:    x            y\n0.3127       0.329\n\nViewing Environment:\nThis ODT has a compensation for viewing environment variables more typical\nof those associated with video mastering.",
            "_family": "output_transform",
            "_genus": "rec2020"
          }
        }
      ]
    },
    {
      "name": "Output - SDR Video (Rec.709 lim) - ACES 1.1",
      "from_reference": {
        "transform_type": "BuiltinTransform",
        "style": "ACES-OUTPUT - ACES2065-1_to_CIE-XYZ-D65 - SDR-VIDEO-REC709lim_1.1"
      },
      "description": "Component of ACES Output Transforms for SDR D65 video\n\nACEStransformID: urn:ampas:aces:transformId:v1.5:ODT.Academy.Rec2020_Rec709limited_100nits_dim.a1.1.0",
      "transforms_data": [
        {
          "ordering": "420",
          "aces_transform_id": "urn:ampas:aces:transformId:v1.5:ODT.Academy.Rec2020_Rec709limited_100nits_dim.a1.1.0",
          "builtin_transform_style": "ACES-OUTPUT - ACES2065-1_to_CIE-XYZ-D65 - SDR-VIDEO-REC709lim_1.1",
          "linked_display_colorspace_style": "DISPLAY - CIE-XYZ-D65_to_REC.1886-REC.2020",
          "interface": "ViewTransform",
          "encoding": "sdr-video",
          "categories": "file-io",
          "ctl_transform": {
            "py/object": "opencolorio_config_aces.config.reference.discover.classify.CTLTransform",
            "_path": "/home/aswf/OpenColorIO-Config-ACES/opencolorio_config_aces/config/reference/aces-dev/transforms/ctl/odt/rec2020/ODT.Academy.Rec2020_Rec709limited_100nits_dim.ctl",
            "_code": "\n// <ACEStransformID>urn:ampas:aces:transformId:v1.5:ODT.Academy.Rec2020_Rec709limited_100nits_dim.a1.1.0</ACEStransformID>\n// <ACESuserName>ACES 1.0 Output - Rec.2020 (Rec.709 Limited)</ACESuserName>\n\n// \n// Output Device Transform - Rec.2020 (Rec.709 Limited)\n//\n\n//\n// Summary :\n//  This transform is intended for mapping OCES onto a Rec.2020 broadcast \n//  monitor that is calibrated to a D65 white point at 100 cd/m^2. The assumed \n//  observer adapted white is D65, and the viewing environment is that of a dim \n//  surround. \n// \n//  Color values are limited to the Rec.709 gamut for applications where a \n//  match is expected between a Rec.2020 image and a Rec.709 reference \n//  monitor.\n//\n//  Assuming the content was graded (and approved) on a Rec.709 display,\n//  limiting the colors to P3D65 assures there will be no unexpected colors \n//  when viewed on a Rec.2020 device with a (potentially) wider gamut.\n//\n//  A possible use case for this transform would be UHDTV/video mastering.\n//\n// Device Primaries : \n//  Primaries are those specified in Rec. ITU-R BT.2020\n//  CIE 1931 chromaticities:  x         y         Y\n//              Red:          0.708     0.292\n//              Green:        0.17      0.797\n//              Blue:         0.131     0.046\n//              White:        0.3127    0.329     100 cd/m^2\n//\n// Display EOTF :\n//  The reference electro-optical transfer function specified in \n//  Rec. ITU-R BT.1886.\n//\n// Signal Range:\n//    By default, this transform outputs full range code values. If instead a \n//    SMPTE \"legal\" signal is desired, there is a runtime flag to output \n//    SMPTE legal signal. In ctlrender, this can be achieved by appending \n//    '-param1 legalRange 1' after the '-ctl odt.ctl' string.\n//\n// Assumed observer adapted white point:\n//         CIE 1931 chromaticities:    x            y\n//                                     0.3127       0.329\n//\n// Viewing Environment:\n//   This ODT has a compensation for viewing environment variables more typical \n//   of those associated with video mastering.\n//\n\n\n\nimport \"ACESlib.Utilities\";\nimport \"ACESlib.Transform_Common\";\nimport \"ACESlib.ODT_Common\";\nimport \"ACESlib.Tonescales\";\nimport \"ACESlib.OutputTransforms\";\n\n\n\n/* --- ODT Parameters --- */\nconst Chromaticities DISPLAY_PRI = REC2020_PRI;\nconst float XYZ_2_DISPLAY_PRI_MAT[4][4] = XYZtoRGB(DISPLAY_PRI,1.0);\n\nconst Chromaticities LIMITING_PRI = REC709_PRI;\n\nconst float DISPGAMMA = 2.4; \nconst float L_W = 1.0;\nconst float L_B = 0.0;\n\n\n\nvoid main \n(\n    input varying float rIn, \n    input varying float gIn, \n    input varying float bIn, \n    input varying float aIn,\n    output varying float rOut,\n    output varying float gOut,\n    output varying float bOut,\n    output varying float aOut,\n    input varying int legalRange = 0\n)\n{\n    float oces[3] = { rIn, gIn, bIn};\n\n    // OCES to RGB rendering space\n    float rgbPre[3] = mult_f3_f44( oces, AP0_2_AP1_MAT);\n\n    // Apply the tonescale independently in rendering-space RGB\n    float rgbPost[3];\n    rgbPost[0] = segmented_spline_c9_fwd( rgbPre[0]);\n    rgbPost[1] = segmented_spline_c9_fwd( rgbPre[1]);\n    rgbPost[2] = segmented_spline_c9_fwd( rgbPre[2]);\n\n    // Scale luminance to linear code value\n    float linearCV[3];\n    linearCV[0] = Y_2_linCV( rgbPost[0], CINEMA_WHITE, CINEMA_BLACK);\n    linearCV[1] = Y_2_linCV( rgbPost[1], CINEMA_WHITE, CINEMA_BLACK);\n    linearCV[2] = Y_2_linCV( rgbPost[2], CINEMA_WHITE, CINEMA_BLACK);\n\n    // Apply gamma adjustment to compensate for dim surround\n    linearCV = darkSurround_to_dimSurround( linearCV);\n\n    // Apply desaturation to compensate for luminance difference\n    linearCV = mult_f3_f33( linearCV, ODT_SAT_MAT);\n\n    // Convert to display primary encoding\n    // Rendering space RGB to XYZ\n    float XYZ[3] = mult_f3_f44( linearCV, AP1_2_XYZ_MAT);\n\n    // Apply CAT from ACES white point to assumed observer adapted white point\n    XYZ = mult_f3_f33( XYZ, D60_2_D65_CAT);\n\n    // Constrain to limiting primaries\n    XYZ = limit_to_primaries( XYZ, LIMITING_PRI);\n    \n    // CIE XYZ to display primaries\n    linearCV = mult_f3_f44( XYZ, XYZ_2_DISPLAY_PRI_MAT);\n\n    // Handle out-of-gamut values\n    // Clip values < 0 or > 1 (i.e. projecting outside the display primaries)\n    linearCV = clamp_f3( linearCV, 0., 1.);\n\n    // Encode linear code values with transfer function\n    float outputCV[3];\n    outputCV[0] = bt1886_r( linearCV[0], DISPGAMMA, L_W, L_B);\n    outputCV[1] = bt1886_r( linearCV[1], DISPGAMMA, L_W, L_B);\n    outputCV[2] = bt1886_r( linearCV[2], DISPGAMMA, L_W, L_B);\n\n    // Default output is full range, check if legalRange param was set to true\n    if (legalRange == 1) {\n        outputCV = fullRange_to_smpteRange_f3( outputCV);\n    }\n\n    rOut = outputCV[0];\n    gOut = outputCV[1];\n    bOut = outputCV[2];\n    aOut = aIn;\n}",
            "_aces_transform_id": {
              "py/object": "opencolorio_config_aces.config.reference.discover.classify.ACESTransformID",
              "_aces_transform_id": "urn:ampas:aces:transformId:v1.5:ODT.Academy.Rec2020_Rec709limited_100nits_dim.a1.1.0",
              "_urn": "urn:ampas:aces:transformId:v1.5",
              "_type": "ODT",
              "_namespace": "Academy",
              "_name": "Rec2020_Rec709limited_100nits_dim",
              "_major_version_number": "a1",
              "_minor_version_number": "1",
              "_patch_version_number": "0",
              "_source": "OCES",
              "_target": "Rec2020_Rec709limited_100nits_dim"
            },
            "_user_name": "ACES 1.0 Output - Rec.2020 (Rec.709 Limited)",
            "_description": "Output Device Transform - Rec.2020 (Rec.709 Limited)\n\n\nSummary :\nThis transform is intended for mapping OCES onto a Rec.2020 broadcast\nmonitor that is calibrated to a D65 white point at 100 cd/m^2. The assumed\nobserver adapted white is D65, and the viewing environment is that of a dim\nsurround.\n\nColor values are limited to the Rec.709 gamut for applications where a\nmatch is expected between a Rec.2020 image and a Rec.709 reference\nmonitor.\n\nAssuming the content was graded (and approved) on a Rec.709 display,\nlimiting the colors to P3D65 assures there will be no unexpected colors\nwhen viewed on a Rec.2020 device with a (potentially) wider gamut.\n\nA possible use case for this transform would be UHDTV/video mastering.\n\nDevice Primaries :\nPrimaries are those specified in Rec. ITU-R BT.2020\nCIE 1931 chromaticities:  x         y         Y\nRed:          0.708     0.292\nGreen:        0.17      0.797\nBlue:         0.131     0.046\nWhite:        0.3127    0.329     100 cd/m^2\n\nDisplay EOTF :\nThe reference electro-optical transfer function specified in\nRec. ITU-R BT.1886.\n\nSignal Range:\nBy default, this transform outputs full range code values. If instead a\nSMPTE \"legal\" signal is desired, there is a runtime flag to output\nSMPTE legal signal. In ctlrender, this can be achieved by appending\n'-param1 legalRange 1' after the '-ctl odt.ctl' string.\n\nAssumed observer adapted white point:\nCIE 1931 chromaticities:    x            y\n0.3127       0.329\n\nViewing Environment:\nThis ODT has a compensation for viewing environment variables more typical\nof those associated with video mastering.",
            "_family": "output_transform",
            "_genus": "rec2020"
          }
        }
      ]
    },
    {
      "name": "Output - HDR Video (1000 nits & Rec.2020 lim) - ACES 1.1",
      "from_reference": {
        "transform_type": "BuiltinTransform",
        "style": "ACES-OUTPUT - ACES2065-1_to_CIE-XYZ-D65 - HDR-VIDEO-1000nit-15nit-REC2020lim_1.1"
      },
      "description": "Component of ACES Output Transforms for 1000 nit HDR D65 video\n\nACEStransformID: urn:ampas:aces:transformId:v1.5:RRTODT.Academy.Rec2020_1000nits_15nits_HLG.a1.1.0\nACEStransformID: urn:ampas:aces:transformId:v1.5:RRTODT.Academy.Rec2020_1000nits_15nits_ST2084.a1.1.0",
      "transforms_data": [
        {
          "ordering": "430",
          "aces_transform_id": "urn:ampas:aces:transformId:v1.5:RRTODT.Academy.Rec2020_1000nits_15nits_HLG.a1.1.0",
          "builtin_transform_style": "ACES-OUTPUT - ACES2065-1_to_CIE-XYZ-D65 - HDR-VIDEO-1000nit-15nit-REC2020lim_1.1",
          "linked_display_colorspace_style": "DISPLAY - CIE-XYZ-D65_to_REC.2100-HLG-1000nit",
          "interface": "ViewTransform",
          "encoding": "hdr-video",
          "categories": "file-io",
          "ctl_transform": {
            "py/object": "opencolorio_config_aces.config.reference.discover.classify.CTLTransform",
            "_path": "/home/aswf/OpenColorIO-Config-ACES/opencolorio_config_aces/config/reference/aces-dev/transforms/ctl/outputTransform/rec2020/RRTODT.Academy.Rec2020_1000nits_15nits_HLG.ctl",
            "_code": "\n// <ACEStransformID>urn:ampas:aces:transformId:v1.5:RRTODT.Academy.Rec2020_1000nits_15nits_HLG.a1.1.0</ACEStransformID>\n// <ACESuserName>ACES 1.0 Output - Rec.2020 HLG (1000 nits)</ACESuserName>\n\n// \n// Output Transform - Rec.2020 (1000 cd/m^2)\n//\n\n//\n// Summary :\n//  This transform maps ACES onto a Rec.2020 HLG HDR display calibrated \n//  to a D65 white point at 1000 cd/m^2. The assumed observer adapted white is \n//  D65, and the viewing environment is that of a dark surround. Mid-gray\n//  luminance is targeted at 15 cd/m^2.\n// \n// NOTE :\n//  The parameterized \"Output Transform\" function used as basis for this \n//  transform includes a parameter labeled \"SURROUND\". However, as noted in \n//  \"ACESlib.OutputTransforms.ctl\", this sub-module is currently a \"placeholder\"\n//  and as such currently only supports a rendering intended for dark surround \n//  environments. While it is planned for future releases to fully activate the \n//  this module and provide adjustment for dark/dim/normal surrounds, setting \n//  SURROUND equal to either dim or normal will have no effect at this time.\n//  \n//  That being said, these Output Transforms have been used successfully on\n//  major feature and television projects when mastering for home HDR where a \n//  dim surround environment is assumed. Based on that, these transforms are \n//  considered adequate for use for dim surround mastering, although, as always,\n//  creative adjustments to contrast and saturation may be desirable and should\n//  be saved as a \"trim pass.\"\n//\n// Device Primaries : \n//  Primaries are those specified in Rec. ITU-R BT.2020\n//  CIE 1931 chromaticities:  x         y         Y\n//              Red:          0.708     0.292\n//              Green:        0.17      0.797\n//              Blue:         0.131     0.046\n//              White:        0.3127    0.329     1000 cd/m^2\n//              18% Gray:     0.3127    0.329     15 cd/m^2\n//\n// Display EOTF :\n//  The reference electro-optical transfer function specified in Table 5 of \n//  ITU-R BT.2100 (HLG)\n//\n// Assumed observer adapted white point:\n//         CIE 1931 chromaticities:    x            y\n//                                     0.3127       0.329\n//\n// Viewing Environment:\n//  Environment specified in SMPTE RP 431-2-2007\n//\n\n\n\nimport \"ACESlib.Utilities\";\nimport \"ACESlib.OutputTransforms\";\n\n\n// Support for HLG in ACES is tricky, since HLG is \"scene-referred\" and ACES \n// Output transforms produce display-referred output. ACES supports HLG at\n// 1000 nits by converting the ST.2084 output to HLG using the method specified\n// in Section 7 of ITU-R BT.2390-0. \n\n\nconst float Y_MIN = 0.0001;                     // black luminance (cd/m^2)\nconst float Y_MID = 15.0;                       // mid-point luminance (cd/m^2)\nconst float Y_MAX = 1000.0;                     // peak white luminance (cd/m^2)\n\nconst Chromaticities DISPLAY_PRI = REC2020_PRI; // encoding primaries (device setup)\nconst Chromaticities LIMITING_PRI = REC2020_PRI;// limiting primaries\n\nconst int EOTF = 5;                             // 0: ST-2084 (PQ)\n                                                // 1: BT.1886 (Rec.709/2020 settings) \n                                                // 2: sRGB (mon_curve w/ presets)\n                                                // 3: gamma 2.6\n                                                // 4: linear (no EOTF)\n                                                // 5: HLG\n\nconst int SURROUND = 0;                         // 0: dark ( NOTE: this is the only active setting! )\n                                                // 1: dim ( *inactive* - selecting this will have no effect )\n                                                // 2: normal ( *inactive* - selecting this will have no effect )\n\nconst bool STRETCH_BLACK = true;                // stretch black luminance to a PQ code value of 0\nconst bool D60_SIM = false;                       \nconst bool LEGAL_RANGE = false;\n\n\nvoid main\n(\n\tinput varying float rIn,\n\tinput varying float gIn,\n\tinput varying float bIn,\n\tinput varying float aIn,\n\toutput varying float rOut,\n\toutput varying float gOut,\n\toutput varying float bOut,\n\toutput varying float aOut\n)\n{\n    float aces[3] = {rIn, gIn, bIn};\n\n    float cv[3] = outputTransform( aces, Y_MIN,\n                                         Y_MID,\n                                         Y_MAX,\n                                         DISPLAY_PRI,\n                                         LIMITING_PRI,\n                                         EOTF,\n                                         SURROUND,\n                                         STRETCH_BLACK,\n                                         D60_SIM,\n                                         LEGAL_RANGE );\n\n    rOut = cv[0];\n    gOut = cv[1];\n    bOut = cv[2];\n    aOut = aIn;\n}",
            "_aces_transform_id": {
              "py/object": "opencolorio_config_aces.config.reference.discover.classify.ACESTransformID",
              "_aces_transform_id": "urn:ampas:aces:transformId:v1.5:RRTODT.Academy.Rec2020_1000nits_15nits_HLG.a1.1.0",
              "_urn": "urn:ampas:aces:transformId:v1.5",
              "_type": "RRTODT",
              "_namespace": "Academy",
              "_name": "Rec2020_1000nits_15nits_HLG",
              "_major_version_number": "a1",
              "_minor_version_number": "1",
              "_patch_version_number": "0",
              "_source": "ACES2065-1",
              "_target": "Rec2020_1000nits_15nits_HLG"
            },
            "_user_name": "ACES 1.0 Output - Rec.2020 HLG (1000 nits)",
            "_description": "Output Transform - Rec.2020 (1000 cd/m^2)\n\n\nSummary :\nThis transform maps ACES onto a Rec.2020 HLG HDR display calibrated\nto a D65 white point at 1000 cd/m^2. The assumed observer adapted white is\nD65, and the viewing environment is that of a dark surround. Mid-gray\nluminance is targeted at 15 cd/m^2.\n\nNOTE :\nThe parameterized \"Output Transform\" function used as basis for this\ntransform includes a parameter labeled \"SURROUND\". However, as noted in\n\"ACESlib.OutputTransforms.ctl\", this sub-module is currently a \"placeholder\"\nand as such currently only supports a rendering intended for dark surround\nenvironments. While it is planned for future releases to fully activate the\nthis module and provide adjustment for dark/dim/normal surrounds, setting\nSURROUND equal to either dim or normal will have no effect at this time.\n\nThat being said, these Output Transforms have been used successfully on\nmajor feature and television projects when mastering for home HDR where a\ndim surround environment is assumed. Based on that, these transforms are\nconsidered adequate for use for dim surround mastering, although, as always,\ncreative adjustments to contrast and saturation may be desirable and should\nbe saved as a \"trim pass.\"\n\nDevice Primaries :\nPrimaries are those specified in Rec. ITU-R BT.2020\nCIE 1931 chromaticities:  x         y         Y\nRed:          0.708     0.292\nGreen:        0.17      0.797\nBlue:         0.131     0.046\nWhite:        0.3127    0.329     1000 cd/m^2\n18% Gray:     0.3127    0.329     15 cd/m^2\n\nDisplay EOTF :\nThe reference electro-optical transfer function specified in Table 5 of\nITU-R BT.2100 (HLG)\n\nAssumed observer adapted white point:\nCIE 1931 chromaticities:    x            y\n0.3127       0.329\n\nViewing Environment:\nEnvironment specified in SMPTE RP 431-2-2007",
            "_family": "outputTransform",
            "_genus": "rec2020"
          }
        },
        {
          "ordering": "430",
          "aces_transform_id": "urn:ampas:aces:transformId:v1.5:RRTODT.Academy.Rec2020_1000nits_15nits_ST2084.a1.1.0",
          "builtin_transform_style": "ACES-OUTPUT - ACES2065-1_to_CIE-XYZ-D65 - HDR-VIDEO-1000nit-15nit-REC2020lim_1.1",
          "linked_display_colorspace_style": "DISPLAY - CIE-XYZ-D65_to_REC.2100-PQ",
          "interface": "ViewTransform",
          "encoding": "hdr-video",
          "categories": "file-io",
          "ctl_transform": {
            "py/object": "opencolorio_config_aces.config.reference.discover.classify.CTLTransform",
            "_path": "/home/aswf/OpenColorIO-Config-ACES/opencolorio_config_aces/config/reference/aces-dev/transforms/ctl/outputTransform/rec2020/RRTODT.Academy.Rec2020_1000nits_15nits_ST2084.ctl",
            "_code": "\n// <ACEStransformID>urn:ampas:aces:transformId:v1.5:RRTODT.Academy.Rec2020_1000nits_15nits_ST2084.a1.1.0</ACEStransformID>\n// <ACESuserName>ACES 1.0 Output - Rec.2020 ST2084 (1000 nits)</ACESuserName>\n\n// \n// Output Transform - Rec.2020 (1000 cd/m^2)\n//\n\n//\n// Summary :\n//  This transform maps ACES onto a Rec.2020 ST.2084 HDR display calibrated \n//  to a D65 white point at 1000 cd/m^2. The assumed observer adapted white is \n//  D65, and the viewing environment is that of a dark surround. Mid-gray\n//  luminance is targeted at 15 cd/m^2.\n//\n// NOTE :\n//  The parameterized \"Output Transform\" function used as basis for this \n//  transform includes a parameter labeled \"SURROUND\". However, as noted in \n//  \"ACESlib.OutputTransforms.ctl\", this sub-module is currently a \"placeholder\"\n//  and as such currently only supports a rendering intended for dark surround \n//  environments. While it is planned for future releases to fully activate the \n//  this module and provide adjustment for dark/dim/normal surrounds, setting \n//  SURROUND equal to either dim or normal will have no effect at this time.\n//  \n//  That being said, these Output Transforms have been used successfully on\n//  major feature and television projects when mastering for home HDR where a \n//  dim surround environment is assumed. Based on that, these transforms are \n//  considered adequate for use for dim surround mastering, although, as always,\n//  creative adjustments to contrast and saturation may be desirable and should\n//  be saved as a \"trim pass.\"\n//\n// Device Primaries : \n//  Primaries are those specified in Rec. ITU-R BT.2020\n//  CIE 1931 chromaticities:  x         y         Y\n//              Red:          0.708     0.292\n//              Green:        0.17      0.797\n//              Blue:         0.131     0.046\n//              White:        0.3127    0.329     1000 cd/m^2\n//              18% Gray:     0.3127    0.329     15 cd/m^2\n//\n// Display EOTF :\n//  The reference electro-optical transfer function specified in SMPTE ST \n//  2084-2014. This transform makes no attempt to address the Annex functions \n//  which address integer quantization.\n//\n// Assumed observer adapted white point:\n//         CIE 1931 chromaticities:    x            y\n//                                     0.3127       0.329\n//\n// Viewing Environment:\n//  Environment specified in SMPTE RP 431-2-2007\n//\n\n\n\nimport \"ACESlib.Utilities\";\nimport \"ACESlib.OutputTransforms\";\n\n\n\nconst float Y_MIN = 0.0001;                     // black luminance (cd/m^2)\nconst float Y_MID = 15.0;                       // mid-point luminance (cd/m^2)\nconst float Y_MAX = 1000.0;                     // peak white luminance (cd/m^2)\n\nconst Chromaticities DISPLAY_PRI = REC2020_PRI; // encoding primaries (device setup)\nconst Chromaticities LIMITING_PRI = REC2020_PRI;// limiting primaries\n\nconst int EOTF = 0;                             // 0: ST-2084 (PQ)\n                                                // 1: BT.1886 (Rec.709/2020 settings) \n                                                // 2: sRGB (mon_curve w/ presets)\n                                                // 3: gamma 2.6\n                                                // 4: linear (no EOTF)\n                                                // 5: HLG\n\nconst int SURROUND = 0;                         // 0: dark ( NOTE: this is the only active setting! )\n                                                // 1: dim ( *inactive* - selecting this will have no effect )\n                                                // 2: normal ( *inactive* - selecting this will have no effect )\n\nconst bool STRETCH_BLACK = true;                // stretch black luminance to a PQ code value of 0\nconst bool D60_SIM = false;                       \nconst bool LEGAL_RANGE = false;\n\n\nvoid main\n(\n\tinput varying float rIn,\n\tinput varying float gIn,\n\tinput varying float bIn,\n\tinput varying float aIn,\n\toutput varying float rOut,\n\toutput varying float gOut,\n\toutput varying float bOut,\n\toutput varying float aOut\n)\n{\n    float aces[3] = {rIn, gIn, bIn};\n\n    float cv[3] = outputTransform( aces, Y_MIN,\n                                         Y_MID,\n                                         Y_MAX,\n                                         DISPLAY_PRI,\n                                         LIMITING_PRI,\n                                         EOTF,\n                                         SURROUND,\n                                         STRETCH_BLACK,\n                                         D60_SIM,\n                                         LEGAL_RANGE );\n\n    rOut = cv[0];\n    gOut = cv[1];\n    bOut = cv[2];\n    aOut = aIn;\n}",
            "_aces_transform_id": {
              "py/object": "opencolorio_config_aces.config.reference.discover.classify.ACESTransformID",
              "_aces_transform_id": "urn:ampas:aces:transformId:v1.5:RRTODT.Academy.Rec2020_1000nits_15nits_ST2084.a1.1.0",
              "_urn": "urn:ampas:aces:transformId:v1.5",
              "_type": "RRTODT",
              "_namespace": "Academy",
              "_name": "Rec2020_1000nits_15nits_ST2084",
              "_major_version_number": "a1",
              "_minor_version_number": "1",
              "_patch_version_number": "0",
              "_source": "ACES2065-1",
              "_target": "Rec2020_1000nits_15nits_ST2084"
            },
            "_user_name": "ACES 1.0 Output - Rec.2020 ST2084 (1000 nits)",
            "_description": "Output Transform - Rec.2020 (1000 cd/m^2)\n\n\nSummary :\nThis transform maps ACES onto a Rec.2020 ST.2084 HDR display calibrated\nto a D65 white point at 1000 cd/m^2. The assumed observer adapted white is\nD65, and the viewing environment is that of a dark surround. Mid-gray\nluminance is targeted at 15 cd/m^2.\n\nNOTE :\nThe parameterized \"Output Transform\" function used as basis for this\ntransform includes a parameter labeled \"SURROUND\". However, as noted in\n\"ACESlib.OutputTransforms.ctl\", this sub-module is currently a \"placeholder\"\nand as such currently only supports a rendering intended for dark surround\nenvironments. While it is planned for future releases to fully activate the\nthis module and provide adjustment for dark/dim/normal surrounds, setting\nSURROUND equal to either dim or normal will have no effect at this time.\n\nThat being said, these Output Transforms have been used successfully on\nmajor feature and television projects when mastering for home HDR where a\ndim surround environment is assumed. Based on that, these transforms are\nconsidered adequate for use for dim surround mastering, although, as always,\ncreative adjustments to contrast and saturation may be desirable and should\nbe saved as a \"trim pass.\"\n\nDevice Primaries :\nPrimaries are those specified in Rec. ITU-R BT.2020\nCIE 1931 chromaticities:  x         y         Y\nRed:          0.708     0.292\nGreen:        0.17      0.797\nBlue:         0.131     0.046\nWhite:        0.3127    0.329     1000 cd/m^2\n18% Gray:     0.3127    0.329     15 cd/m^2\n\nDisplay EOTF :\nThe reference electro-optical transfer function specified in SMPTE ST\n2084-2014. This transform makes no attempt to address the Annex functions\nwhich address integer quantization.\n\nAssumed observer adapted white point:\nCIE 1931 chromaticities:    x            y\n0.3127       0.329\n\nViewing Environment:\nEnvironment specified in SMPTE RP 431-2-2007",
            "_family": "outputTransform",
            "_genus": "rec2020"
          }
        }
      ]
    },
    {
      "name": "Output - HDR Video (2000 nits & Rec.2020 lim) - ACES 1.1",
      "from_reference": {
        "transform_type": "BuiltinTransform",
        "style": "ACES-OUTPUT - ACES2065-1_to_CIE-XYZ-D65 - HDR-VIDEO-2000nit-15nit-REC2020lim_1.1"
      },
      "description": "Component of ACES Output Transforms for 2000 nit HDR D65 video\n\nACEStransformID: urn:ampas:aces:transformId:v1.5:RRTODT.Academy.Rec2020_2000nits_15nits_ST2084.a1.1.0",
      "transforms_data": [
        {
          "ordering": "430",
          "aces_transform_id": "urn:ampas:aces:transformId:v1.5:RRTODT.Academy.Rec2020_2000nits_15nits_ST2084.a1.1.0",
          "builtin_transform_style": "ACES-OUTPUT - ACES2065-1_to_CIE-XYZ-D65 - HDR-VIDEO-2000nit-15nit-REC2020lim_1.1",
          "linked_display_colorspace_style": "DISPLAY - CIE-XYZ-D65_to_REC.2100-PQ",
          "interface": "ViewTransform",
          "encoding": "hdr-video",
          "categories": "file-io",
          "ctl_transform": {
            "py/object": "opencolorio_config_aces.config.reference.discover.classify.CTLTransform",
            "_path": "/home/aswf/OpenColorIO-Config-ACES/opencolorio_config_aces/config/reference/aces-dev/transforms/ctl/outputTransform/rec2020/RRTODT.Academy.Rec2020_2000nits_15nits_ST2084.ctl",
            "_code": "\n// <ACEStransformID>urn:ampas:aces:transformId:v1.5:RRTODT.Academy.Rec2020_2000nits_15nits_ST2084.a1.1.0</ACEStransformID>\n// <ACESuserName>ACES 1.0 Output - Rec.2020 ST2084 (2000 nits)</ACESuserName>\n\n// \n// Output Transform - Rec.2020 (2000 cd/m^2)\n//\n\n//\n// Summary :\n//  This transform maps ACES onto a Rec.2020 ST.2084 HDR display calibrated \n//  to a D65 white point at 2000 cd/m^2. The assumed observer adapted white is \n//  D65, and the viewing environment is that of a dark surround. Mid-gray\n//  luminance is targeted at 15 cd/m^2.\n//\n// NOTE :\n//  The parameterized \"Output Transform\" function used as basis for this \n//  transform includes a parameter labeled \"SURROUND\". However, as noted in \n//  \"ACESlib.OutputTransforms.ctl\", this sub-module is currently a \"placeholder\"\n//  and as such currently only supports a rendering intended for dark surround \n//  environments. While it is planned for future releases to fully activate the \n//  this module and provide adjustment for dark/dim/normal surrounds, setting \n//  SURROUND equal to either dim or normal will have no effect at this time.\n//  \n//  That being said, these Output Transforms have been used successfully on\n//  major feature and television projects when mastering for home HDR where a \n//  dim surround environment is assumed. Based on that, these transforms are \n//  considered adequate for use for dim surround mastering, although, as always,\n//  creative adjustments to contrast and saturation may be desirable and should\n//  be saved as a \"trim pass.\"\n//\n// Device Primaries : \n//  Primaries are those specified in Rec. ITU-R BT.2020\n//  CIE 1931 chromaticities:  x         y         Y\n//              Red:          0.708     0.292\n//              Green:        0.17      0.797\n//              Blue:         0.131     0.046\n//              White:        0.3127    0.329     2000 cd/m^2\n//              18% Gray:     0.3127    0.329     15 cd/m^2\n//\n// Display EOTF :\n//  The reference electro-optical transfer function specified in SMPTE ST \n//  2084-2014. This transform makes no attempt to address the Annex functions \n//  which address integer quantization.\n//\n// Assumed observer adapted white point:\n//         CIE 1931 chromaticities:    x            y\n//                                     0.3127       0.329\n//\n// Viewing Environment:\n//  Environment specified in SMPTE RP 431-2-2007\n//\n\n\n\nimport \"ACESlib.Utilities\";\nimport \"ACESlib.OutputTransforms\";\n\n\n\nconst float Y_MIN = 0.0001;                     // black luminance (cd/m^2)\nconst float Y_MID = 15.0;                       // mid-point luminance (cd/m^2)\nconst float Y_MAX = 2000.0;                     // peak white luminance (cd/m^2)\n\nconst Chromaticities DISPLAY_PRI = REC2020_PRI; // encoding primaries (device setup)\nconst Chromaticities LIMITING_PRI = REC2020_PRI;// limiting primaries\n\nconst int EOTF = 0;                             // 0: ST-2084 (PQ)\n                                                // 1: BT.1886 (Rec.709/2020 settings) \n                                                // 2: sRGB (mon_curve w/ presets)\n                                                // 3: gamma 2.6\n                                                // 4: linear (no EOTF)\n                                                // 5: HLG\n\nconst int SURROUND = 0;                         // 0: dark ( NOTE: this is the only active setting! )\n                                                // 1: dim ( *inactive* - selecting this will have no effect )\n                                                // 2: normal ( *inactive* - selecting this will have no effect )\n\nconst bool STRETCH_BLACK = true;                // stretch black luminance to a PQ code value of 0\nconst bool D60_SIM = false;                       \nconst bool LEGAL_RANGE = false;\n\n\nvoid main\n(\n\tinput varying float rIn,\n\tinput varying float gIn,\n\tinput varying float bIn,\n\tinput varying float aIn,\n\toutput varying float rOut,\n\toutput varying float gOut,\n\toutput varying float bOut,\n\toutput varying float aOut\n)\n{\n    float aces[3] = {rIn, gIn, bIn};\n\n    float cv[3] = outputTransform( aces, Y_MIN,\n                                         Y_MID,\n                                         Y_MAX,\n                                         DISPLAY_PRI,\n                                         LIMITING_PRI,\n                                         EOTF,\n                                         SURROUND,\n                                         STRETCH_BLACK,\n                                         D60_SIM,\n                                         LEGAL_RANGE );\n\n    rOut = cv[0];\n    gOut = cv[1];\n    bOut = cv[2];\n    aOut = aIn;\n}",
            "_aces_transform_id": {
              "py/object": "opencolorio_config_aces.config.reference.discover.classify.ACESTransformID",
              "_aces_transform_id": "urn:ampas:aces:transformId:v1.5:RRTODT.Academy.Rec2020_2000nits_15nits_ST2084.a1.1.0",
              "_urn": "urn:ampas:aces:transformId:v1.5",
              "_type": "RRTODT",
              "_namespace": "Academy",
              "_name": "Rec2020_2000nits_15nits_ST2084",
              "_major_version_number": "a1",
              "_minor_version_number": "1",
              "_patch_version_number": "0",
              "_source": "ACES2065-1",
              "_target": "Rec2020_2000nits_15nits_ST2084"
            },
            "_user_name": "ACES 1.0 Output - Rec.2020 ST2084 (2000 nits)",
            "_description": "Output Transform - Rec.2020 (2000 cd/m^2)\n\n\nSummary :\nThis transform maps ACES onto a Rec.2020 ST.2084 HDR display calibrated\nto a D65 white point at 2000 cd/m^2. The assumed observer adapted white is\nD65, and the viewing environment is that of a dark surround. Mid-gray\nluminance is targeted at 15 cd/m^2.\n\nNOTE :\nThe parameterized \"Output Transform\" function used as basis for this\ntransform includes a parameter labeled \"SURROUND\". However, as noted in\n\"ACESlib.OutputTransforms.ctl\", this sub-module is currently a \"placeholder\"\nand as such currently only supports a rendering intended for dark surround\nenvironments. While it is planned for future releases to fully activate the\nthis module and provide adjustment for dark/dim/normal surrounds, setting\nSURROUND equal to either dim or normal will have no effect at this time.\n\nThat being said, these Output Transforms have been used successfully on\nmajor feature and television projects when mastering for home HDR where a\ndim surround environment is assumed. Based on that, these transforms are\nconsidered adequate for use for dim surround mastering, although, as always,\ncreative adjustments to contrast and saturation may be desirable and should\nbe saved as a \"trim pass.\"\n\nDevice Primaries :\nPrimaries are those specified in Rec. ITU-R BT.2020\nCIE 1931 chromaticities:  x         y         Y\nRed:          0.708     0.292\nGreen:        0.17      0.797\nBlue:         0.131     0.046\nWhite:        0.3127    0.329     2000 cd/m^2\n18% Gray:     0.3127    0.329     15 cd/m^2\n\nDisplay EOTF :\nThe reference electro-optical transfer function specified in SMPTE ST\n2084-2014. This transform makes no attempt to address the Annex functions\nwhich address integer quantization.\n\nAssumed observer adapted white point:\nCIE 1931 chromaticities:    x            y\n0.3127       0.329\n\nViewing Environment:\nEnvironment specified in SMPTE RP 431-2-2007",
            "_family": "outputTransform",
            "_genus": "rec2020"
          }
        }
      ]
    },
    {
      "name": "Output - HDR Video (4000 nits & Rec.2020 lim) - ACES 1.1",
      "from_reference": {
        "transform_type": "BuiltinTransform",
        "style": "ACES-OUTPUT - ACES2065-1_to_CIE-XYZ-D65 - HDR-VIDEO-4000nit-15nit-REC2020lim_1.1"
      },
      "description": "Component of ACES Output Transforms for 4000 nit HDR D65 video\n\nACEStransformID: urn:ampas:aces:transformId:v1.5:RRTODT.Academy.Rec2020_4000nits_15nits_ST2084.a1.1.0",
      "transforms_data": [
        {
          "ordering": "430",
          "aces_transform_id": "urn:ampas:aces:transformId:v1.5:RRTODT.Academy.Rec2020_4000nits_15nits_ST2084.a1.1.0",
          "builtin_transform_style": "ACES-OUTPUT - ACES2065-1_to_CIE-XYZ-D65 - HDR-VIDEO-4000nit-15nit-REC2020lim_1.1",
          "linked_display_colorspace_style": "DISPLAY - CIE-XYZ-D65_to_REC.2100-PQ",
          "interface": "ViewTransform",
          "encoding": "hdr-video",
          "categories": "file-io",
          "ctl_transform": {
            "py/object": "opencolorio_config_aces.config.reference.discover.classify.CTLTransform",
            "_path": "/home/aswf/OpenColorIO-Config-ACES/opencolorio_config_aces/config/reference/aces-dev/transforms/ctl/outputTransform/rec2020/RRTODT.Academy.Rec2020_4000nits_15nits_ST2084.ctl",
            "_code": "\n// <ACEStransformID>urn:ampas:aces:transformId:v1.5:RRTODT.Academy.Rec2020_4000nits_15nits_ST2084.a1.1.0</ACEStransformID>\n// <ACESuserName>ACES 1.0 Output - Rec.2020 ST2084 (4000 nits)</ACESuserName>\n\n// \n// Output Transform - Rec.2020 (4000 cd/m^2)\n//\n\n//\n// Summary :\n//  This transform maps ACES onto a Rec.2020 ST.2084 HDR display calibrated \n//  to a D65 white point at 4000 cd/m^2. The assumed observer adapted white is \n//  D65, and the viewing environment is that of a dark surround. Mid-gray\n//  luminance is targeted at 15 cd/m^2.\n//\n// NOTE :\n//  The parameterized \"Output Transform\" function used as basis for this transform\n//  includes a parameter labeled \"SURROUND\". However, as noted in \n//  \"ACESlib.OutputTransforms.ctl\", this sub-module is currently a \"placeholder\"\n//  and as such currently only supports a rendering intended for dark surround \n//  environments. While it is planned for future releases to fully activate the \n//  this module and provide adjustment for dark/dim/normal surrounds, setting \n//  SURROUND equal to either dim or normal will have no effect at this time.\n//  \n//  That being said, these Output Transforms have been used successfully on\n//  major feature and television projects when mastering for home HDR where a \n//  dim surround environment is assumed. Based on that, these transforms are \n//  considered adequate for use for dim surround mastering, although, as always,\n//  creative adjustments to contrast and saturation may be desirable and should\n//  be saved as a \"trim pass.\"\n//\n// Device Primaries : \n//  Primaries are those specified in Rec. ITU-R BT.2020\n//  CIE 1931 chromaticities:  x         y         Y\n//              Red:          0.708     0.292\n//              Green:        0.17      0.797\n//              Blue:         0.131     0.046\n//              White:        0.3127    0.329     4000 cd/m^2\n//              18% Gray:     0.3127    0.329     15 cd/m^2\n//\n// Display EOTF :\n//  The reference electro-optical transfer function specified in SMPTE ST \n//  2084-2014. This transform makes no attempt to address the Annex functions \n//  which address integer quantization.\n//\n// Assumed observer adapted white point:\n//         CIE 1931 chromaticities:    x            y\n//                                     0.3127       0.329\n//\n// Viewing Environment:\n//  Environment specified in SMPTE RP 431-2-2007\n//\n\n\n\nimport \"ACESlib.Utilities\";\nimport \"ACESlib.OutputTransforms\";\n\n\n\nconst float Y_MIN = 0.0001;                     // black luminance (cd/m^2)\nconst float Y_MID = 15.0;                       // mid-point luminance (cd/m^2)\nconst float Y_MAX = 4000.0;                     // peak white luminance (cd/m^2)\n\nconst Chromaticities DISPLAY_PRI = REC2020_PRI; // encoding primaries (device setup)\nconst Chromaticities LIMITING_PRI = REC2020_PRI;// limiting primaries\n\nconst int EOTF = 0;                             // 0: ST-2084 (PQ)\n                                                // 1: BT.1886 (Rec.709/2020 settings) \n                                                // 2: sRGB (mon_curve w/ presets)\n                                                // 3: gamma 2.6\n                                                // 4: linear (no EOTF)\n                                                // 5: HLG\n\nconst int SURROUND = 0;                         // 0: dark ( NOTE: this is the only active setting! )\n                                                // 1: dim ( *inactive* - selecting this will have no effect )\n                                                // 2: normal ( *inactive* - selecting this will have no effect )\n\nconst bool STRETCH_BLACK = true;                // stretch black luminance to a PQ code value of 0\nconst bool D60_SIM = false;                       \nconst bool LEGAL_RANGE = false;\n\n\nvoid main\n(\n\tinput varying float rIn,\n\tinput varying float gIn,\n\tinput varying float bIn,\n\tinput varying float aIn,\n\toutput varying float rOut,\n\toutput varying float gOut,\n\toutput varying float bOut,\n\toutput varying float aOut\n)\n{\n    float aces[3] = {rIn, gIn, bIn};\n\n    float cv[3] = outputTransform( aces, Y_MIN,\n                                         Y_MID,\n                                         Y_MAX,\n                                         DISPLAY_PRI,\n                                         LIMITING_PRI,\n                                         EOTF,\n                                         SURROUND,\n                                         STRETCH_BLACK,\n                                         D60_SIM,\n                                         LEGAL_RANGE );\n\n    rOut = cv[0];\n    gOut = cv[1];\n    bOut = cv[2];\n    aOut = aIn;\n}",
            "_aces_transform_id": {
              "py/object": "opencolorio_config_aces.config.reference.discover.classify.ACESTransformID",
              "_aces_transform_id": "urn:ampas:aces:transformId:v1.5:RRTODT.Academy.Rec2020_4000nits_15nits_ST2084.a1.1.0",
              "_urn": "urn:ampas:aces:transformId:v1.5",
              "_type": "RRTODT",
              "_namespace": "Academy",
              "_name": "Rec2020_4000nits_15nits_ST2084",
              "_major_version_number": "a1",
              "_minor_version_number": "1",
              "_patch_version_number": "0",
              "_source": "ACES2065-1",
              "_target": "Rec2020_4000nits_15nits_ST2084"
            },
            "_user_name": "ACES 1.0 Output - Rec.2020 ST2084 (4000 nits)",
            "_description": "Output Transform - Rec.2020 (4000 cd/m^2)\n\n\nSummary :\nThis transform maps ACES onto a Rec.2020 ST.2084 HDR display calibrated\nto a D65 white point at 4000 cd/m^2. The assumed observer adapted white is\nD65, and the viewing environment is that of a dark surround. Mid-gray\nluminance is targeted at 15 cd/m^2.\n\nNOTE :\nThe parameterized \"Output Transform\" function used as basis for this transform\nincludes a parameter labeled \"SURROUND\". However, as noted in\n\"ACESlib.OutputTransforms.ctl\", this sub-module is currently a \"placeholder\"\nand as such currently only supports a rendering intended for dark surround\nenvironments. While it is planned for future releases to fully activate the\nthis module and provide adjustment for dark/dim/normal surrounds, setting\nSURROUND equal to either dim or normal will have no effect at this time.\n\nThat being said, these Output Transforms have been used successfully on\nmajor feature and television projects when mastering for home HDR where a\ndim surround environment is assumed. Based on that, these transforms are\nconsidered adequate for use for dim surround mastering, although, as always,\ncreative adjustments to contrast and saturation may be desirable and should\nbe saved as a \"trim pass.\"\n\nDevice Primaries :\nPrimaries are those specified in Rec. ITU-R BT.2020\nCIE 1931 chromaticities:  x         y         Y\nRed:          0.708     0.292\nGreen:        0.17      0.797\nBlue:         0.131     0.046\nWhite:        0.3127    0.329     4000 cd/m^2\n18% Gray:     0.3127    0.329     15 cd/m^2\n\nDisplay EOTF :\nThe reference electro-optical transfer function specified in SMPTE ST\n2084-2014. This transform makes no attempt to address the Annex functions\nwhich address integer quantization.\n\nAssumed observer adapted white point:\nCIE 1931 chromaticities:    x            y\n0.3127       0.329\n\nViewing Environment:\nEnvironment specified in SMPTE RP 431-2-2007",
            "_family": "outputTransform",
            "_genus": "rec2020"
          }
        }
      ]
    },
    {
      "name": "Output - HDR Video (1000 nits & P3 lim) - ACES 1.1",
      "from_reference": {
        "transform_type": "BuiltinTransform",
        "style": "ACES-OUTPUT - ACES2065-1_to_CIE-XYZ-D65 - HDR-VIDEO-1000nit-15nit-P3lim_1.1"
      },
      "description": "Component of ACES Output Transforms for 1000 nit HDR D65 video\n\nACEStransformID: urn:ampas:aces:transformId:v1.5:RRTODT.Academy.P3D65_1000nits_15nits_ST2084.a1.1.0",
      "transforms_data": [
        {
          "ordering": "450",
          "aces_transform_id": "urn:ampas:aces:transformId:v1.5:RRTODT.Academy.P3D65_1000nits_15nits_ST2084.a1.1.0",
          "builtin_transform_style": "ACES-OUTPUT - ACES2065-1_to_CIE-XYZ-D65 - HDR-VIDEO-1000nit-15nit-P3lim_1.1",
          "linked_display_colorspace_style": "DISPLAY - CIE-XYZ-D65_to_ST2084-P3-D65",
          "interface": "ViewTransform",
          "encoding": "hdr-video",
          "categories": "file-io",
          "ctl_transform": {
            "py/object": "opencolorio_config_aces.config.reference.discover.classify.CTLTransform",
            "_path": "/home/aswf/OpenColorIO-Config-ACES/opencolorio_config_aces/config/reference/aces-dev/transforms/ctl/outputTransform/p3/RRTODT.Academy.P3D65_1000nits_15nits_ST2084.ctl",
            "_code": "\n// <ACEStransformID>urn:ampas:aces:transformId:v1.5:RRTODT.Academy.P3D65_1000nits_15nits_ST2084.a1.1.0</ACEStransformID>\n// <ACESuserName>ACES 1.0 Output - P3-D65 ST2084 (1000 nits)</ACESuserName>\n\n// \n// Output Transform - P3D65 (1000 cd/m^2)\n//\n\n//\n// Summary :\n//  This transform maps ACES onto a P3D65 ST.2084 HDR display calibrated \n//  to a D65 white point at 1000 cd/m^2. The assumed observer adapted white is \n//  D65, and the viewing environment is that of a dark surround. Mid-gray\n//  luminance is targeted at 15 cd/m^2.\n//\n// NOTE :\n//  The parameterized \"Output Transform\" function used as basis for this \n//  transform includes a parameter labeled \"SURROUND\". However, as noted in \n//  \"ACESlib.OutputTransforms.ctl\", this sub-module is currently a \"placeholder\"\n//  and as such currently only supports a rendering intended for dark surround \n//  environments. While it is planned for future releases to fully activate the \n//  this module and provide adjustment for dark/dim/normal surrounds, setting \n//  SURROUND equal to either dim or normal will have no effect at this time.\n//  \n//  That being said, these Output Transforms have been used successfully on\n//  major feature and television projects when mastering for home HDR where a \n//  dim surround environment is assumed. Based on that, these transforms are \n//  considered adequate for use for dim surround mastering, although, as always,\n//  creative adjustments to contrast and saturation may be desirable and should\n//  be saved as a \"trim pass.\"\n//\n// Device Primaries : \n//  Primaries are those specified in Rec. ITU-R BT.2020\n//  CIE 1931 chromaticities:  x         y         Y\n//              Red:          0.68      0.32\n//              Green:        0.265     0.69\n//              Blue:         0.15      0.06\n//              White:        0.3127    0.329     1000 cd/m^2\n//              18% Gray:     0.3127    0.329     15 cd/m^2\n//\n// Display EOTF :\n//  The reference electro-optical transfer function specified in SMPTE ST \n//  2084-2014. This transform makes no attempt to address the Annex functions \n//  which address integer quantization.\n//\n// Assumed observer adapted white point:\n//         CIE 1931 chromaticities:    x            y\n//                                     0.3127       0.329\n//\n// Viewing Environment:\n//  Environment specified in SMPTE RP 431-2-2007\n//\n\n\n\nimport \"ACESlib.Utilities\";\nimport \"ACESlib.OutputTransforms\";\n\n\n\nconst float Y_MIN = 0.0001;                     // black luminance (cd/m^2)\nconst float Y_MID = 15.0;                       // mid-point luminance (cd/m^2)\nconst float Y_MAX = 1000.0;                     // peak white luminance (cd/m^2)\n\nconst Chromaticities DISPLAY_PRI = P3D65_PRI;   // encoding primaries (device setup)\nconst Chromaticities LIMITING_PRI = P3D65_PRI;  // limiting primaries\n\nconst int EOTF = 0;                             // 0: ST-2084 (PQ)\n                                                // 1: BT.1886 (Rec.709/2020 settings) \n                                                // 2: sRGB (mon_curve w/ presets)\n                                                // 3: gamma 2.6\n                                                // 4: linear (no EOTF)\n                                                // 5: HLG\n\nconst int SURROUND = 0;                         // 0: dark ( NOTE: this is the only active setting! )\n                                                // 1: dim ( *inactive* - selecting this will have no effect )\n                                                // 2: normal ( *inactive* - selecting this will have no effect )\n\nconst bool STRETCH_BLACK = true;                // stretch black luminance to a PQ code value of 0\nconst bool D60_SIM = false;                       \nconst bool LEGAL_RANGE = false;\n\n\nvoid main\n(\n\tinput varying float rIn,\n\tinput varying float gIn,\n\tinput varying float bIn,\n\tinput varying float aIn,\n\toutput varying float rOut,\n\toutput varying float gOut,\n\toutput varying float bOut,\n\toutput varying float aOut\n)\n{\n    float aces[3] = {rIn, gIn, bIn};\n\n    float cv[3] = outputTransform( aces, Y_MIN,\n                                         Y_MID,\n                                         Y_MAX,\n                                         DISPLAY_PRI,\n                                         LIMITING_PRI,\n                                         EOTF,\n                                         SURROUND,\n                                         STRETCH_BLACK,\n                                         D60_SIM,\n                                         LEGAL_RANGE );\n\n    rOut = cv[0];\n    gOut = cv[1];\n    bOut = cv[2];\n    aOut = aIn;\n}",
            "_aces_transform_id": {
              "py/object": "opencolorio_config_aces.config.reference.discover.classify.ACESTransformID",
              "_aces_transform_id": "urn:ampas:aces:transformId:v1.5:RRTODT.Academy.P3D65_1000nits_15nits_ST2084.a1.1.0",
              "_urn": "urn:ampas:aces:transformId:v1.5",
              "_type": "RRTODT",
              "_namespace": "Academy",
              "_name": "P3D65_1000nits_15nits_ST2084",
              "_major_version_number": "a1",
              "_minor_version_number": "1",
              "_patch_version_number": "0",
              "_source": "ACES2065-1",
              "_target": "P3D65_1000nits_15nits_ST2084"
            },
            "_user_name": "ACES 1.0 Output - P3-D65 ST2084 (1000 nits)",
            "_description": "Output Transform - P3D65 (1000 cd/m^2)\n\n\nSummary :\nThis transform maps ACES onto a P3D65 ST.2084 HDR display calibrated\nto a D65 white point at 1000 cd/m^2. The assumed observer adapted white is\nD65, and the viewing environment is that of a dark surround. Mid-gray\nluminance is targeted at 15 cd/m^2.\n\nNOTE :\nThe parameterized \"Output Transform\" function used as basis for this\ntransform includes a parameter labeled \"SURROUND\". However, as noted in\n\"ACESlib.OutputTransforms.ctl\", this sub-module is currently a \"placeholder\"\nand as such currently only supports a rendering intended for dark surround\nenvironments. While it is planned for future releases to fully activate the\nthis module and provide adjustment for dark/dim/normal surrounds, setting\nSURROUND equal to either dim or normal will have no effect at this time.\n\nThat being said, these Output Transforms have been used successfully on\nmajor feature and television projects when mastering for home HDR where a\ndim surround environment is assumed. Based on that, these transforms are\nconsidered adequate for use for dim surround mastering, although, as always,\ncreative adjustments to contrast and saturation may be desirable and should\nbe saved as a \"trim pass.\"\n\nDevice Primaries :\nPrimaries are those specified in Rec. ITU-R BT.2020\nCIE 1931 chromaticities:  x         y         Y\nRed:          0.68      0.32\nGreen:        0.265     0.69\nBlue:         0.15      0.06\nWhite:        0.3127    0.329     1000 cd/m^2\n18% Gray:     0.3127    0.329     15 cd/m^2\n\nDisplay EOTF :\nThe reference electro-optical transfer function specified in SMPTE ST\n2084-2014. This transform makes no attempt to address the Annex functions\nwhich address integer quantization.\n\nAssumed observer adapted white point:\nCIE 1931 chromaticities:    x            y\n0.3127       0.329\n\nViewing Environment:\nEnvironment specified in SMPTE RP 431-2-2007",
            "_family": "outputTransform",
            "_genus": "p3"
          }
        }
      ]
    },
    {
      "name": "Output - HDR Video (2000 nits & P3 lim) - ACES 1.1",
      "from_reference": {
        "transform_type": "BuiltinTransform",
        "style": "ACES-OUTPUT - ACES2065-1_to_CIE-XYZ-D65 - HDR-VIDEO-2000nit-15nit-P3lim_1.1"
      },
      "description": "Component of ACES Output Transforms for 2000 nit HDR D65 video\n\nACEStransformID: urn:ampas:aces:transformId:v1.5:RRTODT.Academy.P3D65_2000nits_15nits_ST2084.a1.1.0",
      "transforms_data": [
        {
          "ordering": "450",
          "aces_transform_id": "urn:ampas:aces:transformId:v1.5:RRTODT.Academy.P3D65_2000nits_15nits_ST2084.a1.1.0",
          "builtin_transform_style": "ACES-OUTPUT - ACES2065-1_to_CIE-XYZ-D65 - HDR-VIDEO-2000nit-15nit-P3lim_1.1",
          "linked_display_colorspace_style": "DISPLAY - CIE-XYZ-D65_to_ST2084-P3-D65",
          "interface": "ViewTransform",
          "encoding": "hdr-video",
          "categories": "file-io",
          "ctl_transform": {
            "py/object": "opencolorio_config_aces.config.reference.discover.classify.CTLTransform",
            "_path": "/home/aswf/OpenColorIO-Config-ACES/opencolorio_config_aces/config/reference/aces-dev/transforms/ctl/outputTransform/p3/RRTODT.Academy.P3D65_2000nits_15nits_ST2084.ctl",
            "_code": "\n// <ACEStransformID>urn:ampas:aces:transformId:v1.5:RRTODT.Academy.P3D65_2000nits_15nits_ST2084.a1.1.0</ACEStransformID>\n// <ACESuserName>ACES 1.0 Output - P3-D65 ST2084 (2000 nits)</ACESuserName>\n\n// \n// Output Transform - P3D65 (2000 cd/m^2)\n//\n\n//\n// Summary :\n//  This transform maps ACES onto a P3D65 ST.2084 HDR display calibrated \n//  to a D65 white point at 2000 cd/m^2. The assumed observer adapted white is \n//  D65, and the viewing environment is that of a dark surround. Mid-gray\n//  luminance is targeted at 15 cd/m^2.\n//\n// NOTE :\n//  The parameterized \"Output Transform\" function used as basis for this \n//  transform includes a parameter labeled \"SURROUND\". However, as noted in \n//  \"ACESlib.OutputTransforms.ctl\", this sub-module is currently a \"placeholder\"\n//  and as such currently only supports a rendering intended for dark surround \n//  environments. While it is planned for future releases to fully activate the \n//  this module and provide adjustment for dark/dim/normal surrounds, setting \n//  SURROUND equal to either dim or normal will have no effect at this time.\n//  \n//  That being said, these Output Transforms have been used successfully on\n//  major feature and television projects when mastering for home HDR where a \n//  dim surround environment is assumed. Based on that, these transforms are \n//  considered adequate for use for dim surround mastering, although, as always,\n//  creative adjustments to contrast and saturation may be desirable and should\n//  be saved as a \"trim pass.\"\n//\n// Device Primaries : \n//  Primaries are those specified in Rec. ITU-R BT.2020\n//  CIE 1931 chromaticities:  x         y         Y\n//              Red:          0.68      0.32\n//              Green:        0.265     0.69\n//              Blue:         0.15      0.06\n//              White:        0.3127    0.329     2000 cd/m^2\n//              18% Gray:     0.3127    0.329     15 cd/m^2\n//\n// Display EOTF :\n//  The reference electro-optical transfer function specified in SMPTE ST \n//  2084-2014. This transform makes no attempt to address the Annex functions \n//  which address integer quantization.\n//\n// Assumed observer adapted white point:\n//         CIE 1931 chromaticities:    x            y\n//                                     0.3127       0.329\n//\n// Viewing Environment:\n//  Environment specified in SMPTE RP 431-2-2007\n//\n\n\n\nimport \"ACESlib.Utilities\";\nimport \"ACESlib.OutputTransforms\";\n\n\n\nconst float Y_MIN = 0.0001;                     // black luminance (cd/m^2)\nconst float Y_MID = 15.0;                       // mid-point luminance (cd/m^2)\nconst float Y_MAX = 2000.0;                     // peak white luminance (cd/m^2)\n\nconst Chromaticities DISPLAY_PRI = P3D65_PRI;   // encoding primaries (device setup)\nconst Chromaticities LIMITING_PRI = P3D65_PRI;  // limiting primaries\n\nconst int EOTF = 0;                             // 0: ST-2084 (PQ)\n                                                // 1: BT.1886 (Rec.709/2020 settings) \n                                                // 2: sRGB (mon_curve w/ presets)\n                                                // 3: gamma 2.6\n                                                // 4: linear (no EOTF)\n                                                // 5: HLG\n\nconst int SURROUND = 0;                         // 0: dark ( NOTE: this is the only active setting! )\n                                                // 1: dim ( *inactive* - selecting this will have no effect )\n                                                // 2: normal ( *inactive* - selecting this will have no effect )\n\nconst bool STRETCH_BLACK = true;                // stretch black luminance to a PQ code value of 0\nconst bool D60_SIM = false;                       \nconst bool LEGAL_RANGE = false;\n\n\nvoid main\n(\n\tinput varying float rIn,\n\tinput varying float gIn,\n\tinput varying float bIn,\n\tinput varying float aIn,\n\toutput varying float rOut,\n\toutput varying float gOut,\n\toutput varying float bOut,\n\toutput varying float aOut\n)\n{\n    float aces[3] = {rIn, gIn, bIn};\n\n    float cv[3] = outputTransform( aces, Y_MIN,\n                                         Y_MID,\n                                         Y_MAX,\n                                         DISPLAY_PRI,\n                                         LIMITING_PRI,\n                                         EOTF,\n                                         SURROUND,\n                                         STRETCH_BLACK,\n                                         D60_SIM,\n                                         LEGAL_RANGE );\n\n    rOut = cv[0];\n    gOut = cv[1];\n    bOut = cv[2];\n    aOut = aIn;\n}",
            "_aces_transform_id": {
              "py/object": "opencolorio_config_aces.config.reference.discover.classify.ACESTransformID",
              "_aces_transform_id": "urn:ampas:aces:transformId:v1.5:RRTODT.Academy.P3D65_2000nits_15nits_ST2084.a1.1.0",
              "_urn": "urn:ampas:aces:transformId:v1.5",
              "_type": "RRTODT",
              "_namespace": "Academy",
              "_name": "P3D65_2000nits_15nits_ST2084",
              "_major_version_number": "a1",
              "_minor_version_number": "1",
              "_patch_version_number": "0",
              "_source": "ACES2065-1",
              "_target": "P3D65_2000nits_15nits_ST2084"
            },
            "_user_name": "ACES 1.0 Output - P3-D65 ST2084 (2000 nits)",
            "_description": "Output Transform - P3D65 (2000 cd/m^2)\n\n\nSummary :\nThis transform maps ACES onto a P3D65 ST.2084 HDR display calibrated\nto a D65 white point at 2000 cd/m^2. The assumed observer adapted white is\nD65, and the viewing environment is that of a dark surround. Mid-gray\nluminance is targeted at 15 cd/m^2.\n\nNOTE :\nThe parameterized \"Output Transform\" function used as basis for this\ntransform includes a parameter labeled \"SURROUND\". However, as noted in\n\"ACESlib.OutputTransforms.ctl\", this sub-module is currently a \"placeholder\"\nand as such currently only supports a rendering intended for dark surround\nenvironments. While it is planned for future releases to fully activate the\nthis module and provide adjustment for dark/dim/normal surrounds, setting\nSURROUND equal to either dim or normal will have no effect at this time.\n\nThat being said, these Output Transforms have been used successfully on\nmajor feature and television projects when mastering for home HDR where a\ndim surround environment is assumed. Based on that, these transforms are\nconsidered adequate for use for dim surround mastering, although, as always,\ncreative adjustments to contrast and saturation may be desirable and should\nbe saved as a \"trim pass.\"\n\nDevice Primaries :\nPrimaries are those specified in Rec. ITU-R BT.2020\nCIE 1931 chromaticities:  x         y         Y\nRed:          0.68      0.32\nGreen:        0.265     0.69\nBlue:         0.15      0.06\nWhite:        0.3127    0.329     2000 cd/m^2\n18% Gray:     0.3127    0.329     15 cd/m^2\n\nDisplay EOTF :\nThe reference electro-optical transfer function specified in SMPTE ST\n2084-2014. This transform makes no attempt to address the Annex functions\nwhich address integer quantization.\n\nAssumed observer adapted white point:\nCIE 1931 chromaticities:    x            y\n0.3127       0.329\n\nViewing Environment:\nEnvironment specified in SMPTE RP 431-2-2007",
            "_family": "outputTransform",
            "_genus": "p3"
          }
        }
      ]
    },
    {
      "name": "Output - HDR Video (4000 nits & P3 lim) - ACES 1.1",
      "from_reference": {
        "transform_type": "BuiltinTransform",
        "style": "ACES-OUTPUT - ACES2065-1_to_CIE-XYZ-D65 - HDR-VIDEO-4000nit-15nit-P3lim_1.1"
      },
      "description": "Component of ACES Output Transforms for 4000 nit HDR D65 video\n\nACEStransformID: urn:ampas:aces:transformId:v1.5:RRTODT.Academy.P3D65_4000nits_15nits_ST2084.a1.1.0",
      "transforms_data": [
        {
          "ordering": "450",
          "aces_transform_id": "urn:ampas:aces:transformId:v1.5:RRTODT.Academy.P3D65_4000nits_15nits_ST2084.a1.1.0",
          "builtin_transform_style": "ACES-OUTPUT - ACES2065-1_to_CIE-XYZ-D65 - HDR-VIDEO-4000nit-15nit-P3lim_1.1",
          "linked_display_colorspace_style": "DISPLAY - CIE-XYZ-D65_to_ST2084-P3-D65",
          "interface": "ViewTransform",
          "encoding": "hdr-video",
          "categories": "file-io",
          "ctl_transform": {
            "py/object": "opencolorio_config_aces.config.reference.discover.classify.CTLTransform",
            "_path": "/home/aswf/OpenColorIO-Config-ACES/opencolorio_config_aces/config/reference/aces-dev/transforms/ctl/outputTransform/p3/RRTODT.Academy.P3D65_4000nits_15nits_ST2084.ctl",
            "_code": "\n// <ACEStransformID>urn:ampas:aces:transformId:v1.5:RRTODT.Academy.P3D65_4000nits_15nits_ST2084.a1.1.0</ACEStransformID>\n// <ACESuserName>ACES 1.0 Output - P3-D65 ST2084 (4000 nits)</ACESuserName>\n\n// \n// Output Transform - P3D65 (4000 cd/m^2)\n//\n\n//\n// Summary :\n//  This transform maps ACES onto a P3D65 ST.2084 HDR display calibrated \n//  to a D65 white point at 4000 cd/m^2. The assumed observer adapted white is \n//  D65, and the viewing environment is that of a dark surround. Mid-gray\n//  luminance is targeted at 15 cd/m^2.\n//\n// NOTE :\n//  The parameterized \"Output Transform\" function used as basis for this \n//  transform includes a parameter labeled \"SURROUND\". However, as noted in \n//  \"ACESlib.OutputTransforms.ctl\", this sub-module is currently a \"placeholder\"\n//  and as such currently only supports a rendering intended for dark surround \n//  environments. While it is planned for future releases to fully activate the \n//  this module and provide adjustment for dark/dim/normal surrounds, setting \n//  SURROUND equal to either dim or normal will have no effect at this time.\n//  \n//  That being said, these Output Transforms have been used successfully on\n//  major feature and television projects when mastering for home HDR where a \n//  dim surround environment is assumed. Based on that, these transforms are \n//  considered adequate for use for dim surround mastering, although, as always,\n//  creative adjustments to contrast and saturation may be desirable and should\n//  be saved as a \"trim pass.\"\n//\n// Device Primaries : \n//  Primaries are those specified in Rec. ITU-R BT.2020\n//  CIE 1931 chromaticities:  x         y         Y\n//              Red:          0.68      0.32\n//              Green:        0.265     0.69\n//              Blue:         0.15      0.06\n//              White:        0.3127    0.329     4000 cd/m^2\n//              18% Gray:     0.3127    0.329     15 cd/m^2\n//\n// Display EOTF :\n//  The reference electro-optical transfer function specified in SMPTE ST \n//  2084-2014. This transform makes no attempt to address the Annex functions \n//  which address integer quantization.\n//\n// Assumed observer adapted white point:\n//         CIE 1931 chromaticities:    x            y\n//                                     0.3127       0.329\n//\n// Viewing Environment:\n//  Environment specified in SMPTE RP 431-2-2007\n//\n\n\n\nimport \"ACESlib.Utilities\";\nimport \"ACESlib.OutputTransforms\";\n\n\n\nconst float Y_MIN = 0.0001;                     // black luminance (cd/m^2)\nconst float Y_MID = 15.0;                       // mid-point luminance (cd/m^2)\nconst float Y_MAX = 4000.0;                     // peak white luminance (cd/m^2)\n\nconst Chromaticities DISPLAY_PRI = P3D65_PRI;   // encoding primaries (device setup)\nconst Chromaticities LIMITING_PRI = P3D65_PRI;  // limiting primaries\n\nconst int EOTF = 0;                             // 0: ST-2084 (PQ)\n                                                // 1: BT.1886 (Rec.709/2020 settings) \n                                                // 2: sRGB (mon_curve w/ presets)\n                                                // 3: gamma 2.6\n                                                // 4: linear (no EOTF)\n                                                // 5: HLG\n\nconst int SURROUND = 0;                         // 0: dark ( NOTE: this is the only active setting! )\n                                                // 1: dim ( *inactive* - selecting this will have no effect )\n                                                // 2: normal ( *inactive* - selecting this will have no effect )\n\nconst bool STRETCH_BLACK = true;                // stretch black luminance to a PQ code value of 0\nconst bool D60_SIM = false;                       \nconst bool LEGAL_RANGE = false;\n\n\nvoid main\n(\n\tinput varying float rIn,\n\tinput varying float gIn,\n\tinput varying float bIn,\n\tinput varying float aIn,\n\toutput varying float rOut,\n\toutput varying float gOut,\n\toutput varying float bOut,\n\toutput varying float aOut\n)\n{\n    float aces[3] = {rIn, gIn, bIn};\n\n    float cv[3] = outputTransform( aces, Y_MIN,\n                                         Y_MID,\n                                         Y_MAX,\n                                         DISPLAY_PRI,\n                                         LIMITING_PRI,\n                                         EOTF,\n                                         SURROUND,\n                                         STRETCH_BLACK,\n                                         D60_SIM,\n                                         LEGAL_RANGE );\n\n    rOut = cv[0];\n    gOut = cv[1];\n    bOut = cv[2];\n    aOut = aIn;\n}",
            "_aces_transform_id": {
              "py/object": "opencolorio_config_aces.config.reference.discover.classify.ACESTransformID",
              "_aces_transform_id": "urn:ampas:aces:transformId:v1.5:RRTODT.Academy.P3D65_4000nits_15nits_ST2084.a1.1.0",
              "_urn": "urn:ampas:aces:transformId:v1.5",
              "_type": "RRTODT",
              "_namespace": "Academy",
              "_name": "P3D65_4000nits_15nits_ST2084",
              "_major_version_number": "a1",
              "_minor_version_number": "1",
              "_patch_version_number": "0",
              "_source": "ACES2065-1",
              "_target": "P3D65_4000nits_15nits_ST2084"
            },
            "_user_name": "ACES 1.0 Output - P3-D65 ST2084 (4000 nits)",
            "_description": "Output Transform - P3D65 (4000 cd/m^2)\n\n\nSummary :\nThis transform maps ACES onto a P3D65 ST.2084 HDR display calibrated\nto a D65 white point at 4000 cd/m^2. The assumed observer adapted white is\nD65, and the viewing environment is that of a dark surround. Mid-gray\nluminance is targeted at 15 cd/m^2.\n\nNOTE :\nThe parameterized \"Output Transform\" function used as basis for this\ntransform includes a parameter labeled \"SURROUND\". However, as noted in\n\"ACESlib.OutputTransforms.ctl\", this sub-module is currently a \"placeholder\"\nand as such currently only supports a rendering intended for dark surround\nenvironments. While it is planned for future releases to fully activate the\nthis module and provide adjustment for dark/dim/normal surrounds, setting\nSURROUND equal to either dim or normal will have no effect at this time.\n\nThat being said, these Output Transforms have been used successfully on\nmajor feature and television projects when mastering for home HDR where a\ndim surround environment is assumed. Based on that, these transforms are\nconsidered adequate for use for dim surround mastering, although, as always,\ncreative adjustments to contrast and saturation may be desirable and should\nbe saved as a \"trim pass.\"\n\nDevice Primaries :\nPrimaries are those specified in Rec. ITU-R BT.2020\nCIE 1931 chromaticities:  x         y         Y\nRed:          0.68      0.32\nGreen:        0.265     0.69\nBlue:         0.15      0.06\nWhite:        0.3127    0.329     4000 cd/m^2\n18% Gray:     0.3127    0.329     15 cd/m^2\n\nDisplay EOTF :\nThe reference electro-optical transfer function specified in SMPTE ST\n2084-2014. This transform makes no attempt to address the Annex functions\nwhich address integer quantization.\n\nAssumed observer adapted white point:\nCIE 1931 chromaticities:    x            y\n0.3127       0.329\n\nViewing Environment:\nEnvironment specified in SMPTE RP 431-2-2007",
            "_family": "outputTransform",
            "_genus": "p3"
          }
        }
      ]
    },
    {
      "name": "Output - SDR Cinema - ACES 1.0",
      "from_reference": {
        "transform_type": "BuiltinTransform",
        "style": "ACES-OUTPUT - ACES2065-1_to_CIE-XYZ-D65 - SDR-CINEMA_1.0"
      },
      "description": "Component of ACES Output Transforms for SDR cinema\n\nACEStransformID: urn:ampas:aces:transformId:v1.5:ODT.Academy.P3D60_48nits.a1.0.3\nACEStransformID: urn:ampas:aces:transformId:v1.5:ODT.Academy.P3D65_48nits.a1.1.0",
      "transforms_data": [
        {
          "ordering": "460",
          "aces_transform_id": "urn:ampas:aces:transformId:v1.5:ODT.Academy.P3D60_48nits.a1.0.3",
          "builtin_transform_style": "ACES-OUTPUT - ACES2065-1_to_CIE-XYZ-D65 - SDR-CINEMA_1.0",
          "linked_display_colorspace_style": "DISPLAY - CIE-XYZ-D65_to_G2.6-P3-D60-BFD",
          "interface": "ViewTransform",
          "encoding": "sdr-video",
          "categories": "file-io",
          "ctl_transform": {
            "py/object": "opencolorio_config_aces.config.reference.discover.classify.CTLTransform",
            "_path": "/home/aswf/OpenColorIO-Config-ACES/opencolorio_config_aces/config/reference/aces-dev/transforms/ctl/odt/p3/ODT.Academy.P3D60_48nits.ctl",
            "_code": "\n// <ACEStransformID>urn:ampas:aces:transformId:v1.5:ODT.Academy.P3D60_48nits.a1.0.3</ACEStransformID>\n// <ACESuserName>ACES 1.0 Output - P3-D60</ACESuserName>\n\n// \n// Output Device Transform - P3D60\n//\n\n//\n// Summary :\n//  This transform is intended for mapping OCES onto a P3 digital cinema \n//  projector that is calibrated to a D60 white point at 48 cd/m^2. The assumed \n//  observer adapted white is D60, and the viewing environment is that of a dark \n//  theater. \n//\n// Device Primaries : \n//  CIE 1931 chromaticities:  x         y         Y\n//              Red:          0.68      0.32\n//              Green:        0.265     0.69\n//              Blue:         0.15      0.06\n//              White:        0.32168   0.33767   48 cd/m^2\n//\n// Display EOTF :\n//  Gamma: 2.6\n//\n// Assumed observer adapted white point:\n//         CIE 1931 chromaticities:    x            y\n//                                     0.32168      0.33767\n//\n// Viewing Environment:\n//  Environment specified in SMPTE RP 431-2-2007\n//\n\n\nimport \"ACESlib.Utilities\";\nimport \"ACESlib.Transform_Common\";\nimport \"ACESlib.ODT_Common\";\nimport \"ACESlib.Tonescales\";\n\n\n\n/* --- ODT Parameters --- */\nconst Chromaticities DISPLAY_PRI = P3D60_PRI;\nconst float XYZ_2_DISPLAY_PRI_MAT[4][4] = XYZtoRGB( DISPLAY_PRI, 1.0);\n\nconst float DISPGAMMA = 2.6; \n\n\nvoid main \n(\n    input varying float rIn, \n    input varying float gIn, \n    input varying float bIn, \n    input varying float aIn,\n    output varying float rOut,\n    output varying float gOut,\n    output varying float bOut,\n    output varying float aOut\n)\n{\n    float oces[3] = { rIn, gIn, bIn};\n\n    // OCES to RGB rendering space\n    float rgbPre[3] = mult_f3_f44( oces, AP0_2_AP1_MAT);\n\n    // Apply the tonescale independently in rendering-space RGB\n    float rgbPost[3];\n    rgbPost[0] = segmented_spline_c9_fwd( rgbPre[0]);\n    rgbPost[1] = segmented_spline_c9_fwd( rgbPre[1]);\n    rgbPost[2] = segmented_spline_c9_fwd( rgbPre[2]);\n\n    // Scale luminance to linear code value\n    float linearCV[3];\n    linearCV[0] = Y_2_linCV( rgbPost[0], CINEMA_WHITE, CINEMA_BLACK);\n    linearCV[1] = Y_2_linCV( rgbPost[1], CINEMA_WHITE, CINEMA_BLACK);\n    linearCV[2] = Y_2_linCV( rgbPost[2], CINEMA_WHITE, CINEMA_BLACK);\n\n    // Convert to display primary encoding\n    // Rendering space RGB to XYZ\n    float XYZ[3] = mult_f3_f44( linearCV, AP1_2_XYZ_MAT);\n\n    // CIE XYZ to display primaries\n    linearCV = mult_f3_f44( XYZ, XYZ_2_DISPLAY_PRI_MAT);\n\n    // Handle out-of-gamut values\n    // Clip values < 0 or > 1 (i.e. projecting outside the display primaries)\n    linearCV = clamp_f3( linearCV, 0., 1.);\n\n    // Encode linear code values with transfer function\n    float outputCV[3] = pow_f3( linearCV, 1./ DISPGAMMA);\n\n    rOut = outputCV[0];\n    gOut = outputCV[1];\n    bOut = outputCV[2];\n    aOut = aIn;\n}",
            "_aces_transform_id": {
              "py/object": "opencolorio_config_aces.config.reference.discover.classify.ACESTransformID",
              "_aces_transform_id": "urn:ampas:aces:transformId:v1.5:ODT.Academy.P3D60_48nits.a1.0.3",
              "_urn": "urn:ampas:aces:transformId:v1.5",
              "_type": "ODT",
              "_namespace": "Academy",
              "_name": "P3D60_48nits",
              "_major_version_number": "a1",
              "_minor_version_number": "0",
              "_patch_version_number": "3",
              "_source": "OCES",
              "_target": "P3D60_48nits"
            },
            "_user_name": "ACES 1.0 Output - P3-D60",
            "_description": "Output Device Transform - P3D60\n\n\nSummary :\nThis transform is intended for mapping OCES onto a P3 digital cinema\nprojector that is calibrated to a D60 white point at 48 cd/m^2. The assumed\nobserver adapted white is D60, and the viewing environment is that of a dark\ntheater.\n\nDevice Primaries :\nCIE 1931 chromaticities:  x         y         Y\nRed:          0.68      0.32\nGreen:        0.265     0.69\nBlue:         0.15      0.06\nWhite:        0.32168   0.33767   48 cd/m^2\n\nDisplay EOTF :\nGamma: 2.6\n\nAssumed observer adapted white point:\nCIE 1931 chromaticities:    x            y\n0.32168      0.33767\n\nViewing Environment:\nEnvironment specified in SMPTE RP 431-2-2007",
            "_family": "output_transform",
            "_genus": "p3"
          }
        },
        {
          "ordering": "460",
          "aces_transform_id": "urn:ampas:aces:transformId:v1.5:ODT.Academy.P3D65_48nits.a1.1.0",
          "builtin_transform_style": "ACES-OUTPUT - ACES2065-1_to_CIE-XYZ-D65 - SDR-CINEMA_1.0",
          "linked_display_colorspace_style": "DISPLAY - CIE-XYZ-D65_to_G2.6-P3-D65",
          "interface": "ViewTransform",
          "encoding": "sdr-video",
          "categories": "file-io",
          "ctl_transform": {
            "py/object": "opencolorio_config_aces.config.reference.discover.classify.CTLTransform",
            "_path": "/home/aswf/OpenColorIO-Config-ACES/opencolorio_config_aces/config/reference/aces-dev/transforms/ctl/odt/p3/ODT.Academy.P3D65_48nits.ctl",
            "_code": "\n// <ACEStransformID>urn:ampas:aces:transformId:v1.5:ODT.Academy.P3D65_48nits.a1.1.0</ACEStransformID>\n// <ACESuserName>ACES 1.0 Output - P3D65</ACESuserName>\n\n// \n// Output Device Transform - P3D65\n//\n\n//\n// Summary :\n//  This transform is intended for mapping OCES onto a projector with P3\n//  primaries that has been set up such that equal neutral RGB code values\n//  sent to the projector produce a chromaticity equal to that of D65\n//  and that the peak neutral luminance is 48 nits. The assumed observer \n//  adapted white is D65, and the viewing environment is a dark surround. \n//\n//  A possible use case for this transform would be mastering for a theatrical\n//  release with a creative white point of D65.\n//\n// Device Primaries : \n//  CIE 1931 chromaticities:  x         y         Y\n//              Red:          0.68      0.32\n//              Green:        0.265     0.69\n//              Blue:         0.15      0.06\n//              White:        0.3127    0.329     48 cd/m^2\n//\n// Display EOTF :\n//  Gamma: 2.6\n//\n// Assumed observer adapted white point:\n//         CIE 1931 chromaticities:    x            y\n//                                     0.3127       0.329\n//\n// Viewing Environment:\n//  Environment specified in SMPTE RP 431-2-2007\n//\n\n\nimport \"ACESlib.Utilities\";\nimport \"ACESlib.Transform_Common\";\nimport \"ACESlib.ODT_Common\";\nimport \"ACESlib.Tonescales\";\n\n\n\n/* --- ODT Parameters --- */\nconst Chromaticities DISPLAY_PRI = P3D65_PRI;\nconst float XYZ_2_DISPLAY_PRI_MAT[4][4] = XYZtoRGB(DISPLAY_PRI,1.0);\n\nconst float DISPGAMMA = 2.6;\n\n\nvoid main \n(\n    input varying float rIn, \n    input varying float gIn, \n    input varying float bIn, \n    input varying float aIn,\n    output varying float rOut,\n    output varying float gOut,\n    output varying float bOut,\n    output varying float aOut\n)\n{\n    float oces[3] = { rIn, gIn, bIn};\n\n    // OCES to RGB rendering space\n    float rgbPre[3] = mult_f3_f44( oces, AP0_2_AP1_MAT);\n\n    // Apply the tonescale independently in rendering-space RGB\n    float rgbPost[3];\n    rgbPost[0] = segmented_spline_c9_fwd( rgbPre[0]);\n    rgbPost[1] = segmented_spline_c9_fwd( rgbPre[1]);\n    rgbPost[2] = segmented_spline_c9_fwd( rgbPre[2]);\n\n  \t// Scale luminance to linear code value\n    float linearCV[3];\n    linearCV[0] = Y_2_linCV( rgbPost[0], CINEMA_WHITE, CINEMA_BLACK);\n    linearCV[1] = Y_2_linCV( rgbPost[1], CINEMA_WHITE, CINEMA_BLACK);\n    linearCV[2] = Y_2_linCV( rgbPost[2], CINEMA_WHITE, CINEMA_BLACK);\n\n    // Convert to display primary encoding\n    // Rendering space RGB to XYZ\n    float XYZ[3] = mult_f3_f44( linearCV, AP1_2_XYZ_MAT);\n\n    // Apply CAT from ACES white point to assumed observer adapted white point\n    XYZ = mult_f3_f33( XYZ, D60_2_D65_CAT);\n\n    // CIE XYZ to display primaries\n    linearCV = mult_f3_f44( XYZ, XYZ_2_DISPLAY_PRI_MAT);\n\n    // Handle out-of-gamut values\n    // Clip values < 0 or > 1 (i.e. projecting outside the display primaries)\n    linearCV = clamp_f3( linearCV, 0., 1.);\n  \n    // Encode linear code values with transfer function\n    float outputCV[3] = pow_f3( linearCV, 1./ DISPGAMMA);\n  \n    rOut = outputCV[0];\n    gOut = outputCV[1];\n    bOut = outputCV[2];\n    aOut = aIn;\n}\n",
            "_aces_transform_id": {
              "py/object": "opencolorio_config_aces.config.reference.discover.classify.ACESTransformID",
              "_aces_transform_id": "urn:ampas:aces:transformId:v1.5:ODT.Academy.P3D65_48nits.a1.1.0",
              "_urn": "urn:ampas:aces:transformId:v1.5",
              "_type": "ODT",
              "_namespace": "Academy",
              "_name": "P3D65_48nits",
              "_major_version_number": "a1",
              "_minor_version_number": "1",
              "_patch_version_number": "0",
              "_source": "OCES",
              "_target": "P3D65_48nits"
            },
            "_user_name": "ACES 1.0 Output - P3D65",
            "_description": "Output Device Transform - P3D65\n\n\nSummary :\nThis transform is intended for mapping OCES onto a projector with P3\nprimaries that has been set up such that equal neutral RGB code values\nsent to the projector produce a chromaticity equal to that of D65\nand that the peak neutral luminance is 48 nits. The assumed observer\nadapted white is D65, and the viewing environment is a dark surround.\n\nA possible use case for this transform would be mastering for a theatrical\nrelease with a creative white point of D65.\n\nDevice Primaries :\nCIE 1931 chromaticities:  x         y         Y\nRed:          0.68      0.32\nGreen:        0.265     0.69\nBlue:         0.15      0.06\nWhite:        0.3127    0.329     48 cd/m^2\n\nDisplay EOTF :\nGamma: 2.6\n\nAssumed observer adapted white point:\nCIE 1931 chromaticities:    x            y\n0.3127       0.329\n\nViewing Environment:\nEnvironment specified in SMPTE RP 431-2-2007",
            "_family": "output_transform",
            "_genus": "p3"
          }
        }
      ]
    },
    {
      "name": "Output - SDR Cinema (D60 sim on D65) - ACES 1.1",
      "from_reference": {
        "transform_type": "BuiltinTransform",
        "style": "ACES-OUTPUT - ACES2065-1_to_CIE-XYZ-D65 - SDR-CINEMA-D60sim-D65_1.1"
      },
      "description": "Component of ACES Output Transforms for SDR D65 cinema simulating D60 white\n\nACEStransformID: urn:ampas:aces:transformId:v1.5:ODT.Academy.P3D65_D60sim_48nits.a1.1.0",
      "transforms_data": [
        {
          "ordering": "460",
          "aces_transform_id": "urn:ampas:aces:transformId:v1.5:ODT.Academy.P3D65_D60sim_48nits.a1.1.0",
          "builtin_transform_style": "ACES-OUTPUT - ACES2065-1_to_CIE-XYZ-D65 - SDR-CINEMA-D60sim-D65_1.1",
          "linked_display_colorspace_style": "DISPLAY - CIE-XYZ-D65_to_G2.6-P3-D65",
          "interface": "ViewTransform",
          "encoding": "sdr-video",
          "categories": "file-io",
          "ctl_transform": {
            "py/object": "opencolorio_config_aces.config.reference.discover.classify.CTLTransform",
            "_path": "/home/aswf/OpenColorIO-Config-ACES/opencolorio_config_aces/config/reference/aces-dev/transforms/ctl/odt/p3/ODT.Academy.P3D65_D60sim_48nits.ctl",
            "_code": "\n// <ACEStransformID>urn:ampas:aces:transformId:v1.5:ODT.Academy.P3D65_D60sim_48nits.a1.1.0</ACEStransformID>\n// <ACESuserName>ACES 1.0 Output - P3D65 (D60 simulation)</ACESuserName>\n\n// \n// Output Device Transform - P3D65 (D60 simulation)\n//\n\n//\n// Summary :\n//  This transform is intended for mapping OCES onto a projector with P3\n//  primaries that has been set up such that equal neutral RGB code values sent\n//  to the projector produce a chromaticity equal to that of D65 and that the \n//  peak neutral luminance is 48 nits. The assumed observer adapted white is \n//  D60, and the viewing environment is a dark surround.\n//\n// Device Primaries : \n//  CIE 1931 chromaticities:  x         y         Y\n//              Red:          0.68      0.32\n//              Green:        0.265     0.69\n//              Blue:         0.15      0.06\n//              White:        0.3127    0.329     48 cd/m^2\n//\n// Display EOTF :\n//  Gamma: 2.6\n//\n// Assumed observer adapted white point:\n//         CIE 1931 chromaticities:    x            y\n//                                     0.32168      0.33767\n//\n// Viewing Environment:\n//  Environment specified in SMPTE RP 431-2-2007\n//\n\n\nimport \"ACESlib.Utilities\";\nimport \"ACESlib.Transform_Common\";\nimport \"ACESlib.ODT_Common\";\nimport \"ACESlib.Tonescales\";\n\n\n\n/* --- ODT Parameters --- */\nconst Chromaticities DISPLAY_PRI = P3D65_PRI;\nconst float XYZ_2_DISPLAY_PRI_MAT[4][4] = XYZtoRGB(DISPLAY_PRI,1.0);\n\nconst float DISPGAMMA = 2.6;\n\n// Rolloff white settings for P3D65 (D60 simulation)\nconst float SCALE = 0.964;\n\n\nvoid main \n(\n    input varying float rIn, \n    input varying float gIn, \n    input varying float bIn, \n    input varying float aIn,\n    output varying float rOut,\n    output varying float gOut,\n    output varying float bOut,\n    output varying float aOut\n)\n{\n    float oces[3] = { rIn, gIn, bIn};\n\n    // OCES to RGB rendering space\n    float rgbPre[3] = mult_f3_f44( oces, AP0_2_AP1_MAT);\n\n    // Apply the tonescale independently in rendering-space RGB\n    float rgbPost[3];\n    rgbPost[0] = segmented_spline_c9_fwd( rgbPre[0]);\n    rgbPost[1] = segmented_spline_c9_fwd( rgbPre[1]);\n    rgbPost[2] = segmented_spline_c9_fwd( rgbPre[2]);\n\n  \t// Scale luminance to linear code value\n    float linearCV[3];\n    linearCV[0] = Y_2_linCV( rgbPost[0], CINEMA_WHITE, CINEMA_BLACK);\n    linearCV[1] = Y_2_linCV( rgbPost[1], CINEMA_WHITE, CINEMA_BLACK);\n    linearCV[2] = Y_2_linCV( rgbPost[2], CINEMA_WHITE, CINEMA_BLACK);\n\n    // --- Compensate for different white point being darker  --- //\n    // This adjustment corrects for an issue that exists in ODTs where the \n    // device is calibrated to a white chromaticity other than that of the \n    // adapted white.\n    // In order to produce D60 on a device calibrated to D65 white point (i.e. \n    // equal display code values yield CIE x,y chromaticities of 0.3127, 0.329) \n    // the red channel is higher than green and blue to compensate for the \n    // \"bluer\" D65 white. This is the intended behavior but it means that \n    // without compensation, as highlights increase, the red channel will hit \n    // the device maximum first and clip, resulting in a chromaticity shift as \n    // the green and blue channels continue to increase.\n    // To avoid this clipping behavior, a slight scale factor is applied to \n    // allow the ODTs to simulate D60 within the D65 calibration white point. \n\n    // Scale and clamp white to avoid casted highlights due to D60 simulation\n    linearCV[0] = min( linearCV[0], 1.0) * SCALE;\n    linearCV[1] = min( linearCV[1], 1.0) * SCALE;\n    linearCV[2] = min( linearCV[2], 1.0) * SCALE;\n\n    // Convert to display primary encoding\n    // Rendering space RGB to XYZ\n    float XYZ[3] = mult_f3_f44( linearCV, AP1_2_XYZ_MAT);\n\n    // CIE XYZ to display primaries\n    linearCV = mult_f3_f44( XYZ, XYZ_2_DISPLAY_PRI_MAT);\n\n    // Handle out-of-gamut values\n    // Clip values < 0 or > 1 (i.e. projecting outside the display primaries)\n    linearCV = clamp_f3( linearCV, 0., 1.);\n  \n    // Encode linear code values with transfer function\n    float outputCV[3] = pow_f3( linearCV, 1./ DISPGAMMA);\n  \n    rOut = outputCV[0];\n    gOut = outputCV[1];\n    bOut = outputCV[2];\n    aOut = aIn;\n}\n",
            "_aces_transform_id": {
              "py/object": "opencolorio_config_aces.config.reference.discover.classify.ACESTransformID",
              "_aces_transform_id": "urn:ampas:aces:transformId:v1.5:ODT.Academy.P3D65_D60sim_48nits.a1.1.0",
              "_urn": "urn:ampas:aces:transformId:v1.5",
              "_type": "ODT",
              "_namespace": "Academy",
              "_name": "P3D65_D60sim_48nits",
              "_major_version_number": "a1",
              "_minor_version_number": "1",
              "_patch_version_number": "0",
              "_source": "OCES",
              "_target": "P3D65_D60sim_48nits"
            },
            "_user_name": "ACES 1.0 Output - P3D65 (D60 simulation)",
            "_description": "Output Device Transform - P3D65 (D60 simulation)\n\n\nSummary :\nThis transform is intended for mapping OCES onto a projector with P3\nprimaries that has been set up such that equal neutral RGB code values sent\nto the projector produce a chromaticity equal to that of D65 and that the\npeak neutral luminance is 48 nits. The assumed observer adapted white is\nD60, and the viewing environment is a dark surround.\n\nDevice Primaries :\nCIE 1931 chromaticities:  x         y         Y\nRed:          0.68      0.32\nGreen:        0.265     0.69\nBlue:         0.15      0.06\nWhite:        0.3127    0.329     48 cd/m^2\n\nDisplay EOTF :\nGamma: 2.6\n\nAssumed observer adapted white point:\nCIE 1931 chromaticities:    x            y\n0.32168      0.33767\n\nViewing Environment:\nEnvironment specified in SMPTE RP 431-2-2007",
            "_family": "output_transform",
            "_genus": "p3"
          }
        }
      ]
    },
    {
      "name": "Output - SDR Cinema (Rec.709 lim) - ACES 1.1",
      "from_reference": {
        "transform_type": "BuiltinTransform",
        "style": "ACES-OUTPUT - ACES2065-1_to_CIE-XYZ-D65 - SDR-CINEMA-REC709lim_1.1"
      },
      "description": "Component of ACES Output Transforms for SDR cinema\n\nACEStransformID: urn:ampas:aces:transformId:v1.5:ODT.Academy.P3D65_Rec709limited_48nits.a1.1.0",
      "transforms_data": [
        {
          "ordering": "460",
          "aces_transform_id": "urn:ampas:aces:transformId:v1.5:ODT.Academy.P3D65_Rec709limited_48nits.a1.1.0",
          "builtin_transform_style": "ACES-OUTPUT - ACES2065-1_to_CIE-XYZ-D65 - SDR-CINEMA-REC709lim_1.1",
          "linked_display_colorspace_style": "DISPLAY - CIE-XYZ-D65_to_G2.6-P3-D65",
          "interface": "ViewTransform",
          "encoding": "sdr-video",
          "categories": "file-io",
          "ctl_transform": {
            "py/object": "opencolorio_config_aces.config.reference.discover.classify.CTLTransform",
            "_path": "/home/aswf/OpenColorIO-Config-ACES/opencolorio_config_aces/config/reference/aces-dev/transforms/ctl/odt/p3/ODT.Academy.P3D65_Rec709limited_48nits.ctl",
            "_code": "\n// <ACEStransformID>urn:ampas:aces:transformId:v1.5:ODT.Academy.P3D65_Rec709limited_48nits.a1.1.0</ACEStransformID>\n// <ACESuserName>ACES 1.0 Output - P3D65 (Rec.709 Limited)</ACESuserName>\n\n// \n// Output Device Transform - P3D65 (Rec.709 Limited)\n//\n\n//\n// Summary :\n//  This transform is intended for mapping OCES onto a projector with P3\n//  primaries that has been set up such that equal neutral RGB code values\n//  sent to the projector produce a chromaticity equal to that of D65\n//  and that the peak neutral luminance is 48 nits. The assumed observer \n//  adapted white is D65, and the viewing environment is a dark surround.\n// \n//  Color values are limited to the Rec.709 gamut for applications where a\n//  match is expected between a digital cinema projected image and a Rec.709\n//  reference monitor.\n//\n//  A possible use case for this transform would be mastering for a theatrical\n//  release with a creative white point of D65 and ultimate delivery in Rec.709.\n//\n// Device Primaries : \n//  CIE 1931 chromaticities:  x         y         Y\n//              Red:          0.68      0.32\n//              Green:        0.265     0.69\n//              Blue:         0.15      0.06\n//              White:        0.3127    0.329     48 cd/m^2\n//\n// Display EOTF :\n//  Gamma: 2.6\n//\n// Assumed observer adapted white point:\n//         CIE 1931 chromaticities:    x            y\n//                                     0.3127       0.329\n//\n// Viewing Environment:\n//  Environment specified in SMPTE RP 431-2-2007\n//\n\n\nimport \"ACESlib.Utilities\";\nimport \"ACESlib.Transform_Common\";\nimport \"ACESlib.ODT_Common\";\nimport \"ACESlib.Tonescales\";\nimport \"ACESlib.OutputTransforms\";\n\n\n\n/* --- ODT Parameters --- */\nconst Chromaticities DISPLAY_PRI = P3D65_PRI;\nconst float XYZ_2_DISPLAY_PRI_MAT[4][4] = XYZtoRGB(DISPLAY_PRI,1.0);\n\nconst Chromaticities LIMITING_PRI = REC709_PRI;\n\nconst float DISPGAMMA = 2.6;\n\n\nvoid main \n(\n    input varying float rIn, \n    input varying float gIn, \n    input varying float bIn, \n    input varying float aIn,\n    output varying float rOut,\n    output varying float gOut,\n    output varying float bOut,\n    output varying float aOut\n)\n{\n    float oces[3] = { rIn, gIn, bIn};\n\n    // OCES to RGB rendering space\n    float rgbPre[3] = mult_f3_f44( oces, AP0_2_AP1_MAT);\n\n    // Apply the tonescale independently in rendering-space RGB\n    float rgbPost[3];\n    rgbPost[0] = segmented_spline_c9_fwd( rgbPre[0]);\n    rgbPost[1] = segmented_spline_c9_fwd( rgbPre[1]);\n    rgbPost[2] = segmented_spline_c9_fwd( rgbPre[2]);\n\n  \t// Scale luminance to linear code value\n    float linearCV[3];\n    linearCV[0] = Y_2_linCV( rgbPost[0], CINEMA_WHITE, CINEMA_BLACK);\n    linearCV[1] = Y_2_linCV( rgbPost[1], CINEMA_WHITE, CINEMA_BLACK);\n    linearCV[2] = Y_2_linCV( rgbPost[2], CINEMA_WHITE, CINEMA_BLACK);\n\n    // Convert to display primary encoding\n    // Rendering space RGB to XYZ\n    float XYZ[3] = mult_f3_f44( linearCV, AP1_2_XYZ_MAT);\n\n    // Apply CAT from ACES white point to assumed observer adapted white point\n    XYZ = mult_f3_f33( XYZ, D60_2_D65_CAT);\n\n    // Constrain to limiting primaries\n    XYZ = limit_to_primaries( XYZ, LIMITING_PRI);\n    \n    // CIE XYZ to display primaries\n    linearCV = mult_f3_f44( XYZ, XYZ_2_DISPLAY_PRI_MAT);\n\n    // Handle out-of-gamut values\n    // Clip values < 0 or > 1 (i.e. projecting outside the display primaries)\n    linearCV = clamp_f3( linearCV, 0., 1.);\n  \n    // Encode linear code values with transfer function\n    float outputCV[3] = pow_f3( linearCV, 1./ DISPGAMMA);\n  \n    rOut = outputCV[0];\n    gOut = outputCV[1];\n    bOut = outputCV[2];\n    aOut = aIn;\n}\n",
            "_aces_transform_id": {
              "py/object": "opencolorio_config_aces.config.reference.discover.classify.ACESTransformID",
              "_aces_transform_id": "urn:ampas:aces:transformId:v1.5:ODT.Academy.P3D65_Rec709limited_48nits.a1.1.0",
              "_urn": "urn:ampas:aces:transformId:v1.5",
              "_type": "ODT",
              "_namespace": "Academy",
              "_name": "P3D65_Rec709limited_48nits",
              "_major_version_number": "a1",
              "_minor_version_number": "1",
              "_patch_version_number": "0",
              "_source": "OCES",
              "_target": "P3D65_Rec709limited_48nits"
            },
            "_user_name": "ACES 1.0 Output - P3D65 (Rec.709 Limited)",
            "_description": "Output Device Transform - P3D65 (Rec.709 Limited)\n\n\nSummary :\nThis transform is intended for mapping OCES onto a projector with P3\nprimaries that has been set up such that equal neutral RGB code values\nsent to the projector produce a chromaticity equal to that of D65\nand that the peak neutral luminance is 48 nits. The assumed observer\nadapted white is D65, and the viewing environment is a dark surround.\n\nColor values are limited to the Rec.709 gamut for applications where a\nmatch is expected between a digital cinema projected image and a Rec.709\nreference monitor.\n\nA possible use case for this transform would be mastering for a theatrical\nrelease with a creative white point of D65 and ultimate delivery in Rec.709.\n\nDevice Primaries :\nCIE 1931 chromaticities:  x         y         Y\nRed:          0.68      0.32\nGreen:        0.265     0.69\nBlue:         0.15      0.06\nWhite:        0.3127    0.329     48 cd/m^2\n\nDisplay EOTF :\nGamma: 2.6\n\nAssumed observer adapted white point:\nCIE 1931 chromaticities:    x            y\n0.3127       0.329\n\nViewing Environment:\nEnvironment specified in SMPTE RP 431-2-2007",
            "_family": "output_transform",
            "_genus": "p3"
          }
        }
      ]
    },
    {
      "name": "Output - SDR Cinema (D60 sim on DCI) - ACES 1.0",
      "from_reference": {
        "transform_type": "BuiltinTransform",
        "style": "ACES-OUTPUT - ACES2065-1_to_CIE-XYZ-D65 - SDR-CINEMA-D60sim-DCI_1.0"
      },
      "description": "Component of ACES Output Transforms for SDR DCI cinema simulating D60 white\n\nACEStransformID: urn:ampas:aces:transformId:v1.5:ODT.Academy.P3DCI_48nits.a1.0.3",
      "transforms_data": [
        {
          "ordering": "460",
          "aces_transform_id": "urn:ampas:aces:transformId:v1.5:ODT.Academy.P3DCI_48nits.a1.0.3",
          "builtin_transform_style": "ACES-OUTPUT - ACES2065-1_to_CIE-XYZ-D65 - SDR-CINEMA-D60sim-DCI_1.0",
          "linked_display_colorspace_style": "DISPLAY - CIE-XYZ-D65_to_G2.6-P3-DCI-BFD",
          "interface": "ViewTransform",
          "encoding": "sdr-video",
          "categories": "file-io",
          "ctl_transform": {
            "py/object": "opencolorio_config_aces.config.reference.discover.classify.CTLTransform",
            "_path": "/home/aswf/OpenColorIO-Config-ACES/opencolorio_config_aces/config/reference/aces-dev/transforms/ctl/odt/p3/ODT.Academy.P3DCI_D60sim_48nits.ctl",
            "_code": "\n// <ACEStransformID>urn:ampas:aces:transformId:v1.5:ODT.Academy.P3DCI_48nits.a1.0.3</ACEStransformID>\n// <ACESuserName>ACES 1.0 Output - P3-DCI (D60 simulation)</ACESuserName>\n\n// \n// Output Device Transform - P3DCI (D60 simulation)\n//\n\n//\n// Summary :\n//  This transform is intended for mapping OCES onto a P3 digital cinema \n//  projector that is calibrated to a DCI white point at 48 cd/m^2. The assumed \n//  observer adapted white is D60, and the viewing environment is that of a dark\n//  theater. \n//\n// Device Primaries : \n//  CIE 1931 chromaticities:  x         y         Y\n//              Red:          0.68      0.32\n//              Green:        0.265     0.69\n//              Blue:         0.15      0.06\n//              White:        0.314     0.351     48 cd/m^2\n//\n// Display EOTF :\n//  Gamma: 2.6\n//\n// Assumed observer adapted white point:\n//         CIE 1931 chromaticities:    x            y\n//                                     0.32168      0.33767\n//\n// Viewing Environment:\n//  Environment specified in SMPTE RP 431-2-2007\n//\n\n\n\nimport \"ACESlib.Utilities\";\nimport \"ACESlib.Transform_Common\";\nimport \"ACESlib.ODT_Common\";\nimport \"ACESlib.Tonescales\";\n\n\n\n/* --- ODT Parameters --- */\nconst Chromaticities DISPLAY_PRI = P3DCI_PRI;\nconst float XYZ_2_DISPLAY_PRI_MAT[4][4] = XYZtoRGB( DISPLAY_PRI, 1.0);\n\nconst float DISPGAMMA = 2.6; \n\n// Rolloff white settings for P3DCI (D60 simulation)\nconst float NEW_WHT = 0.918;\nconst float ROLL_WIDTH = 0.5;    \nconst float SCALE = 0.96;\n\n\n\nvoid main \n(\n    input varying float rIn, \n    input varying float gIn, \n    input varying float bIn, \n    input varying float aIn,\n    output varying float rOut,\n    output varying float gOut,\n    output varying float bOut,\n    output varying float aOut\n)\n{\n    float oces[3] = { rIn, gIn, bIn};\n\n    // OCES to RGB rendering space\n    float rgbPre[3] = mult_f3_f44( oces, AP0_2_AP1_MAT);\n\n    // Apply the tonescale independently in rendering-space RGB\n    float rgbPost[3];\n    rgbPost[0] = segmented_spline_c9_fwd( rgbPre[0]);\n    rgbPost[1] = segmented_spline_c9_fwd( rgbPre[1]);\n    rgbPost[2] = segmented_spline_c9_fwd( rgbPre[2]);\n\n    // Scale luminance to linear code value\n    float linearCV[3];\n    linearCV[0] = Y_2_linCV( rgbPost[0], CINEMA_WHITE, CINEMA_BLACK);\n    linearCV[1] = Y_2_linCV( rgbPost[1], CINEMA_WHITE, CINEMA_BLACK);\n    linearCV[2] = Y_2_linCV( rgbPost[2], CINEMA_WHITE, CINEMA_BLACK);\n\n    // --- Compensate for different white point being darker  --- //\n    // This adjustment corrects for an issue that exists in ODTs where the \n    // device is calibrated to a white chromaticity other than that of the \n    // adapted white.\n    // In order to produce D60 on a device calibrated to DCI white (i.e. \n    // equal display code values yield CIE x,y chromaticities of 0.314, 0.351) \n    // the red channel is higher than blue and green to compensate for the \n    // \"greener\" DCI white. This is the intended behavior but it means that \n    // without compensation, as highlights increase, the red channel will hit \n    // the device maximum first and clip, resulting in a chromaticity shift as \n    // the blue and green channels continue to increase.\n    // To avoid this clipping behavior, a slight scale factor is applied to \n    // allow the ODT to simulate D60 within the DCI calibration white point. \n    // However, the magnitude of the scale factor required was considered too \n    // large; therefore, the scale factor was reduced and the additional \n    // required compression was achieved via a reshaping of the highlight \n    // rolloff in conjunction with the scale. The shape of this rolloff was \n    // determined through subjective experiments and deemed to best reproduce \n    // the \"character\" of the highlights in the P3D60 ODT.\n\n    // Roll off highlights to avoid need for as much scaling\n    linearCV[0] = roll_white_fwd( linearCV[0], NEW_WHT, ROLL_WIDTH);\n    linearCV[1] = roll_white_fwd( linearCV[1], NEW_WHT, ROLL_WIDTH);\n    linearCV[2] = roll_white_fwd( linearCV[2], NEW_WHT, ROLL_WIDTH);\n\n    // Scale and clamp white to avoid casted highlights due to D60 simulation\n    linearCV[0] = min( linearCV[0], NEW_WHT) * SCALE;\n    linearCV[1] = min( linearCV[1], NEW_WHT) * SCALE;\n    linearCV[2] = min( linearCV[2], NEW_WHT) * SCALE;\n\n    // Convert to display primary encoding\n    // Rendering space RGB to XYZ\n    float XYZ[3] = mult_f3_f44( linearCV, AP1_2_XYZ_MAT);\n\n    // CIE XYZ to display primaries\n    linearCV = mult_f3_f44( XYZ, XYZ_2_DISPLAY_PRI_MAT);\n\n    // Handle out-of-gamut values\n    // Clip values < 0 or > 1 (i.e. projecting outside the display primaries)\n    linearCV = clamp_f3( linearCV, 0., 1.);\n\n    // Encode linear code values with transfer function\n    float outputCV[3] = pow_f3( linearCV, 1./ DISPGAMMA);\n\n    rOut = outputCV[0];\n    gOut = outputCV[1];\n    bOut = outputCV[2];\n    aOut = aIn;\n}",
            "_aces_transform_id": {
              "py/object": "opencolorio_config_aces.config.reference.discover.classify.ACESTransformID",
              "_aces_transform_id": "urn:ampas:aces:transformId:v1.5:ODT.Academy.P3DCI_48nits.a1.0.3",
              "_urn": "urn:ampas:aces:transformId:v1.5",
              "_type": "ODT",
              "_namespace": "Academy",
              "_name": "P3DCI_48nits",
              "_major_version_number": "a1",
              "_minor_version_number": "0",
              "_patch_version_number": "3",
              "_source": "OCES",
              "_target": "P3DCI_48nits"
            },
            "_user_name": "ACES 1.0 Output - P3-DCI (D60 simulation)",
            "_description": "Output Device Transform - P3DCI (D60 simulation)\n\n\nSummary :\nThis transform is intended for mapping OCES onto a P3 digital cinema\nprojector that is calibrated to a DCI white point at 48 cd/m^2. The assumed\nobserver adapted white is D60, and the viewing environment is that of a dark\ntheater.\n\nDevice Primaries :\nCIE 1931 chromaticities:  x         y         Y\nRed:          0.68      0.32\nGreen:        0.265     0.69\nBlue:         0.15      0.06\nWhite:        0.314     0.351     48 cd/m^2\n\nDisplay EOTF :\nGamma: 2.6\n\nAssumed observer adapted white point:\nCIE 1931 chromaticities:    x            y\n0.32168      0.33767\n\nViewing Environment:\nEnvironment specified in SMPTE RP 431-2-2007",
            "_family": "output_transform",
            "_genus": "p3"
          }
        }
      ]
    },
    {
      "name": "Output - SDR Cinema (D65 sim on DCI) - ACES 1.1",
      "from_reference": {
        "transform_type": "BuiltinTransform",
        "style": "ACES-OUTPUT - ACES2065-1_to_CIE-XYZ-D65 - SDR-CINEMA-D65sim-DCI_1.1"
      },
      "description": "Component of ACES Output Transforms for SDR DCI cinema simulating D65 white\n\nACEStransformID: urn:ampas:aces:transformId:v1.5:ODT.Academy.P3DCI_D65sim_48nits.a1.1.0",
      "transforms_data": [
        {
          "ordering": "460",
          "aces_transform_id": "urn:ampas:aces:transformId:v1.5:ODT.Academy.P3DCI_D65sim_48nits.a1.1.0",
          "builtin_transform_style": "ACES-OUTPUT - ACES2065-1_to_CIE-XYZ-D65 - SDR-CINEMA-D65sim-DCI_1.1",
          "linked_display_colorspace_style": "DISPLAY - CIE-XYZ-D65_to_G2.6-P3-DCI-BFD",
          "interface": "ViewTransform",
          "encoding": "sdr-video",
          "categories": "file-io",
          "ctl_transform": {
            "py/object": "opencolorio_config_aces.config.reference.discover.classify.CTLTransform",
            "_path": "/home/aswf/OpenColorIO-Config-ACES/opencolorio_config_aces/config/reference/aces-dev/transforms/ctl/odt/p3/ODT.Academy.P3DCI_D65sim_48nits.ctl",
            "_code": "\n// <ACEStransformID>urn:ampas:aces:transformId:v1.5:ODT.Academy.P3DCI_D65sim_48nits.a1.1.0</ACEStransformID>\n// <ACESuserName>ACES 1.0 Output - P3-DCI (D65 simulation)</ACESuserName>\n\n// \n// Output Device Transform - P3DCI (D65 Simulation)\n//\n\n//\n// Summary :\n//  This transform is intended for mapping OCES onto a P3 digital cinema \n//  projector that is calibrated to a DCI white point at 48 cd/m^2. The assumed \n//  observer adapted white is D65, and the viewing environment is that of a dark\n//  theater. \n//\n// Device Primaries : \n//  CIE 1931 chromaticities:  x         y         Y\n//              Red:          0.68      0.32\n//              Green:        0.265     0.69\n//              Blue:         0.15      0.06\n//              White:        0.314     0.351     48 cd/m^2\n//\n// Display EOTF :\n//  Gamma: 2.6\n//\n// Assumed observer adapted white point:\n//         CIE 1931 chromaticities:    x            y\n//                                     0.3127       0.329\n//\n// Viewing Environment:\n//  Environment specified in SMPTE RP 431-2-2007\n//\n\n\n\nimport \"ACESlib.Utilities\";\nimport \"ACESlib.Transform_Common\";\nimport \"ACESlib.ODT_Common\";\nimport \"ACESlib.Tonescales\";\n\n\n\n/* --- ODT Parameters --- */\nconst Chromaticities DISPLAY_PRI = P3DCI_PRI;\nconst float XYZ_2_DISPLAY_PRI_MAT[4][4] = XYZtoRGB( DISPLAY_PRI, 1.0);\n\nconst float DISPGAMMA = 2.6; \n\n// Rolloff white settings for P3DCI (D65 simulation)\nconst float NEW_WHT = 0.908;\nconst float ROLL_WIDTH = 0.5;    \nconst float SCALE = 0.9575;\n\n\n\nvoid main \n(\n    input varying float rIn, \n    input varying float gIn, \n    input varying float bIn, \n    input varying float aIn,\n    output varying float rOut,\n    output varying float gOut,\n    output varying float bOut,\n    output varying float aOut\n)\n{\n    float oces[3] = { rIn, gIn, bIn};\n\n    // OCES to RGB rendering space\n    float rgbPre[3] = mult_f3_f44( oces, AP0_2_AP1_MAT);\n\n    // Apply the tonescale independently in rendering-space RGB\n    float rgbPost[3];\n    rgbPost[0] = segmented_spline_c9_fwd( rgbPre[0]);\n    rgbPost[1] = segmented_spline_c9_fwd( rgbPre[1]);\n    rgbPost[2] = segmented_spline_c9_fwd( rgbPre[2]);\n\n    // Scale luminance to linear code value\n    float linearCV[3];\n    linearCV[0] = Y_2_linCV( rgbPost[0], CINEMA_WHITE, CINEMA_BLACK);\n    linearCV[1] = Y_2_linCV( rgbPost[1], CINEMA_WHITE, CINEMA_BLACK);\n    linearCV[2] = Y_2_linCV( rgbPost[2], CINEMA_WHITE, CINEMA_BLACK);\n\n    // --- Compensate for different white point being darker  --- //\n    // This adjustment corrects for an issue that exists in ODTs where the \n    // device is calibrated to a white chromaticity other than that of the \n    // adapted white.\n    // In order to produce D65 on a device calibrated to DCI white (i.e. \n    // equal display code values yield CIE x,y chromaticities of 0.314, 0.351) \n    // the blue channel is higher than red and green to compensate for the \n    // \"greener\" DCI white. This is the intended behavior but it means that \n    // without compensation, as highlights increase, the blue channel will hit \n    // the device maximum first and clip, resulting in a chromaticity shift as \n    // the red and green channels continue to increase.\n    // To avoid this clipping behavior, a slight scale factor is applied to \n    // allow the ODT to simulate D65 within the DCI calibration white point. \n    // However, the magnitude of the scale factor required was considered too \n    // large; therefore, the scale factor was reduced and the additional \n    // required compression was achieved via a reshaping of the highlight \n    // rolloff in conjunction with the scale. The shape of this rolloff was \n    // determined through subjective experiments and deemed to best reproduce \n    // the \"character\" of the highlights in the P3D65 ODT.\n\n    // Roll off highlights to avoid need for as much scaling\n    linearCV[0] = roll_white_fwd( linearCV[0], NEW_WHT, ROLL_WIDTH);\n    linearCV[1] = roll_white_fwd( linearCV[1], NEW_WHT, ROLL_WIDTH);\n    linearCV[2] = roll_white_fwd( linearCV[2], NEW_WHT, ROLL_WIDTH);\n\n    // Scale and clamp white to avoid casted highlights due to D65 simulation\n    linearCV[0] = min( linearCV[0], NEW_WHT) * SCALE;\n    linearCV[1] = min( linearCV[1], NEW_WHT) * SCALE;\n    linearCV[2] = min( linearCV[2], NEW_WHT) * SCALE;\n\n    // Convert to display primary encoding\n    // Rendering space RGB to XYZ\n    float XYZ[3] = mult_f3_f44( linearCV, AP1_2_XYZ_MAT);\n\n    // Apply CAT from ACES white point to assumed observer adapted white point\n    XYZ = mult_f3_f33( XYZ, D60_2_D65_CAT);\n\n    // CIE XYZ to display primaries\n    linearCV = mult_f3_f44( XYZ, XYZ_2_DISPLAY_PRI_MAT);\n\n    // Handle out-of-gamut values\n    // Clip values < 0 or > 1 (i.e. projecting outside the display primaries)\n    linearCV = clamp_f3( linearCV, 0., 1.);\n\n    // Encode linear code values with transfer function\n    float outputCV[3] = pow_f3( linearCV, 1./ DISPGAMMA);\n\n    rOut = outputCV[0];\n    gOut = outputCV[1];\n    bOut = outputCV[2];\n    aOut = aIn;\n}",
            "_aces_transform_id": {
              "py/object": "opencolorio_config_aces.config.reference.discover.classify.ACESTransformID",
              "_aces_transform_id": "urn:ampas:aces:transformId:v1.5:ODT.Academy.P3DCI_D65sim_48nits.a1.1.0",
              "_urn": "urn:ampas:aces:transformId:v1.5",
              "_type": "ODT",
              "_namespace": "Academy",
              "_name": "P3DCI_D65sim_48nits",
              "_major_version_number": "a1",
              "_minor_version_number": "1",
              "_patch_version_number": "0",
              "_source": "OCES",
              "_target": "P3DCI_D65sim_48nits"
            },
            "_user_name": "ACES 1.0 Output - P3-DCI (D65 simulation)",
            "_description": "Output Device Transform - P3DCI (D65 Simulation)\n\n\nSummary :\nThis transform is intended for mapping OCES onto a P3 digital cinema\nprojector that is calibrated to a DCI white point at 48 cd/m^2. The assumed\nobserver adapted white is D65, and the viewing environment is that of a dark\ntheater.\n\nDevice Primaries :\nCIE 1931 chromaticities:  x         y         Y\nRed:          0.68      0.32\nGreen:        0.265     0.69\nBlue:         0.15      0.06\nWhite:        0.314     0.351     48 cd/m^2\n\nDisplay EOTF :\nGamma: 2.6\n\nAssumed observer adapted white point:\nCIE 1931 chromaticities:    x            y\n0.3127       0.329\n\nViewing Environment:\nEnvironment specified in SMPTE RP 431-2-2007",
            "_family": "output_transform",
            "_genus": "p3"
          }
        }
      ]
    },
    {
      "name": "Output - HDR Cinema (108 nits & P3 lim) - ACES 1.1",
      "from_reference": {
        "transform_type": "BuiltinTransform",
        "style": "ACES-OUTPUT - ACES2065-1_to_CIE-XYZ-D65 - HDR-CINEMA-108nit-7.2nit-P3lim_1.1"
      },
      "description": "Component of ACES Output Transforms for 108 nit HDR D65 cinema\n\nACEStransformID: urn:ampas:aces:transformId:v1.5:RRTODT.Academy.P3D65_108nits_7point2nits_ST2084.a1.1.0",
      "transforms_data": [
        {
          "ordering": "470",
          "aces_transform_id": "urn:ampas:aces:transformId:v1.5:RRTODT.Academy.P3D65_108nits_7point2nits_ST2084.a1.1.0",
          "builtin_transform_style": "ACES-OUTPUT - ACES2065-1_to_CIE-XYZ-D65 - HDR-CINEMA-108nit-7.2nit-P3lim_1.1",
          "linked_display_colorspace_style": "DISPLAY - CIE-XYZ-D65_to_ST2084-P3-D65",
          "interface": "ViewTransform",
          "encoding": "hdr-video",
          "categories": "file-io",
          "ctl_transform": {
            "py/object": "opencolorio_config_aces.config.reference.discover.classify.CTLTransform",
            "_path": "/home/aswf/OpenColorIO-Config-ACES/opencolorio_config_aces/config/reference/aces-dev/transforms/ctl/outputTransform/p3/RRTODT.Academy.P3D65_108nits_7.2nits_ST2084.ctl",
            "_code": "\n// <ACEStransformID>urn:ampas:aces:transformId:v1.5:RRTODT.Academy.P3D65_108nits_7point2nits_ST2084.a1.1.0</ACEStransformID>\n// <ACESuserName>ACES 1.0 Output - P3D65 ST2084 (108 nits)</ACESuserName>\n\n// \n// Output Transform - P3D65 (108 cd/m^2)\n//\n\n//\n// Summary :\n//  This transform maps ACES onto a P3D65 ST.2084 HDR display calibrated \n//  to a D65 white point at 108 cd/m^2. The assumed observer adapted white is \n//  D65, and the viewing environment is that of a dark surround. Mid-gray\n//  luminance is targeted at 7.2 cd/m^2.\n//\n//  A use case for this transform would be mastering for a theatrical release\n//  in Dolby Cinema.\n//\n// Device Primaries : \n//  Primaries are those specified in Rec. ITU-R BT.2020\n//  CIE 1931 chromaticities:  x         y         Y\n//              Red:          0.68      0.32\n//              Green:        0.265     0.69\n//              Blue:         0.15      0.06\n//              White:        0.3127    0.329     108 cd/m^2\n//              18% Gray:     0.3127    0.329     7.2 cd/m^2\n//\n// Display EOTF :\n//  The reference electro-optical transfer function specified in SMPTE ST \n//  2084-2014. This transform makes no attempt to address the Annex functions \n//  which address integer quantization.\n//\n// Assumed observer adapted white point:\n//         CIE 1931 chromaticities:    x            y\n//                                     0.3127       0.329\n//\n// Viewing Environment:\n//  Environment specified in SMPTE RP 431-2-2007\n//\n\n\n\nimport \"ACESlib.Utilities\";\nimport \"ACESlib.OutputTransforms\";\n\n\n\nconst float Y_MIN = 0.0001;                     // black luminance (cd/m^2)\nconst float Y_MID = 7.2;                        // mid-point luminance (cd/m^2)\nconst float Y_MAX = 108.0;                      // peak white luminance (cd/m^2)\n\nconst Chromaticities DISPLAY_PRI = P3D65_PRI;   // encoding primaries (device setup)\nconst Chromaticities LIMITING_PRI = P3D65_PRI;  // limiting primaries\n\nconst int EOTF = 0;                             // 0: ST-2084 (PQ)\n                                                // 1: BT.1886 (Rec.709/2020 settings) \n                                                // 2: sRGB (mon_curve w/ presets)\n                                                // 3: gamma 2.6\n                                                // 4: linear (no EOTF)\n                                                // 5: HLG\n\nconst int SURROUND = 0;                         // 0: dark ( NOTE: this is the only active setting! )\n                                                // 1: dim ( *inactive* - selecting this will have no effect )\n                                                // 2: normal ( *inactive* - selecting this will have no effect )\n\nconst bool STRETCH_BLACK = true;                // stretch black luminance to a PQ code value of 0\nconst bool D60_SIM = false;                       \nconst bool LEGAL_RANGE = false;\n\n\nvoid main\n(\n\tinput varying float rIn,\n\tinput varying float gIn,\n\tinput varying float bIn,\n\tinput varying float aIn,\n\toutput varying float rOut,\n\toutput varying float gOut,\n\toutput varying float bOut,\n\toutput varying float aOut\n)\n{\n    float aces[3] = {rIn, gIn, bIn};\n\n    float cv[3] = outputTransform( aces, Y_MIN,\n                                         Y_MID,\n                                         Y_MAX,\n                                         DISPLAY_PRI,\n                                         LIMITING_PRI,\n                                         EOTF,\n                                         SURROUND,\n                                         STRETCH_BLACK,\n                                         D60_SIM,\n                                         LEGAL_RANGE );\n\n    rOut = cv[0];\n    gOut = cv[1];\n    bOut = cv[2];\n    aOut = aIn;\n}",
            "_aces_transform_id": {
              "py/object": "opencolorio_config_aces.config.reference.discover.classify.ACESTransformID",
              "_aces_transform_id": "urn:ampas:aces:transformId:v1.5:RRTODT.Academy.P3D65_108nits_7point2nits_ST2084.a1.1.0",
              "_urn": "urn:ampas:aces:transformId:v1.5",
              "_type": "RRTODT",
              "_namespace": "Academy",
              "_name": "P3D65_108nits_7point2nits_ST2084",
              "_major_version_number": "a1",
              "_minor_version_number": "1",
              "_patch_version_number": "0",
              "_source": "ACES2065-1",
              "_target": "P3D65_108nits_7point2nits_ST2084"
            },
            "_user_name": "ACES 1.0 Output - P3D65 ST2084 (108 nits)",
            "_description": "Output Transform - P3D65 (108 cd/m^2)\n\n\nSummary :\nThis transform maps ACES onto a P3D65 ST.2084 HDR display calibrated\nto a D65 white point at 108 cd/m^2. The assumed observer adapted white is\nD65, and the viewing environment is that of a dark surround. Mid-gray\nluminance is targeted at 7.2 cd/m^2.\n\nA use case for this transform would be mastering for a theatrical release\nin Dolby Cinema.\n\nDevice Primaries :\nPrimaries are those specified in Rec. ITU-R BT.2020\nCIE 1931 chromaticities:  x         y         Y\nRed:          0.68      0.32\nGreen:        0.265     0.69\nBlue:         0.15      0.06\nWhite:        0.3127    0.329     108 cd/m^2\n18% Gray:     0.3127    0.329     7.2 cd/m^2\n\nDisplay EOTF :\nThe reference electro-optical transfer function specified in SMPTE ST\n2084-2014. This transform makes no attempt to address the Annex functions\nwhich address integer quantization.\n\nAssumed observer adapted white point:\nCIE 1931 chromaticities:    x            y\n0.3127       0.329\n\nViewing Environment:\nEnvironment specified in SMPTE RP 431-2-2007",
            "_family": "outputTransform",
            "_genus": "p3"
          }
        }
      ]
    },
    {
      "name": "Un-tone-mapped",
      "from_reference": {
        "transform_type": "BuiltinTransform",
        "style": "UTILITY - ACES-AP0_to_CIE-XYZ-D65_BFD"
      }
    }
  ],
  "looks": [
    {
      "name": "LMT - Blue Light Artifact Fix",
      "description": "LMT for desaturating blue hues to reduce clipping artifacts\n\nACEStransformID: urn:ampas:aces:transformId:v1.5:LMT.Academy.BlueLightArtifactFix.a1.1.0",
      "forward_transform": {
        "transform_type": "BuiltinTransform",
        "style": "ACES-LMT - BLUE_LIGHT_ARTIFACT_FIX"
      },
      "process_space": "ACES - ACES2065-1",
      "transforms_data": [
        {
          "ordering": "310",
          "aces_transform_id": "urn:ampas:aces:transformId:v1.5:LMT.Academy.BlueLightArtifactFix.a1.1.0",
          "builtin_transform_style": "ACES-LMT - BLUE_LIGHT_ARTIFACT_FIX",
          "linked_display_colorspace_style": "",
          "interface": "Look",
          "encoding": "",
          "categories": "",
          "ctl_transform": {
            "py/object": "opencolorio_config_aces.config.reference.discover.classify.CTLTransform",
            "_path": "/home/aswf/OpenColorIO-Config-ACES/opencolorio_config_aces/config/reference/aces-dev/transforms/ctl/lmt/LMT.Academy.BlueLightArtifactFix.ctl",
            "_code": "\n// <ACEStransformID>urn:ampas:aces:transformId:v1.5:LMT.Academy.BlueLightArtifactFix.a1.1.0</ACEStransformID>\n// <ACESuserName>ACES 1.0 Look - Blue Light Artifact Fix</ACESuserName>\n\n//\n// LMT for desaturating blue hues in order to reduce the artifact where bright \n// blue colors (e.g. sirens, headlights, LED lighting, etc.) may become \n// oversaturated or exhibit hue shifts as a result of clipping.\n// \n\n\nconst float correctionMatrix[3][3] = {\n  { 0.9404372683,  0.0083786969,  0.0005471261},\n  {-0.0183068787,  0.8286599939, -0.0008833746},\n  { 0.0778696104,  0.1629613092,  1.0003362486}\n};\n\n\nvoid main \n(\n    input varying float rIn, \n    input varying float gIn, \n    input varying float bIn, \n    input varying float aIn,\n    output varying float rOut,\n    output varying float gOut,\n    output varying float bOut,\n    output varying float aOut\n)\n{\n    float aces[3] = {rIn, gIn, bIn};\n\n    float acesMod[3] = mult_f3_f33( aces, correctionMatrix);\n\n    rOut = acesMod[0];\n    gOut = acesMod[1];\n    bOut = acesMod[2];\n    aOut = aIn;\n}",
            "_aces_transform_id": {
              "py/object": "opencolorio_config_aces.config.reference.discover.classify.ACESTransformID",
              "_aces_transform_id": "urn:ampas:aces:transformId:v1.5:LMT.Academy.BlueLightArtifactFix.a1.1.0",
              "_urn": "urn:ampas:aces:transformId:v1.5",
              "_type": "LMT",
              "_namespace": "Academy",
              "_name": "BlueLightArtifactFix",
              "_major_version_number": "a1",
              "_minor_version_number": "1",
              "_patch_version_number": "0",
              "_source": "BlueLightArtifactFix",
              "_target": "ACES2065-1"
            },
            "_user_name": "ACES 1.0 Look - Blue Light Artifact Fix",
            "_description": "LMT for desaturating blue hues in order to reduce the artifact where bright\nblue colors (e.g. sirens, headlights, LED lighting, etc.) may become\noversaturated or exhibit hue shifts as a result of clipping.",
            "_family": "lmt",
            "_genus": "undefined"
          }
        }
      ]
    },
    {
      "name": "LMT - ACES 1.3 Reference Gamut Compression",
      "description": "LMT (applied in ACES2065-1) to compress scene-referred values from common cameras into the AP1 gamut\n\nACEStransformID: urn:ampas:aces:transformId:v1.5:LMT.Academy.GamutCompress.a1.3.0",
      "forward_transform": {
        "transform_type": "BuiltinTransform",
        "style": "ACES-LMT - ACES 1.3 Reference Gamut Compression"
      },
      "process_space": "ACES - ACES2065-1",
      "transforms_data": [
        {
          "ordering": "310",
          "aces_transform_id": "urn:ampas:aces:transformId:v1.5:LMT.Academy.GamutCompress.a1.3.0",
          "builtin_transform_style": "ACES-LMT - ACES 1.3 Reference Gamut Compression",
          "linked_display_colorspace_style": "",
          "interface": "Look",
          "encoding": "",
          "categories": "",
          "ctl_transform": {
            "py/object": "opencolorio_config_aces.config.reference.discover.classify.CTLTransform",
            "_path": "/home/aswf/OpenColorIO-Config-ACES/opencolorio_config_aces/config/reference/aces-dev/transforms/ctl/lmt/LMT.Academy.GamutCompress.ctl",
            "_code": "// <ACEStransformID>urn:ampas:aces:transformId:v1.5:LMT.Academy.GamutCompress.a1.3.0</ACEStransformID>\n// <ACESuserName>ACES 1.3 Look - Gamut Compress</ACESuserName>\n\n//\n// Gamut compression algorithm to bring out-of-gamut scene-referred values into AP1\n//\n\n//\n// Usage:\n//  This transform is intended to be applied to AP0 data, immediately after the IDT, so\n//  that all grading or compositing operations are downstream of the compression, and\n//  therefore work only with positive AP1 values.\n//\n// Note:\n//  It is not recommended to bake the compression into VFX pulls, as it may be beneficial\n//  for compositors to have access to the unmodified image data.\n//\n// Direction:\n//  By default this transform operates in the forward direction, i.e. compressing the\n//  gamut. If instead an inverse operation is needed, i.e. undoing a prior gamut\n//  compression, there is a runtime flag available. In ctlrender, this can be achieved by\n//  appending '-param1 invert 1' after the '-ctl gamut_compress.ctl' string.\n//\n// Input and output: ACES2065-1\n//\n\n\n\nimport \"ACESlib.Transform_Common\";\n\n\n\n/* --- Gamut Compress Parameters --- */\n// Distance from achromatic which will be compressed to the gamut boundary\n// Values calculated to encompass the encoding gamuts of common digital cinema cameras\nconst float LIM_CYAN =  1.147;\nconst float LIM_MAGENTA = 1.264;\nconst float LIM_YELLOW = 1.312;\n\n// Percentage of the core gamut to protect\n// Values calculated to protect all the colors of the ColorChecker Classic 24 as given by\n// ISO 17321-1 and Ohta (1997)\nconst float THR_CYAN = 0.815;\nconst float THR_MAGENTA = 0.803;\nconst float THR_YELLOW = 0.880;\n\n// Aggressiveness of the compression curve\nconst float PWR = 1.2;\n\n\n\n// Calculate compressed distance\nfloat compress(float dist, float lim, float thr, float pwr, bool invert)\n{\n    float comprDist;\n    float scl;\n    float nd;\n    float p;\n\n    if (dist < thr) {\n        comprDist = dist; // No compression below threshold\n    }\n    else {\n        // Calculate scale factor for y = 1 intersect\n        scl = (lim - thr) / pow(pow((1.0 - thr) / (lim - thr), -pwr) - 1.0, 1.0 / pwr);\n\n        // Normalize distance outside threshold by scale factor\n        nd = (dist - thr) / scl;\n        p = pow(nd, pwr);\n\n        if (!invert) {\n            comprDist = thr + scl * nd / (pow(1.0 + p, 1.0 / pwr)); // Compress\n        }\n        else {\n            if (dist > (thr + scl)) {\n                comprDist = dist; // Avoid singularity\n            }\n            else {\n                comprDist = thr + scl * pow(-(p / (p - 1.0)), 1.0 / pwr); // Uncompress\n            }\n        }\n    }\n\n    return comprDist;\n}\n\n\n\nvoid main \n(\n    input varying float rIn, \n    input varying float gIn, \n    input varying float bIn, \n    input varying float aIn,\n    output varying float rOut,\n    output varying float gOut,\n    output varying float bOut,\n    output varying float aOut,\n    input uniform bool invert = false\n) \n{ \n    // Source values\n    float ACES[3] = {rIn, gIn, bIn};\n\n    // Convert to ACEScg\n    float linAP1[3] = mult_f3_f44(ACES, AP0_2_AP1_MAT);\n\n    // Achromatic axis\n    float ach = max_f3(linAP1);\n\n    // Distance from the achromatic axis for each color component aka inverse RGB ratios\n    float dist[3];\n    if (ach == 0.0) {\n        dist[0] = 0.0;\n        dist[1] = 0.0;\n        dist[2] = 0.0;\n    }\n    else {\n        dist[0] = (ach - linAP1[0]) / fabs(ach);\n        dist[1] = (ach - linAP1[1]) / fabs(ach);\n        dist[2] = (ach - linAP1[2]) / fabs(ach);\n    }\n\n    // Compress distance with parameterized shaper function\n    float comprDist[3] = {\n        compress(dist[0], LIM_CYAN, THR_CYAN, PWR, invert),\n        compress(dist[1], LIM_MAGENTA, THR_MAGENTA, PWR, invert),\n        compress(dist[2], LIM_YELLOW, THR_YELLOW, PWR, invert)\n    };\n\n    // Recalculate RGB from compressed distance and achromatic\n    float comprLinAP1[3] = {\n        ach - comprDist[0] * fabs(ach),\n        ach - comprDist[1] * fabs(ach),\n        ach - comprDist[2] * fabs(ach)\n    };\n\n    // Convert back to ACES2065-1\n    ACES = mult_f3_f44(comprLinAP1, AP1_2_AP0_MAT);\n\n    // Write output\n    rOut = ACES[0];\n    gOut = ACES[1];\n    bOut = ACES[2];\n    aOut = aIn;\n}",
            "_aces_transform_id": {
              "py/object": "opencolorio_config_aces.config.reference.discover.classify.ACESTransformID",
              "_aces_transform_id": "urn:ampas:aces:transformId:v1.5:LMT.Academy.GamutCompress.a1.3.0",
              "_urn": "urn:ampas:aces:transformId:v1.5",
              "_type": "LMT",
              "_namespace": "Academy",
              "_name": "GamutCompress",
              "_major_version_number": "a1",
              "_minor_version_number": "3",
              "_patch_version_number": "0",
              "_source": "GamutCompress",
              "_target": "ACES2065-1"
            },
            "_user_name": "ACES 1.3 Look - Gamut Compress",
            "_description": "Gamut compression algorithm to bring out-of-gamut scene-referred values into AP1\n\n\nUsage:\nThis transform is intended to be applied to AP0 data, immediately after the IDT, so\nthat all grading or compositing operations are downstream of the compression, and\ntherefore work only with positive AP1 values.\n\nNote:\nIt is not recommended to bake the compression into VFX pulls, as it may be beneficial\nfor compositors to have access to the unmodified image data.\n\nDirection:\nBy default this transform operates in the forward direction, i.e. compressing the\ngamut. If instead an inverse operation is needed, i.e. undoing a prior gamut\ncompression, there is a runtime flag available. In ctlrender, this can be achieved by\nappending '-param1 invert 1' after the '-ctl gamut_compress.ctl' string.\n\nInput and output: ACES2065-1",
            "_family": "lmt",
            "_genus": "undefined"
          }
        }
      ]
    }
  ],
  "shared_views": [
    {
      "display": "Display - sRGB",
      "view": "Output - SDR Video - ACES 1.0",
      "view_transform": "Output - SDR Video - ACES 1.0"
    },
    {
      "display": "Display - Rec.1886 / Rec.709 Video",
      "view": "Output - SDR Video - ACES 1.0",
      "view_transform": "Output - SDR Video - ACES 1.0"
    },
    {
      "display": "Display - Rec.1886 / Rec.2020 Video",
      "view": "Output - SDR Video - ACES 1.0",
      "view_transform": "Output - SDR Video - ACES 1.0"
    },
    {
      "display": "Display - sRGB",
      "view": "Output - SDR Video (D60 sim on D65) - ACES 1.0",
      "view_transform": "Output - SDR Video (D60 sim on D65) - ACES 1.0"
    },
    {
      "display": "Display - Rec.1886 / Rec.709 Video",
      "view": "Output - SDR Video (D60 sim on D65) - ACES 1.0",
      "view_transform": "Output - SDR Video (D60 sim on D65) - ACES 1.0"
    },
    {
      "display": "Display - Rec.1886 / Rec.2020 Video",
      "view": "Output - SDR Video (P3 lim) - ACES 1.1",
      "view_transform": "Output - SDR Video (P3 lim) - ACES 1.1"
    },
    {
      "display": "Display - Rec.1886 / Rec.2020 Video",
      "view": "Output - SDR Video (Rec.709 lim) - ACES 1.1",
      "view_transform": "Output - SDR Video (Rec.709 lim) - ACES 1.1"
    },
    {
      "display": "Display - Rec.2100-HLG",
      "view": "Output - HDR Video (1000 nits & Rec.2020 lim) - ACES 1.1",
      "view_transform": "Output - HDR Video (1000 nits & Rec.2020 lim) - ACES 1.1"
    },
    {
      "display": "Display - Rec.2100-PQ",
      "view": "Output - HDR Video (1000 nits & Rec.2020 lim) - ACES 1.1",
      "view_transform": "Output - HDR Video (1000 nits & Rec.2020 lim) - ACES 1.1"
    },
    {
      "display": "Display - Rec.2100-PQ",
      "view": "Output - HDR Video (2000 nits & Rec.2020 lim) - ACES 1.1",
      "view_transform": "Output - HDR Video (2000 nits & Rec.2020 lim) - ACES 1.1"
    },
    {
      "display": "Display - Rec.2100-PQ",
      "view": "Output - HDR Video (4000 nits & Rec.2020 lim) - ACES 1.1",
      "view_transform": "Output - HDR Video (4000 nits & Rec.2020 lim) - ACES 1.1"
    },
    {
      "display": "Display - ST2084-P3-D65",
      "view": "Output - HDR Video (1000 nits & P3 lim) - ACES 1.1",
      "view_transform": "Output - HDR Video (1000 nits & P3 lim) - ACES 1.1"
    },
    {
      "display": "Display - ST2084-P3-D65",
      "view": "Output - HDR Video (2000 nits & P3 lim) - ACES 1.1",
      "view_transform": "Output - HDR Video (2000 nits & P3 lim) - ACES 1.1"
    },
    {
      "display": "Display - ST2084-P3-D65",
      "view": "Output - HDR Video (4000 nits & P3 lim) - ACES 1.1",
      "view_transform": "Output - HDR Video (4000 nits & P3 lim) - ACES 1.1"
    },
    {
      "display": "Display - P3-D60",
      "view": "Output - SDR Cinema - ACES 1.0",
      "view_transform": "Output - SDR Cinema - ACES 1.0"
    },
    {
      "display": "Display - P3-D65",
      "view": "Output - SDR Cinema - ACES 1.0",
      "view_transform": "Output - SDR Cinema - ACES 1.0"
    },
    {
      "display": "Display - P3-D65",
      "view": "Output - SDR Cinema (D60 sim on D65) - ACES 1.1",
      "view_transform": "Output - SDR Cinema (D60 sim on D65) - ACES 1.1"
    },
    {
      "display": "Display - P3-D65",
      "view": "Output - SDR Cinema (Rec.709 lim) - ACES 1.1",
      "view_transform": "Output - SDR Cinema (Rec.709 lim) - ACES 1.1"
    },
    {
      "display": "Display - P3-DCI",
      "view": "Output - SDR Cinema (D60 sim on DCI) - ACES 1.0",
      "view_transform": "Output - SDR Cinema (D60 sim on DCI) - ACES 1.0"
    },
    {
      "display": "Display - P3-DCI",
      "view": "Output - SDR Cinema (D65 sim on DCI) - ACES 1.1",
      "view_transform": "Output - SDR Cinema (D65 sim on DCI) - ACES 1.1"
    },
    {
      "display": "Display - ST2084-P3-D65",
      "view": "Output - HDR Cinema (108 nits & P3 lim) - ACES 1.1",
      "view_transform": "Output - HDR Cinema (108 nits & P3 lim) - ACES 1.1"
    },
    {
      "display": "Display - sRGB",
      "view": "Un-tone-mapped",
      "view_transform": "Un-tone-mapped"
    },
    {
      "display": "Display - Rec.1886 / Rec.709 Video",
      "view": "Un-tone-mapped",
      "view_transform": "Un-tone-mapped"
    },
    {
      "display": "Display - Rec.1886 / Rec.2020 Video",
      "view": "Un-tone-mapped",
      "view_transform": "Un-tone-mapped"
    },
    {
      "display": "Display - Rec.2100-HLG",
      "view": "Un-tone-mapped",
      "view_transform": "Un-tone-mapped"
    },
    {
      "display": "Display - Rec.2100-PQ",
      "view": "Un-tone-mapped",
      "view_transform": "Un-tone-mapped"
    },
    {
      "display": "Display - ST2084-P3-D65",
      "view": "Un-tone-mapped",
      "view_transform": "Un-tone-mapped"
    },
    {
      "display": "Display - P3-D60",
      "view": "Un-tone-mapped",
      "view_transform": "Un-tone-mapped"
    },
    {
      "display": "Display - P3-D65",
      "view": "Un-tone-mapped",
      "view_transform": "Un-tone-mapped"
    },
    {
      "display": "Display - P3-DCI",
      "view": "Un-tone-mapped",
      "view_transform": "Un-tone-mapped"
    }
  ],
  "views": [
    {
      "display": "Display - sRGB",
      "view": "Output - SDR Video - ACES 1.0",
      "view_transform": "Output - SDR Video - ACES 1.0"
    },
    {
      "display": "Display - Rec.1886 / Rec.709 Video",
      "view": "Output - SDR Video - ACES 1.0",
      "view_transform": "Output - SDR Video - ACES 1.0"
    },
    {
      "display": "Display - Rec.1886 / Rec.2020 Video",
      "view": "Output - SDR Video - ACES 1.0",
      "view_transform": "Output - SDR Video - ACES 1.0"
    },
    {
      "display": "Display - sRGB",
      "view": "Output - SDR Video (D60 sim on D65) - ACES 1.0",
      "view_transform": "Output - SDR Video (D60 sim on D65) - ACES 1.0"
    },
    {
      "display": "Display - Rec.1886 / Rec.709 Video",
      "view": "Output - SDR Video (D60 sim on D65) - ACES 1.0",
      "view_transform": "Output - SDR Video (D60 sim on D65) - ACES 1.0"
    },
    {
      "display": "Display - Rec.1886 / Rec.2020 Video",
      "view": "Output - SDR Video (P3 lim) - ACES 1.1",
      "view_transform": "Output - SDR Video (P3 lim) - ACES 1.1"
    },
    {
      "display": "Display - Rec.1886 / Rec.2020 Video",
      "view": "Output - SDR Video (Rec.709 lim) - ACES 1.1",
      "view_transform": "Output - SDR Video (Rec.709 lim) - ACES 1.1"
    },
    {
      "display": "Display - Rec.2100-HLG",
      "view": "Output - HDR Video (1000 nits & Rec.2020 lim) - ACES 1.1",
      "view_transform": "Output - HDR Video (1000 nits & Rec.2020 lim) - ACES 1.1"
    },
    {
      "display": "Display - Rec.2100-PQ",
      "view": "Output - HDR Video (1000 nits & Rec.2020 lim) - ACES 1.1",
      "view_transform": "Output - HDR Video (1000 nits & Rec.2020 lim) - ACES 1.1"
    },
    {
      "display": "Display - Rec.2100-PQ",
      "view": "Output - HDR Video (2000 nits & Rec.2020 lim) - ACES 1.1",
      "view_transform": "Output - HDR Video (2000 nits & Rec.2020 lim) - ACES 1.1"
    },
    {
      "display": "Display - Rec.2100-PQ",
      "view": "Output - HDR Video (4000 nits & Rec.2020 lim) - ACES 1.1",
      "view_transform": "Output - HDR Video (4000 nits & Rec.2020 lim) - ACES 1.1"
    },
    {
      "display": "Display - ST2084-P3-D65",
      "view": "Output - HDR Video (1000 nits & P3 lim) - ACES 1.1",
      "view_transform": "Output - HDR Video (1000 nits & P3 lim) - ACES 1.1"
    },
    {
      "display": "Display - ST2084-P3-D65",
      "view": "Output - HDR Video (2000 nits & P3 lim) - ACES 1.1",
      "view_transform": "Output - HDR Video (2000 nits & P3 lim) - ACES 1.1"
    },
    {
      "display": "Display - ST2084-P3-D65",
      "view": "Output - HDR Video (4000 nits & P3 lim) - ACES 1.1",
      "view_transform": "Output - HDR Video (4000 nits & P3 lim) - ACES 1.1"
    },
    {
      "display": "Display - P3-D60",
      "view": "Output - SDR Cinema - ACES 1.0",
      "view_transform": "Output - SDR Cinema - ACES 1.0"
    },
    {
      "display": "Display - P3-D65",
      "view": "Output - SDR Cinema - ACES 1.0",
      "view_transform": "Output - SDR Cinema - ACES 1.0"
    },
    {
      "display": "Display - P3-D65",
      "view": "Output - SDR Cinema (D60 sim on D65) - ACES 1.1",
      "view_transform": "Output - SDR Cinema (D60 sim on D65) - ACES 1.1"
    },
    {
      "display": "Display - P3-D65",
      "view": "Output - SDR Cinema (Rec.709 lim) - ACES 1.1",
      "view_transform": "Output - SDR Cinema (Rec.709 lim) - ACES 1.1"
    },
    {
      "display": "Display - P3-DCI",
      "view": "Output - SDR Cinema (D60 sim on DCI) - ACES 1.0",
      "view_transform": "Output - SDR Cinema (D60 sim on DCI) - ACES 1.0"
    },
    {
      "display": "Display - P3-DCI",
      "view": "Output - SDR Cinema (D65 sim on DCI) - ACES 1.1",
      "view_transform": "Output - SDR Cinema (D65 sim on DCI) - ACES 1.1"
    },
    {
      "display": "Display - ST2084-P3-D65",
      "view": "Output - HDR Cinema (108 nits & P3 lim) - ACES 1.1",
      "view_transform": "Output - HDR Cinema (108 nits & P3 lim) - ACES 1.1"
    },
    {
      "display": "Display - sRGB",
      "view": "Un-tone-mapped",
      "view_transform": "Un-tone-mapped"
    },
    {
      "display": "Display - Rec.1886 / Rec.709 Video",
      "view": "Un-tone-mapped",
      "view_transform": "Un-tone-mapped"
    },
    {
      "display": "Display - Rec.1886 / Rec.2020 Video",
      "view": "Un-tone-mapped",
      "view_transform": "Un-tone-mapped"
    },
    {
      "display": "Display - Rec.2100-HLG",
      "view": "Un-tone-mapped",
      "view_transform": "Un-tone-mapped"
    },
    {
      "display": "Display - Rec.2100-PQ",
      "view": "Un-tone-mapped",
      "view_transform": "Un-tone-mapped"
    },
    {
      "display": "Display - ST2084-P3-D65",
      "view": "Un-tone-mapped",
      "view_transform": "Un-tone-mapped"
    },
    {
      "display": "Display - P3-D60",
      "view": "Un-tone-mapped",
      "view_transform": "Un-tone-mapped"
    },
    {
      "display": "Display - P3-D65",
      "view": "Un-tone-mapped",
      "view_transform": "Un-tone-mapped"
    },
    {
      "display": "Display - P3-DCI",
      "view": "Un-tone-mapped",
      "view_transform": "Un-tone-mapped"
    },
    {
      "display": "Display - sRGB",
      "view": "Raw",
      "colorspace": "Utility - Raw"
    },
    {
      "display": "Display - Rec.1886 / Rec.709 Video",
      "view": "Raw",
      "colorspace": "Utility - Raw"
    },
    {
      "display": "Display - Rec.1886 / Rec.2020 Video",
      "view": "Raw",
      "colorspace": "Utility - Raw"
    },
    {
      "display": "Display - Rec.2100-HLG",
      "view": "Raw",
      "colorspace": "Utility - Raw"
    },
    {
      "display": "Display - Rec.2100-PQ",
      "view": "Raw",
      "colorspace": "Utility - Raw"
    },
    {
      "display": "Display - ST2084-P3-D65",
      "view": "Raw",
      "colorspace": "Utility - Raw"
    },
    {
      "display": "Display - P3-D60",
      "view": "Raw",
      "colorspace": "Utility - Raw"
    },
    {
      "display": "Display - P3-D65",
      "view": "Raw",
      "colorspace": "Utility - Raw"
    },
    {
      "display": "Display - P3-DCI",
      "view": "Raw",
      "colorspace": "Utility - Raw"
    }
  ],
  "active_displays": [
    "Display - sRGB",
    "Display - Rec.1886 / Rec.709 Video",
    "Display - Rec.1886 / Rec.2020 Video",
    "Display - Rec.2100-HLG",
    "Display - Rec.2100-PQ",
    "Display - ST2084-P3-D65",
    "Display - P3-D60",
    "Display - P3-D65",
    "Display - P3-DCI"
  ],
  "active_views": [
    "Output - SDR Video - ACES 1.0",
    "Output - SDR Video (D60 sim on D65) - ACES 1.0",
    "Output - SDR Video (P3 lim) - ACES 1.1",
    "Output - SDR Video (Rec.709 lim) - ACES 1.1",
    "Output - HDR Video (1000 nits & Rec.2020 lim) - ACES 1.1",
    "Output - HDR Video (2000 nits & Rec.2020 lim) - ACES 1.1",
    "Output - HDR Video (4000 nits & Rec.2020 lim) - ACES 1.1",
    "Output - HDR Video (1000 nits & P3 lim) - ACES 1.1",
    "Output - HDR Video (2000 nits & P3 lim) - ACES 1.1",
    "Output - HDR Video (4000 nits & P3 lim) - ACES 1.1",
    "Output - SDR Cinema - ACES 1.0",
    "Output - SDR Cinema (D60 sim on D65) - ACES 1.1",
    "Output - SDR Cinema (Rec.709 lim) - ACES 1.1",
    "Output - SDR Cinema (D60 sim on DCI) - ACES 1.0",
    "Output - SDR Cinema (D65 sim on DCI) - ACES 1.1",
    "Output - HDR Cinema (108 nits & P3 lim) - ACES 1.1",
    "Raw"
  ],
  "file_rules": [
    {
      "name": "Default",
      "colorspace": "ACES - ACES2065-1"
    }
  ],
  "viewing_rules": [],
  "inactive_colorspaces": [
    "CIE-XYZ-D65"
  ],
  "default_view_transform": "Un-tone-mapped"
}